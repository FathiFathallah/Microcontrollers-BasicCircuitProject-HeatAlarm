

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Jul 23 04:28:47 2022

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    64                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    65  0000                     
    66                           ; Version 2.05
    67                           ; Generated 20/12/2018 GMT
    68                           ; 
    69                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    70                           ; All rights reserved.
    71                           ; 
    72                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    73                           ; 
    74                           ; Redistribution and use in source and binary forms, with or without modification, are
    75                           ; permitted provided that the following conditions are met:
    76                           ; 
    77                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    78                           ;        conditions and the following disclaimer.
    79                           ; 
    80                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    81                           ;        of conditions and the following disclaimer in the documentation and/or other
    82                           ;        materials provided with the distribution.
    83                           ; 
    84                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    85                           ;        software without specific prior written permission.
    86                           ; 
    87                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    88                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    89                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    90                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    91                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    92                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    93                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    94                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    95                           ; 
    96                           ; 
    97                           ; Code-generator required, PIC18F4620 Definitions
    98                           ; 
    99                           ; SFR Addresses
   100  0000                     
   101                           	psect	idataBANK0
   102  0039AC                     __pidataBANK0:
   103                           	opt callstack 0
   104                           
   105                           ;initializer for _LCD_INIT_STRING
   106  0039AC  28                 	db	40
   107  0039AD  0C                 	db	12
   108  0039AE  01                 	db	1
   109  0039AF  06                 	db	6
   110  0000                     _ADRESL	set	4035
   111  0000                     _ADRESH	set	4036
   112  0000                     _ADCON2	set	4032
   113  0000                     _ADCON0bits	set	4034
   114  0000                     _PORTEbits	set	3972
   115  0000                     _INTCON	set	4082
   116  0000                     _TRISC	set	3988
   117  0000                     _TRISE	set	3990
   118  0000                     _TRISD	set	3989
   119  0000                     _TRISB	set	3987
   120  0000                     _TRISA	set	3986
   121  0000                     _LATE	set	3981
   122  0000                     _LATD	set	3980
   123  0000                     _LATC	set	3979
   124  0000                     _LATB	set	3978
   125  0000                     _LATA	set	3977
   126  0000                     _ADCON0	set	4034
   127  0000                     _ADCON1	set	4033
   128  0000                     _TXREG	set	4013
   129  0000                     _PIR1bits	set	3998
   130  0000                     _RCREG	set	4014
   131  0000                     _RCSTAbits	set	4011
   132  0000                     _RCSTA	set	4011
   133  0000                     _TXSTAbits	set	4012
   134  0000                     _SPBRGH	set	4016
   135  0000                     _SPBRG	set	4015
   136  0000                     _TXSTA	set	4012
   137  0000                     _BAUDCONbits	set	4024
   138  0000                     
   139                           	psect	smallconst
   140  001000                     __psmallconst:
   141                           	opt callstack 0
   142  001000  00                 	db	0
   143  001001                     STR_8:
   144  001001  3D                 	db	61	;'='
   145  001002  3D                 	db	61	;'='
   146  001003  3D                 	db	61	;'='
   147  001004  3D                 	db	61	;'='
   148  001005  3D                 	db	61	;'='
   149  001006  3D                 	db	61	;'='
   150  001007  3D                 	db	61	;'='
   151  001008  3D                 	db	61	;'='
   152  001009  3D                 	db	61	;'='
   153  00100A  3D                 	db	61	;'='
   154  00100B  3D                 	db	61	;'='
   155  00100C  3D                 	db	61	;'='
   156  00100D  3D                 	db	61	;'='
   157  00100E  3D                 	db	61	;'='
   158  00100F  3D                 	db	61	;'='
   159  001010  3D                 	db	61	;'='
   160  001011  3D                 	db	61	;'='
   161  001012  3D                 	db	61	;'='
   162  001013  3D                 	db	61	;'='
   163  001014  3D                 	db	61	;'='
   164  001015  3D                 	db	61	;'='
   165  001016  3D                 	db	61	;'='
   166  001017  3D                 	db	61	;'='
   167  001018  3D                 	db	61	;'='
   168  001019  3D                 	db	61	;'='
   169  00101A  3D                 	db	61	;'='
   170  00101B  3D                 	db	61	;'='
   171  00101C  3D                 	db	61	;'='
   172  00101D  3D                 	db	61	;'='
   173  00101E  3D                 	db	61	;'='
   174  00101F  3D                 	db	61	;'='
   175  001020  3D                 	db	61	;'='
   176  001021  3D                 	db	61	;'='
   177  001022  3D                 	db	61	;'='
   178  001023  3D                 	db	61	;'='
   179  001024  3D                 	db	61	;'='
   180  001025  3D                 	db	61	;'='
   181  001026  3D                 	db	61	;'='
   182  001027  3D                 	db	61	;'='
   183  001028  3D                 	db	61	;'='
   184  001029  0D                 	db	13
   185  00102A  0A                 	db	10
   186  00102B  00                 	db	0
   187  00102C                     STR_1:
   188  00102C  54                 	db	84	;'T'
   189  00102D  65                 	db	101	;'e'
   190  00102E  6D                 	db	109	;'m'
   191  00102F  70                 	db	112	;'p'
   192  001030  3A                 	db	58	;':'
   193  001031  20                 	db	32
   194  001032  25                 	db	37
   195  001033  35                 	db	53	;'5'
   196  001034  2E                 	db	46
   197  001035  31                 	db	49	;'1'
   198  001036  66                 	db	102	;'f'
   199  001037  43                 	db	67	;'C'
   200  001038  00                 	db	0
   201  001039                     STR_6:
   202  001039  57                 	db	87	;'W'
   203  00103A  41                 	db	65	;'A'
   204  00103B  52                 	db	82	;'R'
   205  00103C  4E                 	db	78	;'N'
   206  00103D  49                 	db	73	;'I'
   207  00103E  4E                 	db	78	;'N'
   208  00103F  47                 	db	71	;'G'
   209  001040  21                 	db	33
   210  001041  21                 	db	33
   211  001042  0D                 	db	13
   212  001043  0A                 	db	10
   213  001044  00                 	db	0
   214  001045                     STR_5:
   215  001045  54                 	db	84	;'T'
   216  001046  3A                 	db	58	;':'
   217  001047  25                 	db	37
   218  001048  35                 	db	53	;'5'
   219  001049  2E                 	db	46
   220  00104A  31                 	db	49	;'1'
   221  00104B  66                 	db	102	;'f'
   222  00104C  43                 	db	67	;'C'
   223  00104D  0D                 	db	13
   224  00104E  0A                 	db	10
   225  00104F  00                 	db	0
   226  001050                     STR_7:
   227  001050  47                 	db	71	;'G'
   228  001051  4F                 	db	79	;'O'
   229  001052  4F                 	db	79	;'O'
   230  001053  44                 	db	68	;'D'
   231  001054  0D                 	db	13
   232  001055  0A                 	db	10
   233  001056  00                 	db	0
   234  001057                     STR_2:
   235  001057  46                 	db	70	;'F'
   236  001058  41                 	db	65	;'A'
   237  001059  54                 	db	84	;'T'
   238  00105A  48                 	db	72	;'H'
   239  00105B  49                 	db	73	;'I'
   240  00105C  00                 	db	0
   241  00105D                     STR_9:
   242  00105D  49                 	db	73	;'I'
   243  00105E  4E                 	db	78	;'N'
   244  00105F  46                 	db	70	;'F'
   245  001060  00                 	db	0
   246  001061                     STR_13:
   247  001061  4E                 	db	78	;'N'
   248  001062  41                 	db	65	;'A'
   249  001063  4E                 	db	78	;'N'
   250  001064  00                 	db	0
   251  001065                     STR_10:
   252  001065  69                 	db	105	;'i'
   253  001066  6E                 	db	110	;'n'
   254  001067  66                 	db	102	;'f'
   255  001068  00                 	db	0
   256  001069                     STR_14:
   257  001069  6E                 	db	110	;'n'
   258  00106A  61                 	db	97	;'a'
   259  00106B  6E                 	db	110	;'n'
   260  00106C  00                 	db	0
   261  00106D                     STR_17:
   262  00106D  6C                 	db	108	;'l'
   263  00106E  66                 	db	102	;'f'
   264  00106F  00                 	db	0
   265  0000                     
   266                           ; #config settings
   267  001070  00                 	db	0	; dummy byte at the end
   268  0000                     
   269                           	psect	cinit
   270  003402                     __pcinit:
   271                           	opt callstack 0
   272  003402                     start_initialization:
   273                           	opt callstack 0
   274  003402                     __initialization:
   275                           	opt callstack 0
   276                           
   277                           ; Initialize objects allocated to BANK0 (4 bytes)
   278                           ; load TBLPTR registers with __pidataBANK0
   279  003402  0EAC               	movlw	low __pidataBANK0
   280  003404  6EF6               	movwf	tblptrl,c
   281  003406  0E39               	movlw	high __pidataBANK0
   282  003408  6EF7               	movwf	tblptrh,c
   283  00340A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   284  00340C  6EF8               	movwf	tblptru,c
   285  00340E  EE00  F0E8         	lfsr	0,__pdataBANK0
   286  003412  EE10 F004          	lfsr	1,4
   287  003416                     copy_data0:
   288  003416  0009               	tblrd		*+
   289  003418  CFF5 FFEE          	movff	tablat,postinc0
   290  00341C  50E5               	movf	postdec1,w,c
   291  00341E  50E1               	movf	fsr1l,w,c
   292  003420  E1FA               	bnz	copy_data0
   293                           
   294                           ; Clear objects allocated to BANK2 (64 bytes)
   295  003422  EE02  F000         	lfsr	0,__pbssBANK2
   296  003426  0E40               	movlw	64
   297  003428                     clear_0:
   298  003428  6AEE               	clrf	postinc0,c
   299  00342A  06E8               	decf	wreg,f,c
   300  00342C  E1FD               	bnz	clear_0
   301                           
   302                           ; Clear objects allocated to BANK1 (144 bytes)
   303  00342E  EE01  F000         	lfsr	0,__pbssBANK1
   304  003432  0E90               	movlw	144
   305  003434                     clear_1:
   306  003434  6AEE               	clrf	postinc0,c
   307  003436  06E8               	decf	wreg,f,c
   308  003438  E1FD               	bnz	clear_1
   309                           
   310                           ; Clear objects allocated to BANK0 (16 bytes)
   311  00343A  EE00  F0D8         	lfsr	0,__pbssBANK0
   312  00343E  0E10               	movlw	16
   313  003440                     clear_2:
   314  003440  6AEE               	clrf	postinc0,c
   315  003442  06E8               	decf	wreg,f,c
   316  003444  E1FD               	bnz	clear_2
   317                           
   318                           ; Clear objects allocated to COMRAM (4 bytes)
   319  003446  6A7F               	clrf	(__pbssCOMRAM+3)& (0+255),c
   320  003448  6A7E               	clrf	(__pbssCOMRAM+2)& (0+255),c
   321  00344A  6A7D               	clrf	(__pbssCOMRAM+1)& (0+255),c
   322  00344C  6A7C               	clrf	__pbssCOMRAM& (0+255),c
   323  00344E                     end_of_initialization:
   324                           	opt callstack 0
   325  00344E                     __end_of__initialization:
   326                           	opt callstack 0
   327  00344E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   328  003450  6EF8               	movwf	tblptru,c
   329  003452  0100               	movlb	0
   330  003454  EF87  F014         	goto	_main	;jump to C main() function
   331                           
   332                           	psect	bssCOMRAM
   333  00007C                     __pbssCOMRAM:
   334                           	opt callstack 0
   335  00007C                     _prec:
   336                           	opt callstack 0
   337  00007C                     	ds	2
   338  00007E                     _flags:
   339                           	opt callstack 0
   340  00007E                     	ds	2
   341                           
   342                           	psect	bssBANK0
   343  0000D8                     __pbssBANK0:
   344                           	opt callstack 0
   345  0000D8                     floorf@F524:
   346                           	opt callstack 0
   347  0000D8                     	ds	4
   348  0000DC                     ___fpclassifyf@F463:
   349                           	opt callstack 0
   350  0000DC                     	ds	4
   351  0000E0                     _SP:
   352                           	opt callstack 0
   353  0000E0                     	ds	4
   354  0000E4                     _nout:
   355                           	opt callstack 0
   356  0000E4                     	ds	2
   357  0000E6                     _width:
   358                           	opt callstack 0
   359  0000E6                     	ds	2
   360                           
   361                           	psect	dataBANK0
   362  0000E8                     __pdataBANK0:
   363                           	opt callstack 0
   364  0000E8                     _LCD_INIT_STRING:
   365                           	opt callstack 0
   366  0000E8                     	ds	4
   367                           
   368                           	psect	bssBANK1
   369  000100                     __pbssBANK1:
   370                           	opt callstack 0
   371  000100                     _dbuf:
   372                           	opt callstack 0
   373  000100                     	ds	80
   374  000150                     _F:
   375                           	opt callstack 0
   376  000150                     	ds	64
   377                           
   378                           	psect	bssBANK2
   379  000200                     __pbssBANK2:
   380                           	opt callstack 0
   381  000200                     _J:
   382                           	opt callstack 0
   383  000200                     	ds	64
   384                           
   385                           	psect	cstackBANK1
   386  000190                     __pcstackBANK1:
   387                           	opt callstack 0
   388  000190                     main@Buffer:
   389                           	opt callstack 0
   390                           
   391                           ; 64 bytes @ 0x0
   392  000190                     	ds	64
   393                           
   394                           	psect	cstackBANK0
   395  000080                     __pcstackBANK0:
   396                           	opt callstack 0
   397  000080                     efgtoa@ou:
   398                           	opt callstack 0
   399                           
   400                           ; 4 bytes @ 0x0
   401  000080                     	ds	4
   402  000084                     _efgtoa$654:
   403                           	opt callstack 0
   404                           
   405                           ; 2 bytes @ 0x4
   406  000084                     	ds	2
   407  000086                     _efgtoa$655:
   408                           	opt callstack 0
   409                           
   410                           ; 2 bytes @ 0x6
   411  000086                     	ds	2
   412  000088                     _efgtoa$660:
   413                           	opt callstack 0
   414                           
   415                           ; 2 bytes @ 0x8
   416  000088                     	ds	2
   417  00008A                     _efgtoa$664:
   418                           	opt callstack 0
   419                           
   420                           ; 2 bytes @ 0xA
   421  00008A                     	ds	2
   422  00008C                     _efgtoa$665:
   423                           	opt callstack 0
   424                           
   425                           ; 2 bytes @ 0xC
   426  00008C                     	ds	2
   427  00008E                     _efgtoa$666:
   428                           	opt callstack 0
   429                           
   430                           ; 2 bytes @ 0xE
   431  00008E                     	ds	2
   432  000090                     efgtoa@t:
   433                           	opt callstack 0
   434                           
   435                           ; 2 bytes @ 0x10
   436  000090                     	ds	2
   437  000092                     efgtoa@pp:
   438                           	opt callstack 0
   439                           
   440                           ; 2 bytes @ 0x12
   441  000092                     	ds	2
   442  000094                     efgtoa@m:
   443                           	opt callstack 0
   444                           
   445                           ; 2 bytes @ 0x14
   446  000094                     	ds	2
   447  000096                     efgtoa@ne:
   448                           	opt callstack 0
   449                           
   450                           ; 2 bytes @ 0x16
   451  000096                     	ds	2
   452  000098                     efgtoa@d:
   453                           	opt callstack 0
   454                           
   455                           ; 2 bytes @ 0x18
   456  000098                     	ds	2
   457  00009A                     efgtoa@sign:
   458                           	opt callstack 0
   459                           
   460                           ; 2 bytes @ 0x1A
   461  00009A                     	ds	2
   462  00009C                     efgtoa@p:
   463                           	opt callstack 0
   464                           
   465                           ; 2 bytes @ 0x1C
   466  00009C                     	ds	2
   467  00009E                     efgtoa@nmode:
   468                           	opt callstack 0
   469                           
   470                           ; 1 bytes @ 0x1E
   471  00009E                     	ds	1
   472  00009F                     efgtoa@w:
   473                           	opt callstack 0
   474                           
   475                           ; 2 bytes @ 0x1F
   476  00009F                     	ds	2
   477  0000A1                     efgtoa@mode:
   478                           	opt callstack 0
   479                           
   480                           ; 1 bytes @ 0x21
   481  0000A1                     	ds	1
   482  0000A2                     efgtoa@h:
   483                           	opt callstack 0
   484                           
   485                           ; 4 bytes @ 0x22
   486  0000A2                     	ds	4
   487  0000A6                     efgtoa@l:
   488                           	opt callstack 0
   489                           
   490                           ; 4 bytes @ 0x26
   491  0000A6                     	ds	4
   492  0000AA                     efgtoa@i:
   493                           	opt callstack 0
   494                           
   495                           ; 2 bytes @ 0x2A
   496  0000AA                     	ds	2
   497  0000AC                     efgtoa@g:
   498                           	opt callstack 0
   499                           
   500                           ; 4 bytes @ 0x2C
   501  0000AC                     	ds	4
   502  0000B0                     efgtoa@e:
   503                           	opt callstack 0
   504                           
   505                           ; 2 bytes @ 0x30
   506  0000B0                     	ds	2
   507  0000B2                     efgtoa@n:
   508                           	opt callstack 0
   509                           
   510                           ; 2 bytes @ 0x32
   511  0000B2                     	ds	2
   512  0000B4                     efgtoa@u:
   513                           	opt callstack 0
   514                           
   515                           ; 4 bytes @ 0x34
   516  0000B4                     	ds	4
   517  0000B8                     _vfpfcnvrt$680:
   518                           	opt callstack 0
   519                           
   520                           ; 2 bytes @ 0x38
   521  0000B8                     	ds	2
   522  0000BA                     _vfpfcnvrt$681:
   523                           	opt callstack 0
   524                           
   525                           ; 2 bytes @ 0x3A
   526  0000BA                     	ds	2
   527  0000BC                     _vfpfcnvrt$685:
   528                           	opt callstack 0
   529                           
   530                           ; 2 bytes @ 0x3C
   531  0000BC                     	ds	2
   532  0000BE                     vfpfcnvrt@f:
   533                           	opt callstack 0
   534                           
   535                           ; 4 bytes @ 0x3E
   536  0000BE                     	ds	4
   537  0000C2                     vfpfcnvrt@ct:
   538                           	opt callstack 0
   539                           
   540                           ; 3 bytes @ 0x42
   541  0000C2                     	ds	3
   542  0000C5                     vfpfcnvrt@c:
   543                           	opt callstack 0
   544                           
   545                           ; 1 bytes @ 0x45
   546  0000C5                     	ds	1
   547  0000C6                     ?_sprintf:
   548                           	opt callstack 0
   549  0000C6                     sprintf@s:
   550                           	opt callstack 0
   551                           
   552                           ; 2 bytes @ 0x46
   553  0000C6                     	ds	2
   554  0000C8                     sprintf@fmt:
   555                           	opt callstack 0
   556                           
   557                           ; 2 bytes @ 0x48
   558  0000C8                     	ds	8
   559  0000D0                     sprintf@ap:
   560                           	opt callstack 0
   561                           
   562                           ; 2 bytes @ 0x50
   563  0000D0                     	ds	2
   564  0000D2                     sprintf@f:
   565                           	opt callstack 0
   566                           
   567                           ; 6 bytes @ 0x52
   568  0000D2                     	ds	6
   569                           
   570                           	psect	cstackCOMRAM
   571  000001                     __pcstackCOMRAM:
   572                           	opt callstack 0
   573  000001                     ??_delay_cycles:
   574  000001                     ?_strlen:
   575                           	opt callstack 0
   576  000001                     ?___fpclassifyf:
   577                           	opt callstack 0
   578  000001                     ?_isupper:
   579                           	opt callstack 0
   580  000001                     ?_isdigit:
   581                           	opt callstack 0
   582  000001                     ?_strncmp:
   583                           	opt callstack 0
   584  000001                     ?_isspace:
   585                           	opt callstack 0
   586  000001                     ?_read_adc_raw_no_lib:
   587                           	opt callstack 0
   588  000001                     ?___wmul:
   589                           	opt callstack 0
   590  000001                     ?___awdiv:
   591                           	opt callstack 0
   592  000001                     ?___awmod:
   593                           	opt callstack 0
   594  000001                     ?___fladd:
   595                           	opt callstack 0
   596  000001                     ?___flneg:
   597                           	opt callstack 0
   598  000001                     ?___fltol:
   599                           	opt callstack 0
   600  000001                     send_byte_no_lib@c:
   601                           	opt callstack 0
   602  000001                     delay_ms@n:
   603                           	opt callstack 0
   604  000001                     ___wmul@multiplier:
   605                           	opt callstack 0
   606  000001                     ___awdiv@dividend:
   607                           	opt callstack 0
   608  000001                     ___awmod@dividend:
   609                           	opt callstack 0
   610  000001                     isdigit@c:
   611                           	opt callstack 0
   612  000001                     isspace@c:
   613                           	opt callstack 0
   614  000001                     isupper@c:
   615                           	opt callstack 0
   616  000001                     fputc@c:
   617                           	opt callstack 0
   618  000001                     strcpy@dest:
   619                           	opt callstack 0
   620  000001                     strlen@s:
   621                           	opt callstack 0
   622  000001                     strncmp@_l:
   623                           	opt callstack 0
   624  000001                     ___fleq@ff1:
   625                           	opt callstack 0
   626  000001                     ___flneg@f1:
   627                           	opt callstack 0
   628  000001                     ___fltol@f1:
   629                           	opt callstack 0
   630  000001                     ___fladd@b:
   631                           	opt callstack 0
   632  000001                     ___fpclassifyf@x:
   633                           	opt callstack 0
   634                           
   635                           ; 4 bytes @ 0x0
   636  000001                     	ds	1
   637  000002                     send_string_no_lib@p:
   638                           	opt callstack 0
   639                           
   640                           ; 2 bytes @ 0x1
   641  000002                     	ds	1
   642  000003                     ??_isupper:
   643  000003                     ??_isdigit:
   644  000003                     ??_isspace:
   645  000003                     ??_read_adc_raw_no_lib:
   646  000003                     delay_ms@i:
   647                           	opt callstack 0
   648  000003                     ___wmul@multiplicand:
   649                           	opt callstack 0
   650  000003                     ___awdiv@divisor:
   651                           	opt callstack 0
   652  000003                     ___awmod@divisor:
   653                           	opt callstack 0
   654  000003                     fputc@fp:
   655                           	opt callstack 0
   656  000003                     strcpy@src:
   657                           	opt callstack 0
   658  000003                     strlen@a:
   659                           	opt callstack 0
   660  000003                     strncmp@_r:
   661                           	opt callstack 0
   662                           
   663                           ; 2 bytes @ 0x2
   664  000003                     	ds	1
   665  000004                     delay_cycles@n:
   666                           	opt callstack 0
   667                           
   668                           ; 1 bytes @ 0x3
   669  000004                     	ds	1
   670  000005                     ??_fputc:
   671  000005                     ??___fpclassifyf:
   672  000005                     ??_strcpy:
   673  000005                     ??___fltol:
   674  000005                     ___awdiv@counter:
   675                           	opt callstack 0
   676  000005                     ___awmod@counter:
   677                           	opt callstack 0
   678  000005                     delay_cycles@x:
   679                           	opt callstack 0
   680  000005                     read_adc_raw_no_lib@raw_value:
   681                           	opt callstack 0
   682  000005                     ___wmul@product:
   683                           	opt callstack 0
   684  000005                     strncmp@n:
   685                           	opt callstack 0
   686  000005                     ___fleq@ff2:
   687                           	opt callstack 0
   688  000005                     ___fladd@a:
   689                           	opt callstack 0
   690                           
   691                           ; 4 bytes @ 0x4
   692  000005                     	ds	1
   693  000006                     ___awdiv@sign:
   694                           	opt callstack 0
   695  000006                     ___awmod@sign:
   696                           	opt callstack 0
   697                           
   698                           ; 1 bytes @ 0x5
   699  000006                     	ds	1
   700  000007                     ??_strncmp:
   701  000007                     ??_lcd_send_nibble:
   702  000007                     ?_tolower:
   703                           	opt callstack 0
   704  000007                     ?___xxtofl:
   705                           	opt callstack 0
   706  000007                     read_adc_raw_no_lib@channel:
   707                           	opt callstack 0
   708  000007                     _isspace$1187:
   709                           	opt callstack 0
   710  000007                     ___awdiv@quotient:
   711                           	opt callstack 0
   712  000007                     strcpy@s:
   713                           	opt callstack 0
   714  000007                     tolower@c:
   715                           	opt callstack 0
   716  000007                     ___xxtofl@val:
   717                           	opt callstack 0
   718                           
   719                           ; 4 bytes @ 0x6
   720  000007                     	ds	1
   721  000008                     ?_atoi:
   722                           	opt callstack 0
   723  000008                     lcd_send_nibble@n:
   724                           	opt callstack 0
   725  000008                     atoi@s:
   726                           	opt callstack 0
   727  000008                     strncmp@l:
   728                           	opt callstack 0
   729                           
   730                           ; 2 bytes @ 0x7
   731  000008                     	ds	1
   732  000009                     ??_tolower:
   733  000009                     ??___fladd:
   734  000009                     ??___fleq:
   735  000009                     lcd_send_byte@n:
   736                           	opt callstack 0
   737  000009                     ___fltol@sign1:
   738                           	opt callstack 0
   739  000009                     ___fpclassifyf@e:
   740                           	opt callstack 0
   741  000009                     strcpy@d:
   742                           	opt callstack 0
   743                           
   744                           ; 2 bytes @ 0x8
   745  000009                     	ds	1
   746  00000A                     ??_atoi:
   747  00000A                     lcd_send_byte@cm_data:
   748                           	opt callstack 0
   749  00000A                     ___fltol@exp1:
   750                           	opt callstack 0
   751  00000A                     fputs@s:
   752                           	opt callstack 0
   753  00000A                     strncmp@r:
   754                           	opt callstack 0
   755                           
   756                           ; 2 bytes @ 0x9
   757  00000A                     	ds	1
   758  00000B                     ??___xxtofl:
   759  00000B                     lcd_init@i:
   760                           	opt callstack 0
   761  00000B                     lcd_gotoxy@y:
   762                           	opt callstack 0
   763  00000B                     ___fpclassifyf@u:
   764                           	opt callstack 0
   765                           
   766                           ; 4 bytes @ 0xA
   767  00000B                     	ds	1
   768  00000C                     ??_lcd_gotoxy:
   769  00000C                     fputs@fp:
   770                           	opt callstack 0
   771                           
   772                           ; 2 bytes @ 0xB
   773  00000C                     	ds	1
   774  00000D                     ___fladd@signs:
   775                           	opt callstack 0
   776  00000D                     _tolower$1272:
   777                           	opt callstack 0
   778                           
   779                           ; 2 bytes @ 0xC
   780  00000D                     	ds	1
   781  00000E                     lcd_gotoxy@x:
   782                           	opt callstack 0
   783  00000E                     ___fladd@aexp:
   784                           	opt callstack 0
   785  00000E                     fputs@c:
   786                           	opt callstack 0
   787  00000E                     atoi@neg:
   788                           	opt callstack 0
   789                           
   790                           ; 2 bytes @ 0xD
   791  00000E                     	ds	1
   792  00000F                     lcd_gotoxy@address:
   793                           	opt callstack 0
   794  00000F                     ___fladd@bexp:
   795                           	opt callstack 0
   796  00000F                     ___xxtofl@sign:
   797                           	opt callstack 0
   798  00000F                     fputs@i:
   799                           	opt callstack 0
   800                           
   801                           ; 2 bytes @ 0xE
   802  00000F                     	ds	1
   803  000010                     ??_lcd_putc:
   804  000010                     ___fladd@grs:
   805                           	opt callstack 0
   806  000010                     ___xxtofl@exp:
   807                           	opt callstack 0
   808  000010                     _atoi$1156:
   809                           	opt callstack 0
   810                           
   811                           ; 2 bytes @ 0xF
   812  000010                     	ds	1
   813  000011                     ?_pad:
   814                           	opt callstack 0
   815  000011                     pad@fp:
   816                           	opt callstack 0
   817  000011                     ___xxtofl@arg:
   818                           	opt callstack 0
   819                           
   820                           ; 4 bytes @ 0x10
   821  000011                     	ds	1
   822  000012                     lcd_putc@c:
   823                           	opt callstack 0
   824  000012                     _atoi$1158:
   825                           	opt callstack 0
   826                           
   827                           ; 2 bytes @ 0x11
   828  000012                     	ds	1
   829  000013                     lcd_puts@s:
   830                           	opt callstack 0
   831  000013                     pad@buf:
   832                           	opt callstack 0
   833                           
   834                           ; 2 bytes @ 0x12
   835  000013                     	ds	1
   836  000014                     _atoi$1157:
   837                           	opt callstack 0
   838                           
   839                           ; 1 bytes @ 0x13
   840  000014                     	ds	1
   841  000015                     ?___fldiv:
   842                           	opt callstack 0
   843  000015                     pad@p:
   844                           	opt callstack 0
   845  000015                     atoi@n:
   846                           	opt callstack 0
   847  000015                     ___fldiv@b:
   848                           	opt callstack 0
   849                           
   850                           ; 4 bytes @ 0x14
   851  000015                     	ds	2
   852  000017                     ??_pad:
   853                           
   854                           ; 1 bytes @ 0x16
   855  000017                     	ds	1
   856  000018                     pad@i:
   857                           	opt callstack 0
   858                           
   859                           ; 2 bytes @ 0x17
   860  000018                     	ds	1
   861  000019                     ___fldiv@a:
   862                           	opt callstack 0
   863                           
   864                           ; 4 bytes @ 0x18
   865  000019                     	ds	1
   866  00001A                     pad@w:
   867                           	opt callstack 0
   868                           
   869                           ; 2 bytes @ 0x19
   870  00001A                     	ds	3
   871  00001D                     ??___fldiv:
   872                           
   873                           ; 1 bytes @ 0x1C
   874  00001D                     	ds	4
   875  000021                     ___fldiv@rem:
   876                           	opt callstack 0
   877                           
   878                           ; 4 bytes @ 0x20
   879  000021                     	ds	4
   880  000025                     ___fldiv@sign:
   881                           	opt callstack 0
   882                           
   883                           ; 1 bytes @ 0x24
   884  000025                     	ds	1
   885  000026                     ___fldiv@new_exp:
   886                           	opt callstack 0
   887                           
   888                           ; 2 bytes @ 0x25
   889  000026                     	ds	2
   890  000028                     ___fldiv@grs:
   891                           	opt callstack 0
   892                           
   893                           ; 4 bytes @ 0x27
   894  000028                     	ds	4
   895  00002C                     ___fldiv@bexp:
   896                           	opt callstack 0
   897                           
   898                           ; 1 bytes @ 0x2B
   899  00002C                     	ds	1
   900  00002D                     ___fldiv@aexp:
   901                           	opt callstack 0
   902                           
   903                           ; 1 bytes @ 0x2C
   904  00002D                     	ds	1
   905  00002E                     ?_read_adc_voltage:
   906                           	opt callstack 0
   907  00002E                     ?_floorf:
   908                           	opt callstack 0
   909  00002E                     floorf@x:
   910                           	opt callstack 0
   911                           
   912                           ; 4 bytes @ 0x2D
   913  00002E                     	ds	4
   914  000032                     ??_floorf:
   915  000032                     read_adc_voltage@voltage:
   916                           	opt callstack 0
   917                           
   918                           ; 4 bytes @ 0x31
   919  000032                     	ds	4
   920  000036                     read_adc_voltage@raw_value:
   921                           	opt callstack 0
   922                           
   923                           ; 2 bytes @ 0x35
   924  000036                     	ds	2
   925  000038                     read_adc_voltage@channel:
   926                           	opt callstack 0
   927  000038                     floorf@m:
   928                           	opt callstack 0
   929                           
   930                           ; 4 bytes @ 0x37
   931  000038                     	ds	1
   932  000039                     ?___flmul:
   933                           	opt callstack 0
   934  000039                     ___flmul@b:
   935                           	opt callstack 0
   936                           
   937                           ; 4 bytes @ 0x38
   938  000039                     	ds	3
   939  00003C                     floorf@e:
   940                           	opt callstack 0
   941                           
   942                           ; 2 bytes @ 0x3B
   943  00003C                     	ds	1
   944  00003D                     ___flmul@a:
   945                           	opt callstack 0
   946                           
   947                           ; 4 bytes @ 0x3C
   948  00003D                     	ds	1
   949  00003E                     floorf@u:
   950                           	opt callstack 0
   951                           
   952                           ; 4 bytes @ 0x3D
   953  00003E                     	ds	3
   954  000041                     ??___flmul:
   955                           
   956                           ; 1 bytes @ 0x40
   957  000041                     	ds	4
   958  000045                     ___flmul@sign:
   959                           	opt callstack 0
   960                           
   961                           ; 1 bytes @ 0x44
   962  000045                     	ds	1
   963  000046                     ___flmul@grs:
   964                           	opt callstack 0
   965                           
   966                           ; 4 bytes @ 0x45
   967  000046                     	ds	4
   968  00004A                     ___flmul@aexp:
   969                           	opt callstack 0
   970                           
   971                           ; 1 bytes @ 0x49
   972  00004A                     	ds	1
   973  00004B                     ___flmul@bexp:
   974                           	opt callstack 0
   975                           
   976                           ; 1 bytes @ 0x4A
   977  00004B                     	ds	1
   978  00004C                     ___flmul@prod:
   979                           	opt callstack 0
   980                           
   981                           ; 4 bytes @ 0x4B
   982  00004C                     	ds	4
   983  000050                     ___flmul@temp:
   984                           	opt callstack 0
   985                           
   986                           ; 2 bytes @ 0x4F
   987  000050                     	ds	2
   988  000052                     ?___flsub:
   989                           	opt callstack 0
   990  000052                     ___flge@ff1:
   991                           	opt callstack 0
   992  000052                     ___flsub@b:
   993                           	opt callstack 0
   994                           
   995                           ; 4 bytes @ 0x51
   996  000052                     	ds	4
   997  000056                     ___flge@ff2:
   998                           	opt callstack 0
   999  000056                     ___flsub@a:
  1000                           	opt callstack 0
  1001                           
  1002                           ; 4 bytes @ 0x55
  1003  000056                     	ds	4
  1004  00005A                     ??___flge:
  1005                           
  1006                           ; 1 bytes @ 0x59
  1007  00005A                     	ds	4
  1008  00005E                     ?_efgtoa:
  1009                           	opt callstack 0
  1010  00005E                     efgtoa@fp:
  1011                           	opt callstack 0
  1012                           
  1013                           ; 2 bytes @ 0x5D
  1014  00005E                     	ds	2
  1015  000060                     efgtoa@f:
  1016                           	opt callstack 0
  1017                           
  1018                           ; 4 bytes @ 0x5F
  1019  000060                     	ds	4
  1020  000064                     efgtoa@c:
  1021                           	opt callstack 0
  1022                           
  1023                           ; 1 bytes @ 0x63
  1024  000064                     	ds	1
  1025  000065                     ??_efgtoa:
  1026                           
  1027                           ; 1 bytes @ 0x64
  1028  000065                     	ds	5
  1029  00006A                     ?_vfpfcnvrt:
  1030                           	opt callstack 0
  1031  00006A                     vfpfcnvrt@fp:
  1032                           	opt callstack 0
  1033                           
  1034                           ; 2 bytes @ 0x69
  1035  00006A                     	ds	2
  1036  00006C                     vfpfcnvrt@fmt:
  1037                           	opt callstack 0
  1038                           
  1039                           ; 2 bytes @ 0x6B
  1040  00006C                     	ds	2
  1041  00006E                     vfpfcnvrt@ap:
  1042                           	opt callstack 0
  1043                           
  1044                           ; 2 bytes @ 0x6D
  1045  00006E                     	ds	2
  1046  000070                     ??_vfpfcnvrt:
  1047                           
  1048                           ; 1 bytes @ 0x6F
  1049  000070                     	ds	4
  1050  000074                     ?_vfprintf:
  1051                           	opt callstack 0
  1052  000074                     vfprintf@fp:
  1053                           	opt callstack 0
  1054                           
  1055                           ; 2 bytes @ 0x73
  1056  000074                     	ds	2
  1057  000076                     vfprintf@fmt:
  1058                           	opt callstack 0
  1059                           
  1060                           ; 2 bytes @ 0x75
  1061  000076                     	ds	2
  1062  000078                     vfprintf@ap:
  1063                           	opt callstack 0
  1064                           
  1065                           ; 2 bytes @ 0x77
  1066  000078                     	ds	2
  1067  00007A                     vfprintf@cfmt:
  1068                           	opt callstack 0
  1069                           
  1070                           ; 2 bytes @ 0x79
  1071  00007A                     	ds	2
  1072  00007C                     
  1073                           ; 1 bytes @ 0x7B
  1074 ;;
  1075 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1076 ;;
  1077 ;; *************** function _main *****************
  1078 ;; Defined at:
  1079 ;;		line 126 in file "test.c"
  1080 ;; Parameters:    Size  Location     Type
  1081 ;;		None
  1082 ;; Auto vars:     Size  Location     Type
  1083 ;;  Buffer         64    0[BANK1 ] unsigned char [64]
  1084 ;; Return value:  Size  Location     Type
  1085 ;;                  1    wreg      void 
  1086 ;; Registers used:
  1087 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1088 ;; Tracked objects:
  1089 ;;		On entry : 0/0
  1090 ;;		On exit  : 0/0
  1091 ;;		Unchanged: 0/0
  1092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1094 ;;      Locals:         0       0      64       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1096 ;;      Totals:         0       0      64       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1097 ;;Total ram usage:       64 bytes
  1098 ;; Hardware stack levels required when called:    9
  1099 ;; This function calls:
  1100 ;;		___flge
  1101 ;;		___flmul
  1102 ;;		_delay_ms
  1103 ;;		_display
  1104 ;;		_initPorts
  1105 ;;		_init_adc_no_lib
  1106 ;;		_lcd_init
  1107 ;;		_lcd_putc
  1108 ;;		_lcd_send_byte
  1109 ;;		_read_adc_voltage
  1110 ;;		_send_string_no_lib
  1111 ;;		_setupSerial
  1112 ;;		_sprintf
  1113 ;; This function is called by:
  1114 ;;		Startup code after reset
  1115 ;; This function uses a non-reentrant model
  1116 ;;
  1117                           
  1118                           	psect	text0
  1119  00290E                     __ptext0:
  1120                           	opt callstack 0
  1121  00290E                     _main:
  1122                           	opt callstack 22
  1123                           
  1124                           ;test.c: 127:     INTCON = 0;
  1125                           
  1126                           ;incstack = 0
  1127  00290E  0E00               	movlw	0
  1128  002910  6EF2               	movwf	4082,c	;volatile
  1129                           
  1130                           ;test.c: 128:     initPorts();
  1131  002912  ECE3  F01B         	call	_initPorts	;wreg free
  1132                           
  1133                           ;test.c: 129:     setupSerial();
  1134  002916  ECB8  F01C         	call	_setupSerial	;wreg free
  1135                           
  1136                           ;test.c: 130:     init_adc_no_lib();
  1137  00291A  ECD0  F01C         	call	_init_adc_no_lib	;wreg free
  1138                           
  1139                           ;test.c: 132:     lcd_init();
  1140  00291E  ECFD  F01A         	call	_lcd_init	;wreg free
  1141                           
  1142                           ;test.c: 133:     lcd_send_byte(0, 1);
  1143  002922  0E01               	movlw	1
  1144  002924  6E09               	movwf	lcd_send_byte@n,c
  1145  002926  0E00               	movlw	0
  1146  002928  ECAA  F01B         	call	_lcd_send_byte
  1147                           
  1148                           ;test.c: 134:     lcd_putc('\f');
  1149  00292C  0E0C               	movlw	12
  1150  00292E  ECCF  F019         	call	_lcd_putc
  1151                           
  1152                           ;test.c: 135:     display();
  1153  002932  EC9A  F019         	call	_display	;wreg free
  1154                           
  1155                           ;test.c: 137:     send_string_no_lib("");
  1156  002936  0E44               	movlw	low (STR_6+11)
  1157  002938  6E02               	movwf	send_string_no_lib@p,c
  1158  00293A  0E10               	movlw	high (STR_6+11)
  1159  00293C  6E03               	movwf	send_string_no_lib@p+1,c
  1160  00293E  EC2C  F01A         	call	_send_string_no_lib	;wreg free
  1161                           
  1162                           ;test.c: 138:     send_string_no_lib("");
  1163  002942  0E44               	movlw	low (STR_6+11)
  1164  002944  6E02               	movwf	send_string_no_lib@p,c
  1165  002946  0E10               	movlw	high (STR_6+11)
  1166  002948  6E03               	movwf	send_string_no_lib@p+1,c
  1167  00294A  EC2C  F01A         	call	_send_string_no_lib	;wreg free
  1168                           
  1169                           ;test.c: 139:     lcd_putc('\f');
  1170  00294E  0E0C               	movlw	12
  1171  002950  ECCF  F019         	call	_lcd_putc
  1172  002954                     l177:
  1173  002954  0004               	clrwdt		;# 
  1174                           
  1175                           ;test.c: 143:         SP = (read_adc_voltage(0)*100.0);
  1176  002956  0E00               	movlw	0
  1177  002958  EC21  F019         	call	_read_adc_voltage
  1178  00295C  C02E  F039         	movff	?_read_adc_voltage,___flmul@b
  1179  002960  C02F  F03A         	movff	?_read_adc_voltage+1,___flmul@b+1
  1180  002964  C030  F03B         	movff	?_read_adc_voltage+2,___flmul@b+2
  1181  002968  C031  F03C         	movff	?_read_adc_voltage+3,___flmul@b+3
  1182  00296C  0E00               	movlw	0
  1183  00296E  6E3D               	movwf	___flmul@a,c
  1184  002970  0E00               	movlw	0
  1185  002972  6E3E               	movwf	___flmul@a+1,c
  1186  002974  0EC8               	movlw	200
  1187  002976  6E3F               	movwf	___flmul@a+2,c
  1188  002978  0E42               	movlw	66
  1189  00297A  6E40               	movwf	___flmul@a+3,c
  1190  00297C  EC39  F00F         	call	___flmul	;wreg free
  1191  002980  C039  F0E0         	movff	?___flmul,_SP
  1192  002984  C03A  F0E1         	movff	?___flmul+1,_SP+1
  1193  002988  C03B  F0E2         	movff	?___flmul+2,_SP+2
  1194  00298C  C03C  F0E3         	movff	?___flmul+3,_SP+3
  1195                           
  1196                           ;test.c: 146:         if(SP > 28){
  1197  002990  0E00               	movlw	0
  1198  002992  6E52               	movwf	___flge@ff1,c
  1199  002994  0E00               	movlw	0
  1200  002996  6E53               	movwf	___flge@ff1+1,c
  1201  002998  0EE0               	movlw	224
  1202  00299A  6E54               	movwf	___flge@ff1+2,c
  1203  00299C  0E41               	movlw	65
  1204  00299E  6E55               	movwf	___flge@ff1+3,c
  1205  0029A0  C0E0  F056         	movff	_SP,___flge@ff2
  1206  0029A4  C0E1  F057         	movff	_SP+1,___flge@ff2+1
  1207  0029A8  C0E2  F058         	movff	_SP+2,___flge@ff2+2
  1208  0029AC  C0E3  F059         	movff	_SP+3,___flge@ff2+3
  1209  0029B0  EC83  F016         	call	___flge	;wreg free
  1210  0029B4  B0D8               	btfsc	status,0,c
  1211  0029B6  D002               	goto	l178
  1212                           
  1213                           ;test.c: 147:         PORTEbits.RE0 = 1;
  1214  0029B8  8084               	bsf	3972,0,c	;volatile
  1215                           
  1216                           ;test.c: 148:         }
  1217  0029BA  D001               	goto	l4361
  1218  0029BC                     l178:
  1219  0029BC  9084               	bcf	3972,0,c	;volatile
  1220  0029BE                     l4361:
  1221                           
  1222                           ;test.c: 151:         sprintf(Buffer, "T:%5.1fC\r\n", SP);
  1223  0029BE  0E90               	movlw	low main@Buffer
  1224  0029C0  0100               	movlb	0	; () banked
  1225  0029C2  6FC6               	movwf	sprintf@s& (0+255),b
  1226  0029C4  0E01               	movlw	high main@Buffer
  1227  0029C6  6FC7               	movwf	(sprintf@s+1)& (0+255),b
  1228  0029C8  0E45               	movlw	low STR_5
  1229  0029CA  6FC8               	movwf	sprintf@fmt& (0+255),b
  1230  0029CC  0E10               	movlw	high STR_5
  1231  0029CE  6FC9               	movwf	(sprintf@fmt+1)& (0+255),b
  1232  0029D0  C0E0  F0CA         	movff	_SP,?_sprintf+4
  1233  0029D4  C0E1  F0CB         	movff	_SP+1,?_sprintf+5
  1234  0029D8  C0E2  F0CC         	movff	_SP+2,?_sprintf+6
  1235  0029DC  C0E3  F0CD         	movff	_SP+3,?_sprintf+7
  1236  0029E0  ECAC  F01A         	call	_sprintf	;wreg free
  1237                           
  1238                           ;test.c: 152:         send_string_no_lib(Buffer);
  1239  0029E4  0E90               	movlw	low main@Buffer
  1240  0029E6  6E02               	movwf	send_string_no_lib@p,c
  1241  0029E8  0E01               	movlw	high main@Buffer
  1242  0029EA  6E03               	movwf	send_string_no_lib@p+1,c
  1243  0029EC  EC2C  F01A         	call	_send_string_no_lib	;wreg free
  1244                           
  1245                           ;test.c: 153:         if(SP > 28){
  1246  0029F0  0E00               	movlw	0
  1247  0029F2  6E52               	movwf	___flge@ff1,c
  1248  0029F4  0E00               	movlw	0
  1249  0029F6  6E53               	movwf	___flge@ff1+1,c
  1250  0029F8  0EE0               	movlw	224
  1251  0029FA  6E54               	movwf	___flge@ff1+2,c
  1252  0029FC  0E41               	movlw	65
  1253  0029FE  6E55               	movwf	___flge@ff1+3,c
  1254  002A00  C0E0  F056         	movff	_SP,___flge@ff2
  1255  002A04  C0E1  F057         	movff	_SP+1,___flge@ff2+1
  1256  002A08  C0E2  F058         	movff	_SP+2,___flge@ff2+2
  1257  002A0C  C0E3  F059         	movff	_SP+3,___flge@ff2+3
  1258  002A10  EC83  F016         	call	___flge	;wreg free
  1259  002A14  B0D8               	btfsc	status,0,c
  1260  002A16  D00C               	goto	l4369
  1261                           
  1262                           ;test.c: 154:             sprintf(Buffer, "WARNING!!\r\n");
  1263  002A18  0E90               	movlw	low main@Buffer
  1264  002A1A  0100               	movlb	0	; () banked
  1265  002A1C  6FC6               	movwf	sprintf@s& (0+255),b
  1266  002A1E  0E01               	movlw	high main@Buffer
  1267  002A20  6FC7               	movwf	(sprintf@s+1)& (0+255),b
  1268  002A22  0E39               	movlw	low STR_6
  1269  002A24  6FC8               	movwf	sprintf@fmt& (0+255),b
  1270  002A26  0E10               	movlw	high STR_6
  1271  002A28  6FC9               	movwf	(sprintf@fmt+1)& (0+255),b
  1272  002A2A  ECAC  F01A         	call	_sprintf	;wreg free
  1273                           
  1274                           ;test.c: 155:         }
  1275  002A2E  D00B               	goto	l4371
  1276  002A30                     l4369:
  1277  002A30  0E90               	movlw	low main@Buffer
  1278  002A32  0100               	movlb	0	; () banked
  1279  002A34  6FC6               	movwf	sprintf@s& (0+255),b
  1280  002A36  0E01               	movlw	high main@Buffer
  1281  002A38  6FC7               	movwf	(sprintf@s+1)& (0+255),b
  1282  002A3A  0E50               	movlw	low STR_7
  1283  002A3C  6FC8               	movwf	sprintf@fmt& (0+255),b
  1284  002A3E  0E10               	movlw	high STR_7
  1285  002A40  6FC9               	movwf	(sprintf@fmt+1)& (0+255),b
  1286  002A42  ECAC  F01A         	call	_sprintf	;wreg free
  1287  002A46                     l4371:
  1288                           
  1289                           ;test.c: 157:         send_string_no_lib(Buffer);
  1290  002A46  0E90               	movlw	low main@Buffer
  1291  002A48  6E02               	movwf	send_string_no_lib@p,c
  1292  002A4A  0E01               	movlw	high main@Buffer
  1293  002A4C  6E03               	movwf	send_string_no_lib@p+1,c
  1294  002A4E  EC2C  F01A         	call	_send_string_no_lib	;wreg free
  1295                           
  1296                           ;test.c: 158:         sprintf(Buffer, "========================================\r\n");
  1297  002A52  0E90               	movlw	low main@Buffer
  1298  002A54  0100               	movlb	0	; () banked
  1299  002A56  6FC6               	movwf	sprintf@s& (0+255),b
  1300  002A58  0E01               	movlw	high main@Buffer
  1301  002A5A  6FC7               	movwf	(sprintf@s+1)& (0+255),b
  1302  002A5C  0E01               	movlw	low STR_8
  1303  002A5E  6FC8               	movwf	sprintf@fmt& (0+255),b
  1304  002A60  0E10               	movlw	high STR_8
  1305  002A62  6FC9               	movwf	(sprintf@fmt+1)& (0+255),b
  1306  002A64  ECAC  F01A         	call	_sprintf	;wreg free
  1307                           
  1308                           ;test.c: 159:         send_string_no_lib(Buffer);
  1309  002A68  0E90               	movlw	low main@Buffer
  1310  002A6A  6E02               	movwf	send_string_no_lib@p,c
  1311  002A6C  0E01               	movlw	high main@Buffer
  1312  002A6E  6E03               	movwf	send_string_no_lib@p+1,c
  1313  002A70  EC2C  F01A         	call	_send_string_no_lib	;wreg free
  1314                           
  1315                           ;test.c: 160:         display();
  1316  002A74  EC9A  F019         	call	_display	;wreg free
  1317                           
  1318                           ;test.c: 161:         delay_ms(2000);
  1319  002A78  0E07               	movlw	7
  1320  002A7A  6E02               	movwf	delay_ms@n+1,c
  1321  002A7C  0ED0               	movlw	208
  1322  002A7E  6E01               	movwf	delay_ms@n,c
  1323  002A80  EC82  F01C         	call	_delay_ms	;wreg free
  1324  002A84  D767               	goto	l177
  1325  002A86                     __end_of_main:
  1326                           	opt callstack 0
  1327                           
  1328 ;; *************** function _setupSerial *****************
  1329 ;; Defined at:
  1330 ;;		line 4 in file "my_ser.c"
  1331 ;; Parameters:    Size  Location     Type
  1332 ;;		None
  1333 ;; Auto vars:     Size  Location     Type
  1334 ;;  dummy           1    0        unsigned char 
  1335 ;; Return value:  Size  Location     Type
  1336 ;;                  1    wreg      void 
  1337 ;; Registers used:
  1338 ;;		wreg, status,2
  1339 ;; Tracked objects:
  1340 ;;		On entry : 0/0
  1341 ;;		On exit  : 0/0
  1342 ;;		Unchanged: 0/0
  1343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1345 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1347 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1348 ;;Total ram usage:        1 bytes
  1349 ;; Hardware stack levels used:    1
  1350 ;; This function calls:
  1351 ;;		Nothing
  1352 ;; This function is called by:
  1353 ;;		_main
  1354 ;; This function uses a non-reentrant model
  1355 ;;
  1356                           
  1357                           	psect	text1
  1358  003970                     __ptext1:
  1359                           	opt callstack 0
  1360  003970                     _setupSerial:
  1361                           	opt callstack 30
  1362                           
  1363                           ;my_ser.c: 5:     unsigned char dummy;;my_ser.c: 6:     BAUDCONbits.BRG16 = 0;
  1364                           
  1365                           ;incstack = 0
  1366  003970  96B8               	bcf	4024,3,c	;volatile
  1367                           
  1368                           ;my_ser.c: 7:     TXSTA = 0;
  1369  003972  0E00               	movlw	0
  1370  003974  6EAC               	movwf	4012,c	;volatile
  1371                           
  1372                           ;my_ser.c: 8:     SPBRG = 25;
  1373  003976  0E19               	movlw	25
  1374  003978  6EAF               	movwf	4015,c	;volatile
  1375                           
  1376                           ;my_ser.c: 9:     SPBRGH = 0;
  1377  00397A  0E00               	movlw	0
  1378  00397C  6EB0               	movwf	4016,c	;volatile
  1379                           
  1380                           ;my_ser.c: 10:     TXSTAbits.BRGH = 1;
  1381  00397E  84AC               	bsf	4012,2,c	;volatile
  1382                           
  1383                           ;my_ser.c: 11:     TXSTAbits.TXEN = 1;
  1384  003980  8AAC               	bsf	4012,5,c	;volatile
  1385                           
  1386                           ;my_ser.c: 14:     RCSTA = 0;
  1387  003982  0E00               	movlw	0
  1388  003984  6EAB               	movwf	4011,c	;volatile
  1389                           
  1390                           ;my_ser.c: 15:     RCSTAbits.CREN = 1;
  1391  003986  88AB               	bsf	4011,4,c	;volatile
  1392                           
  1393                           ;my_ser.c: 16:     RCSTAbits.SPEN = 1;
  1394  003988  8EAB               	bsf	4011,7,c	;volatile
  1395  00398A  50AE               	movf	4014,w,c	;volatile
  1396  00398C  50AE               	movf	4014,w,c	;volatile
  1397  00398E  0012               	return		;funcret
  1398  003990                     __end_of_setupSerial:
  1399                           	opt callstack 0
  1400                           
  1401 ;; *************** function _send_string_no_lib *****************
  1402 ;; Defined at:
  1403 ;;		line 47 in file "my_ser.c"
  1404 ;; Parameters:    Size  Location     Type
  1405 ;;  p               2    1[COMRAM] PTR unsigned char 
  1406 ;;		 -> main@Buffer(64), STR_4(1), STR_3(1), 
  1407 ;; Auto vars:     Size  Location     Type
  1408 ;;		None
  1409 ;; Return value:  Size  Location     Type
  1410 ;;                  1    wreg      void 
  1411 ;; Registers used:
  1412 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1413 ;; Tracked objects:
  1414 ;;		On entry : 0/0
  1415 ;;		On exit  : 0/0
  1416 ;;		Unchanged: 0/0
  1417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1418 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1421 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1422 ;;Total ram usage:        2 bytes
  1423 ;; Hardware stack levels used:    1
  1424 ;; Hardware stack levels required when called:    1
  1425 ;; This function calls:
  1426 ;;		_send_byte_no_lib
  1427 ;; This function is called by:
  1428 ;;		_main
  1429 ;; This function uses a non-reentrant model
  1430 ;;
  1431                           
  1432                           	psect	text2
  1433  003458                     __ptext2:
  1434                           	opt callstack 0
  1435  003458                     _send_string_no_lib:
  1436                           	opt callstack 29
  1437                           
  1438                           ;my_ser.c: 48:     while (*p) {
  1439                           
  1440                           ;incstack = 0
  1441  003458  D015               	goto	l4299
  1442  00345A                     l4295:
  1443                           
  1444                           ;my_ser.c: 49:         send_byte_no_lib(*p);
  1445  00345A  C002  FFF6         	movff	send_string_no_lib@p,tblptrl
  1446  00345E  C003  FFF7         	movff	send_string_no_lib@p+1,tblptrh
  1447  003462  0E00               	movlw	low (__smallconst shr (0+16))
  1448  003464  6EF8               	movwf	tblptru,c
  1449  003466  0E0F               	movlw	(high __ramtop+-1)
  1450  003468  64F7               	cpfsgt	tblptrh,c
  1451  00346A  D003               	bra	u5097
  1452  00346C  0008               	tblrd		*
  1453  00346E  50F5               	movf	tablat,w,c
  1454  003470  D005               	bra	u5090
  1455  003472                     u5097:
  1456  003472  CFF6 FFE1          	movff	tblptrl,fsr1l
  1457  003476  CFF7 FFE2          	movff	tblptrh,fsr1h
  1458  00347A  50E7               	movf	indf1,w,c
  1459  00347C                     u5090:
  1460  00347C  ECC8  F01C         	call	_send_byte_no_lib
  1461                           
  1462                           ;my_ser.c: 50:         p++;
  1463  003480  4A02               	infsnz	send_string_no_lib@p,f,c
  1464  003482  2A03               	incf	send_string_no_lib@p+1,f,c
  1465  003484                     l4299:
  1466                           
  1467                           ;my_ser.c: 48:     while (*p) {
  1468  003484  C002  FFF6         	movff	send_string_no_lib@p,tblptrl
  1469  003488  C003  FFF7         	movff	send_string_no_lib@p+1,tblptrh
  1470  00348C  0E00               	movlw	low (__smallconst shr (0+16))
  1471  00348E  6EF8               	movwf	tblptru,c
  1472  003490  0E0F               	movlw	(high __ramtop+-1)
  1473  003492  64F7               	cpfsgt	tblptrh,c
  1474  003494  D003               	bra	u5107
  1475  003496  0008               	tblrd		*
  1476  003498  50F5               	movf	tablat,w,c
  1477  00349A  D005               	bra	u5100
  1478  00349C                     u5107:
  1479  00349C  CFF6 FFE1          	movff	tblptrl,fsr1l
  1480  0034A0  CFF7 FFE2          	movff	tblptrh,fsr1h
  1481  0034A4  50E7               	movf	indf1,w,c
  1482  0034A6                     u5100:
  1483  0034A6  0900               	iorlw	0
  1484  0034A8  B4D8               	btfsc	status,2,c
  1485  0034AA  0012               	return	
  1486  0034AC  D7D6               	goto	l4295
  1487  0034AE                     __end_of_send_string_no_lib:
  1488                           	opt callstack 0
  1489                           
  1490 ;; *************** function _send_byte_no_lib *****************
  1491 ;; Defined at:
  1492 ;;		line 39 in file "my_ser.c"
  1493 ;; Parameters:    Size  Location     Type
  1494 ;;  c               1    wreg     unsigned char 
  1495 ;; Auto vars:     Size  Location     Type
  1496 ;;  c               1    0[COMRAM] unsigned char 
  1497 ;; Return value:  Size  Location     Type
  1498 ;;                  1    wreg      void 
  1499 ;; Registers used:
  1500 ;;		wreg
  1501 ;; Tracked objects:
  1502 ;;		On entry : 0/0
  1503 ;;		On exit  : 0/0
  1504 ;;		Unchanged: 0/0
  1505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1507 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1509 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1510 ;;Total ram usage:        1 bytes
  1511 ;; Hardware stack levels used:    1
  1512 ;; This function calls:
  1513 ;;		Nothing
  1514 ;; This function is called by:
  1515 ;;		_send_string_no_lib
  1516 ;; This function uses a non-reentrant model
  1517 ;;
  1518                           
  1519                           	psect	text3
  1520  003990                     __ptext3:
  1521                           	opt callstack 0
  1522  003990                     _send_byte_no_lib:
  1523                           	opt callstack 29
  1524                           
  1525                           ;incstack = 0
  1526                           ;send_byte_no_lib@c stored from wreg
  1527  003990  6E01               	movwf	send_byte_no_lib@c,c
  1528                           
  1529                           ;my_ser.c: 40:     while (!TXSTAbits.TRMT)
  1530  003992  D001               	goto	l93
  1531  003994                     l94:
  1532  003994  0004               	clrwdt		;# 
  1533  003996                     l93:
  1534                           
  1535                           ;my_ser.c: 40:     while (!TXSTAbits.TRMT)
  1536  003996  A2AC               	btfss	4012,1,c	;volatile
  1537  003998  D7FD               	goto	l94
  1538                           
  1539                           ;my_ser.c: 44:     TXREG = c;
  1540  00399A  C001  FFAD         	movff	send_byte_no_lib@c,4013	;volatile
  1541  00399E  0012               	return		;funcret
  1542  0039A0                     __end_of_send_byte_no_lib:
  1543                           	opt callstack 0
  1544                           
  1545 ;; *************** function _read_adc_voltage *****************
  1546 ;; Defined at:
  1547 ;;		line 29 in file "my_adc.c"
  1548 ;; Parameters:    Size  Location     Type
  1549 ;;  channel         1    wreg     unsigned char 
  1550 ;; Auto vars:     Size  Location     Type
  1551 ;;  channel         1   55[COMRAM] unsigned char 
  1552 ;;  voltage         4   49[COMRAM] float 
  1553 ;;  raw_value       2   53[COMRAM] int 
  1554 ;; Return value:  Size  Location     Type
  1555 ;;                  4   45[COMRAM] float 
  1556 ;; Registers used:
  1557 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1558 ;; Tracked objects:
  1559 ;;		On entry : 0/0
  1560 ;;		On exit  : 0/0
  1561 ;;		Unchanged: 0/0
  1562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1563 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1564 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1566 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1567 ;;Total ram usage:       11 bytes
  1568 ;; Hardware stack levels used:    1
  1569 ;; Hardware stack levels required when called:    1
  1570 ;; This function calls:
  1571 ;;		___fldiv
  1572 ;;		___wmul
  1573 ;;		___xxtofl
  1574 ;;		_read_adc_raw_no_lib
  1575 ;; This function is called by:
  1576 ;;		_main
  1577 ;; This function uses a non-reentrant model
  1578 ;;
  1579                           
  1580                           	psect	text4
  1581  003242                     __ptext4:
  1582                           	opt callstack 0
  1583  003242                     _read_adc_voltage:
  1584                           	opt callstack 29
  1585                           
  1586                           ;incstack = 0
  1587                           ;read_adc_voltage@channel stored from wreg
  1588  003242  6E38               	movwf	read_adc_voltage@channel,c
  1589                           
  1590                           ;my_adc.c: 30:     int raw_value;;my_adc.c: 31:     float voltage;;my_adc.c: 32:     raw
      +                          _value = read_adc_raw_no_lib(channel);
  1591  003244  5038               	movf	read_adc_voltage@channel,w,c
  1592  003246  EC6C  F01B         	call	_read_adc_raw_no_lib
  1593  00324A  C001  F036         	movff	?_read_adc_raw_no_lib,read_adc_voltage@raw_value
  1594  00324E  C002  F037         	movff	?_read_adc_raw_no_lib+1,read_adc_voltage@raw_value+1
  1595                           
  1596                           ;my_adc.c: 33:     voltage = (raw_value * 5) / 1023.0;
  1597  003252  C036  F001         	movff	read_adc_voltage@raw_value,___wmul@multiplier
  1598  003256  C037  F002         	movff	read_adc_voltage@raw_value+1,___wmul@multiplier+1
  1599  00325A  0E00               	movlw	0
  1600  00325C  6E04               	movwf	___wmul@multiplicand+1,c
  1601  00325E  0E05               	movlw	5
  1602  003260  6E03               	movwf	___wmul@multiplicand,c
  1603  003262  EC6F  F01C         	call	___wmul	;wreg free
  1604  003266  C001  F007         	movff	?___wmul,___xxtofl@val
  1605  00326A  C002  F008         	movff	?___wmul+1,___xxtofl@val+1
  1606  00326E  0E00               	movlw	0
  1607  003270  BE08               	btfsc	___xxtofl@val+1,7,c
  1608  003272  0EFF               	movlw	-1
  1609  003274  6E09               	movwf	___xxtofl@val+2,c
  1610  003276  6E0A               	movwf	___xxtofl@val+3,c
  1611  003278  0E01               	movlw	1
  1612  00327A  EC43  F015         	call	___xxtofl
  1613  00327E  C007  F015         	movff	?___xxtofl,___fldiv@b
  1614  003282  C008  F016         	movff	?___xxtofl+1,___fldiv@b+1
  1615  003286  C009  F017         	movff	?___xxtofl+2,___fldiv@b+2
  1616  00328A  C00A  F018         	movff	?___xxtofl+3,___fldiv@b+3
  1617  00328E  0E00               	movlw	0
  1618  003290  6E19               	movwf	___fldiv@a,c
  1619  003292  0EC0               	movlw	192
  1620  003294  6E1A               	movwf	___fldiv@a+1,c
  1621  003296  0E7F               	movlw	127
  1622  003298  6E1B               	movwf	___fldiv@a+2,c
  1623  00329A  0E44               	movlw	68
  1624  00329C  6E1C               	movwf	___fldiv@a+3,c
  1625  00329E  EC68  F012         	call	___fldiv	;wreg free
  1626  0032A2  C015  F032         	movff	?___fldiv,read_adc_voltage@voltage
  1627  0032A6  C016  F033         	movff	?___fldiv+1,read_adc_voltage@voltage+1
  1628  0032AA  C017  F034         	movff	?___fldiv+2,read_adc_voltage@voltage+2
  1629  0032AE  C018  F035         	movff	?___fldiv+3,read_adc_voltage@voltage+3
  1630                           
  1631                           ;my_adc.c: 34:     return voltage;
  1632  0032B2  C032  F02E         	movff	read_adc_voltage@voltage,?_read_adc_voltage
  1633  0032B6  C033  F02F         	movff	read_adc_voltage@voltage+1,?_read_adc_voltage+1
  1634  0032BA  C034  F030         	movff	read_adc_voltage@voltage+2,?_read_adc_voltage+2
  1635  0032BE  C035  F031         	movff	read_adc_voltage@voltage+3,?_read_adc_voltage+3
  1636  0032C2  0012               	return		;funcret
  1637  0032C4                     __end_of_read_adc_voltage:
  1638                           	opt callstack 0
  1639                           
  1640 ;; *************** function _read_adc_raw_no_lib *****************
  1641 ;; Defined at:
  1642 ;;		line 17 in file "my_adc.c"
  1643 ;; Parameters:    Size  Location     Type
  1644 ;;  channel         1    wreg     unsigned char 
  1645 ;; Auto vars:     Size  Location     Type
  1646 ;;  channel         1    6[COMRAM] unsigned char 
  1647 ;;  raw_value       2    4[COMRAM] int 
  1648 ;; Return value:  Size  Location     Type
  1649 ;;                  2    0[COMRAM] int 
  1650 ;; Registers used:
  1651 ;;		wreg, status,2, status,0
  1652 ;; Tracked objects:
  1653 ;;		On entry : 0/0
  1654 ;;		On exit  : 0/0
  1655 ;;		Unchanged: 0/0
  1656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1657 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1658 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1659 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1660 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1661 ;;Total ram usage:        7 bytes
  1662 ;; Hardware stack levels used:    1
  1663 ;; This function calls:
  1664 ;;		Nothing
  1665 ;; This function is called by:
  1666 ;;		_read_adc_voltage
  1667 ;; This function uses a non-reentrant model
  1668 ;;
  1669                           
  1670                           	psect	text5
  1671  0036D8                     __ptext5:
  1672                           	opt callstack 0
  1673  0036D8                     _read_adc_raw_no_lib:
  1674                           	opt callstack 29
  1675                           
  1676                           ;incstack = 0
  1677                           ;read_adc_raw_no_lib@channel stored from wreg
  1678  0036D8  6E07               	movwf	read_adc_raw_no_lib@channel,c
  1679                           
  1680                           ;my_adc.c: 18:     int raw_value;;my_adc.c: 19:     ADCON0bits.CHS = channel;
  1681  0036DA  C007  F003         	movff	read_adc_raw_no_lib@channel,??_read_adc_raw_no_lib
  1682  0036DE  4603               	rlncf	??_read_adc_raw_no_lib,f,c
  1683  0036E0  4603               	rlncf	??_read_adc_raw_no_lib,f,c
  1684  0036E2  50C2               	movf	4034,w,c	;volatile
  1685  0036E4  1803               	xorwf	??_read_adc_raw_no_lib,w,c
  1686  0036E6  0BC3               	andlw	-61
  1687  0036E8  1803               	xorwf	??_read_adc_raw_no_lib,w,c
  1688  0036EA  6EC2               	movwf	4034,c	;volatile
  1689                           
  1690                           ;my_adc.c: 21:     ADCON0bits.GO = 1;
  1691  0036EC  82C2               	bsf	4034,1,c	;volatile
  1692                           
  1693                           ;my_adc.c: 22:     while (ADCON0bits.GO) {
  1694  0036EE  D001               	goto	l200
  1695  0036F0                     l201:
  1696  0036F0  0004               	clrwdt		;# 
  1697  0036F2                     l200:
  1698                           
  1699                           ;my_adc.c: 22:     while (ADCON0bits.GO) {
  1700  0036F2  B2C2               	btfsc	4034,1,c	;volatile
  1701  0036F4  D7FD               	goto	l201
  1702                           
  1703                           ;my_adc.c: 25:     raw_value = ADRESH << 8 | ADRESL;
  1704  0036F6  50C3               	movf	4035,w,c	;volatile
  1705  0036F8  CFC4 F003          	movff	4036,??_read_adc_raw_no_lib	;volatile
  1706  0036FC  6A04               	clrf	(??_read_adc_raw_no_lib+1)& (0+255),c
  1707  0036FE  C003  F004         	movff	??_read_adc_raw_no_lib,??_read_adc_raw_no_lib+1
  1708  003702  6A03               	clrf	??_read_adc_raw_no_lib,c
  1709  003704  1003               	iorwf	??_read_adc_raw_no_lib,w,c
  1710  003706  6E05               	movwf	read_adc_raw_no_lib@raw_value,c
  1711  003708  5004               	movf	??_read_adc_raw_no_lib+1,w,c
  1712  00370A  6E06               	movwf	read_adc_raw_no_lib@raw_value+1,c
  1713                           
  1714                           ;my_adc.c: 26:     return raw_value;
  1715  00370C  C005  F001         	movff	read_adc_raw_no_lib@raw_value,?_read_adc_raw_no_lib
  1716  003710  C006  F002         	movff	read_adc_raw_no_lib@raw_value+1,?_read_adc_raw_no_lib+1
  1717  003714  0012               	return		;funcret
  1718  003716                     __end_of_read_adc_raw_no_lib:
  1719                           	opt callstack 0
  1720                           
  1721 ;; *************** function ___xxtofl *****************
  1722 ;; Defined at:
  1723 ;;		line 10 in file "D:\Microchip\pic\sources\c99\common\xxtofl.c"
  1724 ;; Parameters:    Size  Location     Type
  1725 ;;  sign            1    wreg     unsigned char 
  1726 ;;  val             4    6[COMRAM] long 
  1727 ;; Auto vars:     Size  Location     Type
  1728 ;;  sign            1   14[COMRAM] unsigned char 
  1729 ;;  arg             4   16[COMRAM] unsigned long 
  1730 ;;  exp             1   15[COMRAM] unsigned char 
  1731 ;; Return value:  Size  Location     Type
  1732 ;;                  4    6[COMRAM] unsigned char 
  1733 ;; Registers used:
  1734 ;;		wreg, status,2, status,0
  1735 ;; Tracked objects:
  1736 ;;		On entry : 0/0
  1737 ;;		On exit  : 0/0
  1738 ;;		Unchanged: 0/0
  1739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1740 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1741 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1742 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1743 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1744 ;;Total ram usage:       14 bytes
  1745 ;; Hardware stack levels used:    1
  1746 ;; This function calls:
  1747 ;;		Nothing
  1748 ;; This function is called by:
  1749 ;;		_read_adc_voltage
  1750 ;; This function uses a non-reentrant model
  1751 ;;
  1752                           
  1753                           	psect	text6
  1754  002A86                     __ptext6:
  1755                           	opt callstack 0
  1756  002A86                     ___xxtofl:
  1757                           	opt callstack 29
  1758                           
  1759                           ;incstack = 0
  1760                           ;___xxtofl@sign stored from wreg
  1761  002A86  6E0F               	movwf	___xxtofl@sign,c
  1762  002A88  500F               	movf	___xxtofl@sign,w,c
  1763  002A8A  A4D8               	btfss	status,2,c
  1764  002A8C  AE0A               	btfss	___xxtofl@val+3,7,c
  1765  002A8E  D01A               	goto	l1042
  1766  002A90  C007  F00B         	movff	___xxtofl@val,??___xxtofl
  1767  002A94  C008  F00C         	movff	___xxtofl@val+1,??___xxtofl+1
  1768  002A98  C009  F00D         	movff	___xxtofl@val+2,??___xxtofl+2
  1769  002A9C  C00A  F00E         	movff	___xxtofl@val+3,??___xxtofl+3
  1770  002AA0  1E0B               	comf	??___xxtofl,f,c
  1771  002AA2  1E0C               	comf	??___xxtofl+1,f,c
  1772  002AA4  1E0D               	comf	??___xxtofl+2,f,c
  1773  002AA6  1E0E               	comf	??___xxtofl+3,f,c
  1774  002AA8  2A0B               	incf	??___xxtofl,f,c
  1775  002AAA  0E00               	movlw	0
  1776  002AAC  220C               	addwfc	??___xxtofl+1,f,c
  1777  002AAE  220D               	addwfc	??___xxtofl+2,f,c
  1778  002AB0  220E               	addwfc	??___xxtofl+3,f,c
  1779  002AB2  C00B  F011         	movff	??___xxtofl,___xxtofl@arg
  1780  002AB6  C00C  F012         	movff	??___xxtofl+1,___xxtofl@arg+1
  1781  002ABA  C00D  F013         	movff	??___xxtofl+2,___xxtofl@arg+2
  1782  002ABE  C00E  F014         	movff	??___xxtofl+3,___xxtofl@arg+3
  1783  002AC2  D008               	goto	l4205
  1784  002AC4                     l1042:
  1785  002AC4  C007  F011         	movff	___xxtofl@val,___xxtofl@arg
  1786  002AC8  C008  F012         	movff	___xxtofl@val+1,___xxtofl@arg+1
  1787  002ACC  C009  F013         	movff	___xxtofl@val+2,___xxtofl@arg+2
  1788  002AD0  C00A  F014         	movff	___xxtofl@val+3,___xxtofl@arg+3
  1789  002AD4                     l4205:
  1790  002AD4  5007               	movf	___xxtofl@val,w,c
  1791  002AD6  1008               	iorwf	___xxtofl@val+1,w,c
  1792  002AD8  1009               	iorwf	___xxtofl@val+2,w,c
  1793  002ADA  100A               	iorwf	___xxtofl@val+3,w,c
  1794  002ADC  A4D8               	btfss	status,2,c
  1795  002ADE  D009               	goto	l4211
  1796  002AE0  0E00               	movlw	0
  1797  002AE2  6E07               	movwf	?___xxtofl,c
  1798  002AE4  0E00               	movlw	0
  1799  002AE6  6E08               	movwf	?___xxtofl+1,c
  1800  002AE8  0E00               	movlw	0
  1801  002AEA  6E09               	movwf	?___xxtofl+2,c
  1802  002AEC  0E00               	movlw	0
  1803  002AEE  6E0A               	movwf	?___xxtofl+3,c
  1804  002AF0  0012               	return	
  1805  002AF2                     l4211:
  1806  002AF2  0E96               	movlw	150
  1807  002AF4  6E10               	movwf	___xxtofl@exp,c
  1808  002AF6  D006               	goto	l4215
  1809  002AF8                     l4213:
  1810  002AF8  2A10               	incf	___xxtofl@exp,f,c
  1811  002AFA  90D8               	bcf	status,0,c
  1812  002AFC  3214               	rrcf	___xxtofl@arg+3,f,c
  1813  002AFE  3213               	rrcf	___xxtofl@arg+2,f,c
  1814  002B00  3212               	rrcf	___xxtofl@arg+1,f,c
  1815  002B02  3211               	rrcf	___xxtofl@arg,f,c
  1816  002B04                     l4215:
  1817  002B04  0E00               	movlw	0
  1818  002B06  1411               	andwf	___xxtofl@arg,w,c
  1819  002B08  6E0B               	movwf	??___xxtofl& (0+255),c
  1820  002B0A  0E00               	movlw	0
  1821  002B0C  1412               	andwf	___xxtofl@arg+1,w,c
  1822  002B0E  6E0C               	movwf	(??___xxtofl+1)& (0+255),c
  1823  002B10  0E00               	movlw	0
  1824  002B12  1413               	andwf	___xxtofl@arg+2,w,c
  1825  002B14  6E0D               	movwf	(??___xxtofl+2)& (0+255),c
  1826  002B16  0EFE               	movlw	254
  1827  002B18  1414               	andwf	___xxtofl@arg+3,w,c
  1828  002B1A  6E0E               	movwf	(??___xxtofl+3)& (0+255),c
  1829  002B1C  500B               	movf	??___xxtofl,w,c
  1830  002B1E  100C               	iorwf	??___xxtofl+1,w,c
  1831  002B20  100D               	iorwf	??___xxtofl+2,w,c
  1832  002B22  100E               	iorwf	??___xxtofl+3,w,c
  1833  002B24  B4D8               	btfsc	status,2,c
  1834  002B26  D00D               	goto	l1049
  1835  002B28  D7E7               	goto	l4213
  1836  002B2A                     l4217:
  1837  002B2A  2A10               	incf	___xxtofl@exp,f,c
  1838  002B2C  0E01               	movlw	1
  1839  002B2E  2611               	addwf	___xxtofl@arg,f,c
  1840  002B30  0E00               	movlw	0
  1841  002B32  2212               	addwfc	___xxtofl@arg+1,f,c
  1842  002B34  2213               	addwfc	___xxtofl@arg+2,f,c
  1843  002B36  2214               	addwfc	___xxtofl@arg+3,f,c
  1844  002B38  90D8               	bcf	status,0,c
  1845  002B3A  3214               	rrcf	___xxtofl@arg+3,f,c
  1846  002B3C  3213               	rrcf	___xxtofl@arg+2,f,c
  1847  002B3E  3212               	rrcf	___xxtofl@arg+1,f,c
  1848  002B40  3211               	rrcf	___xxtofl@arg,f,c
  1849  002B42                     l1049:
  1850  002B42  0E00               	movlw	0
  1851  002B44  1411               	andwf	___xxtofl@arg,w,c
  1852  002B46  6E0B               	movwf	??___xxtofl& (0+255),c
  1853  002B48  0E00               	movlw	0
  1854  002B4A  1412               	andwf	___xxtofl@arg+1,w,c
  1855  002B4C  6E0C               	movwf	(??___xxtofl+1)& (0+255),c
  1856  002B4E  0E00               	movlw	0
  1857  002B50  1413               	andwf	___xxtofl@arg+2,w,c
  1858  002B52  6E0D               	movwf	(??___xxtofl+2)& (0+255),c
  1859  002B54  0EFF               	movlw	255
  1860  002B56  1414               	andwf	___xxtofl@arg+3,w,c
  1861  002B58  6E0E               	movwf	(??___xxtofl+3)& (0+255),c
  1862  002B5A  500B               	movf	??___xxtofl,w,c
  1863  002B5C  100C               	iorwf	??___xxtofl+1,w,c
  1864  002B5E  100D               	iorwf	??___xxtofl+2,w,c
  1865  002B60  100E               	iorwf	??___xxtofl+3,w,c
  1866  002B62  B4D8               	btfsc	status,2,c
  1867  002B64  D007               	goto	l4225
  1868  002B66  D7E1               	goto	l4217
  1869  002B68                     l4223:
  1870  002B68  0610               	decf	___xxtofl@exp,f,c
  1871  002B6A  90D8               	bcf	status,0,c
  1872  002B6C  3611               	rlcf	___xxtofl@arg,f,c
  1873  002B6E  3612               	rlcf	___xxtofl@arg+1,f,c
  1874  002B70  3613               	rlcf	___xxtofl@arg+2,f,c
  1875  002B72  3614               	rlcf	___xxtofl@arg+3,f,c
  1876  002B74                     l4225:
  1877  002B74  BE13               	btfsc	___xxtofl@arg+2,7,c
  1878  002B76  D003               	goto	u5030
  1879  002B78  0E02               	movlw	2
  1880  002B7A  6010               	cpfslt	___xxtofl@exp,c
  1881  002B7C  D7F5               	goto	l4223
  1882  002B7E                     u5030:
  1883  002B7E  A010               	btfss	___xxtofl@exp,0,c
  1884  002B80  9E13               	bcf	___xxtofl@arg+2,7,c
  1885  002B82  90D8               	bcf	status,0,c
  1886  002B84  3210               	rrcf	___xxtofl@exp,f,c
  1887  002B86  C010  F00B         	movff	___xxtofl@exp,??___xxtofl
  1888  002B8A  6A0C               	clrf	(??___xxtofl+1)& (0+255),c
  1889  002B8C  6A0D               	clrf	(??___xxtofl+2)& (0+255),c
  1890  002B8E  6A0E               	clrf	(??___xxtofl+3)& (0+255),c
  1891  002B90  C00B  F00E         	movff	??___xxtofl,??___xxtofl+3
  1892  002B94  6A0D               	clrf	??___xxtofl+2,c
  1893  002B96  6A0C               	clrf	??___xxtofl+1,c
  1894  002B98  6A0B               	clrf	??___xxtofl,c
  1895  002B9A  500B               	movf	??___xxtofl,w,c
  1896  002B9C  1211               	iorwf	___xxtofl@arg,f,c
  1897  002B9E  500C               	movf	??___xxtofl+1,w,c
  1898  002BA0  1212               	iorwf	___xxtofl@arg+1,f,c
  1899  002BA2  500D               	movf	??___xxtofl+2,w,c
  1900  002BA4  1213               	iorwf	___xxtofl@arg+2,f,c
  1901  002BA6  500E               	movf	??___xxtofl+3,w,c
  1902  002BA8  1214               	iorwf	___xxtofl@arg+3,f,c
  1903  002BAA  500F               	movf	___xxtofl@sign,w,c
  1904  002BAC  A4D8               	btfss	status,2,c
  1905  002BAE  AE0A               	btfss	___xxtofl@val+3,7,c
  1906  002BB0  D001               	goto	l4241
  1907  002BB2  8E14               	bsf	___xxtofl@arg+3,7,c
  1908  002BB4                     l4241:
  1909  002BB4  C011  F007         	movff	___xxtofl@arg,?___xxtofl
  1910  002BB8  C012  F008         	movff	___xxtofl@arg+1,?___xxtofl+1
  1911  002BBC  C013  F009         	movff	___xxtofl@arg+2,?___xxtofl+2
  1912  002BC0  C014  F00A         	movff	___xxtofl@arg+3,?___xxtofl+3
  1913  002BC4  0012               	return		;funcret
  1914  002BC6                     __end_of___xxtofl:
  1915                           	opt callstack 0
  1916                           
  1917 ;; *************** function _lcd_init *****************
  1918 ;; Defined at:
  1919 ;;		line 45 in file "lcd_x8.c"
  1920 ;; Parameters:    Size  Location     Type
  1921 ;;		None
  1922 ;; Auto vars:     Size  Location     Type
  1923 ;;  i               1   10[COMRAM] unsigned char 
  1924 ;; Return value:  Size  Location     Type
  1925 ;;                  1    wreg      void 
  1926 ;; Registers used:
  1927 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1928 ;; Tracked objects:
  1929 ;;		On entry : 0/0
  1930 ;;		On exit  : 0/0
  1931 ;;		Unchanged: 0/0
  1932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1934 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1936 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1937 ;;Total ram usage:        1 bytes
  1938 ;; Hardware stack levels used:    1
  1939 ;; Hardware stack levels required when called:    3
  1940 ;; This function calls:
  1941 ;;		_delay_ms
  1942 ;;		_lcd_send_byte
  1943 ;;		_lcd_send_nibble
  1944 ;; This function is called by:
  1945 ;;		_main
  1946 ;; This function uses a non-reentrant model
  1947 ;;
  1948                           
  1949                           	psect	text7
  1950  0035FA                     __ptext7:
  1951                           	opt callstack 0
  1952  0035FA                     _lcd_init:
  1953                           	opt callstack 27
  1954                           
  1955                           ;lcd_x8.c: 47:     unsigned char i;;lcd_x8.c: 50:     lcd.rs = 0;
  1956                           
  1957                           ;incstack = 0
  1958  0035FA  9283               	bcf	3971,1,c
  1959                           
  1960                           ;lcd_x8.c: 51:     lcd.enable = 0;
  1961  0035FC  9683               	bcf	3971,3,c
  1962                           
  1963                           ;lcd_x8.c: 53:     delay_ms(25);
  1964  0035FE  0E00               	movlw	0
  1965  003600  6E02               	movwf	delay_ms@n+1,c
  1966  003602  0E19               	movlw	25
  1967  003604  6E01               	movwf	delay_ms@n,c
  1968  003606  EC82  F01C         	call	_delay_ms	;wreg free
  1969                           
  1970                           ;lcd_x8.c: 54:     for (i = 1; i <= 3; ++i) {
  1971  00360A  0E01               	movlw	1
  1972  00360C  6E0B               	movwf	lcd_init@i,c
  1973  00360E                     l4255:
  1974                           
  1975                           ;lcd_x8.c: 55:         lcd_send_nibble(3);
  1976  00360E  0E03               	movlw	3
  1977  003610  ECA7  F01C         	call	_lcd_send_nibble
  1978                           
  1979                           ;lcd_x8.c: 56:     }
  1980  003614  2A0B               	incf	lcd_init@i,f,c
  1981  003616  0E03               	movlw	3
  1982  003618  640B               	cpfsgt	lcd_init@i,c
  1983  00361A  D7F9               	goto	l4255
  1984                           
  1985                           ;lcd_x8.c: 58:     lcd_send_nibble(2);
  1986  00361C  0E02               	movlw	2
  1987  00361E  ECA7  F01C         	call	_lcd_send_nibble
  1988                           
  1989                           ;lcd_x8.c: 59:     for (i = 0; i <= 3; ++i)
  1990  003622  0E00               	movlw	0
  1991  003624  6E0B               	movwf	lcd_init@i,c
  1992  003626                     l4269:
  1993                           
  1994                           ;lcd_x8.c: 60:         lcd_send_byte(0, LCD_INIT_STRING[i]);
  1995  003626  0EE8               	movlw	low _LCD_INIT_STRING
  1996  003628  240B               	addwf	lcd_init@i,w,c
  1997  00362A  6ED9               	movwf	fsr2l,c
  1998  00362C  6ADA               	clrf	fsr2h,c
  1999  00362E  0E00               	movlw	high _LCD_INIT_STRING
  2000  003630  22DA               	addwfc	fsr2h,f,c
  2001  003632  50DF               	movf	indf2,w,c
  2002  003634  6E09               	movwf	lcd_send_byte@n,c
  2003  003636  0E00               	movlw	0
  2004  003638  ECAA  F01B         	call	_lcd_send_byte
  2005  00363C  2A0B               	incf	lcd_init@i,f,c
  2006  00363E  0E03               	movlw	3
  2007  003640  640B               	cpfsgt	lcd_init@i,c
  2008  003642  D7F1               	goto	l4269
  2009  003644  0012               	return	
  2010  003646                     __end_of_lcd_init:
  2011                           	opt callstack 0
  2012                           
  2013 ;; *************** function _init_adc_no_lib *****************
  2014 ;; Defined at:
  2015 ;;		line 11 in file "my_adc.c"
  2016 ;; Parameters:    Size  Location     Type
  2017 ;;		None
  2018 ;; Auto vars:     Size  Location     Type
  2019 ;;		None
  2020 ;; Return value:  Size  Location     Type
  2021 ;;                  1    wreg      void 
  2022 ;; Registers used:
  2023 ;;		wreg, status,2
  2024 ;; Tracked objects:
  2025 ;;		On entry : 0/0
  2026 ;;		On exit  : 0/0
  2027 ;;		Unchanged: 0/0
  2028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2033 ;;Total ram usage:        0 bytes
  2034 ;; Hardware stack levels used:    1
  2035 ;; This function calls:
  2036 ;;		Nothing
  2037 ;; This function is called by:
  2038 ;;		_main
  2039 ;; This function uses a non-reentrant model
  2040 ;;
  2041                           
  2042                           	psect	text8
  2043  0039A0                     __ptext8:
  2044                           	opt callstack 0
  2045  0039A0                     _init_adc_no_lib:
  2046                           	opt callstack 30
  2047                           
  2048                           ;my_adc.c: 12:     ADCON0 = 0;
  2049                           
  2050                           ;incstack = 0
  2051  0039A0  0E00               	movlw	0
  2052  0039A2  6EC2               	movwf	4034,c	;volatile
  2053                           
  2054                           ;my_adc.c: 13:     ADCON0bits.ADON = 1;
  2055  0039A4  80C2               	bsf	4034,0,c	;volatile
  2056                           
  2057                           ;my_adc.c: 14:     ADCON2 = 0b10001001;
  2058  0039A6  0E89               	movlw	137
  2059  0039A8  6EC0               	movwf	4032,c	;volatile
  2060  0039AA  0012               	return		;funcret
  2061  0039AC                     __end_of_init_adc_no_lib:
  2062                           	opt callstack 0
  2063                           
  2064 ;; *************** function _initPorts *****************
  2065 ;; Defined at:
  2066 ;;		line 94 in file "test.c"
  2067 ;; Parameters:    Size  Location     Type
  2068 ;;		None
  2069 ;; Auto vars:     Size  Location     Type
  2070 ;;		None
  2071 ;; Return value:  Size  Location     Type
  2072 ;;                  1    wreg      void 
  2073 ;; Registers used:
  2074 ;;		wreg, status,2
  2075 ;; Tracked objects:
  2076 ;;		On entry : 0/0
  2077 ;;		On exit  : 0/0
  2078 ;;		Unchanged: 0/0
  2079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2083 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2084 ;;Total ram usage:        0 bytes
  2085 ;; Hardware stack levels used:    1
  2086 ;; This function calls:
  2087 ;;		Nothing
  2088 ;; This function is called by:
  2089 ;;		_main
  2090 ;; This function uses a non-reentrant model
  2091 ;;
  2092                           
  2093                           	psect	text9
  2094  0037C6                     __ptext9:
  2095                           	opt callstack 0
  2096  0037C6                     _initPorts:
  2097                           	opt callstack 30
  2098                           
  2099                           ;test.c: 95:     ADCON1 = 0x00;
  2100                           
  2101                           ;incstack = 0
  2102  0037C6  0E00               	movlw	0
  2103  0037C8  6EC1               	movwf	4033,c	;volatile
  2104                           
  2105                           ;test.c: 96:     ADCON0 = 0;
  2106  0037CA  0E00               	movlw	0
  2107  0037CC  6EC2               	movwf	4034,c	;volatile
  2108                           
  2109                           ;test.c: 97:     ADCON1 = 0b00001100;
  2110  0037CE  0E0C               	movlw	12
  2111  0037D0  6EC1               	movwf	4033,c	;volatile
  2112                           
  2113                           ;test.c: 98:     LATA = LATB = LATC = LATD = LATE = 0;
  2114  0037D2  0E00               	movlw	0
  2115  0037D4  6E8D               	movwf	3981,c	;volatile
  2116  0037D6  CF8D FF8C          	movff	3981,3980	;volatile
  2117  0037DA  CF8C FF8B          	movff	3980,3979	;volatile
  2118  0037DE  CF8B FF8A          	movff	3979,3978	;volatile
  2119  0037E2  CF8A FF89          	movff	3978,3977	;volatile
  2120                           
  2121                           ;test.c: 99:     TRISA = 0xFF;
  2122  0037E6  6892               	setf	3986,c	;volatile
  2123                           
  2124                           ;test.c: 100:     TRISB = 0xFF;
  2125  0037E8  6893               	setf	3987,c	;volatile
  2126                           
  2127                           ;test.c: 101:     TRISD = TRISE = 0;
  2128  0037EA  0E00               	movlw	0
  2129  0037EC  6E96               	movwf	3990,c	;volatile
  2130  0037EE  CF96 FF95          	movff	3990,3989	;volatile
  2131                           
  2132                           ;test.c: 102:     TRISC = 0b10000000;
  2133  0037F2  0E80               	movlw	128
  2134  0037F4  6E94               	movwf	3988,c	;volatile
  2135  0037F6  0012               	return		;funcret
  2136  0037F8                     __end_of_initPorts:
  2137                           	opt callstack 0
  2138                           
  2139 ;; *************** function _display *****************
  2140 ;; Defined at:
  2141 ;;		line 105 in file "test.c"
  2142 ;; Parameters:    Size  Location     Type
  2143 ;;		None
  2144 ;; Auto vars:     Size  Location     Type
  2145 ;;		None
  2146 ;; Return value:  Size  Location     Type
  2147 ;;                  1    wreg      void 
  2148 ;; Registers used:
  2149 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2150 ;; Tracked objects:
  2151 ;;		On entry : 0/0
  2152 ;;		On exit  : 0/0
  2153 ;;		Unchanged: 0/0
  2154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2158 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2159 ;;Total ram usage:        0 bytes
  2160 ;; Hardware stack levels used:    1
  2161 ;; Hardware stack levels required when called:    8
  2162 ;; This function calls:
  2163 ;;		_lcd_gotoxy
  2164 ;;		_lcd_puts
  2165 ;;		_sprintf
  2166 ;; This function is called by:
  2167 ;;		_main
  2168 ;; This function uses a non-reentrant model
  2169 ;;
  2170                           
  2171                           	psect	text10
  2172  003334                     __ptext10:
  2173                           	opt callstack 0
  2174  003334                     _display:
  2175                           	opt callstack 22
  2176                           
  2177                           ;test.c: 108:     lcd_gotoxy(1, 1);
  2178                           
  2179                           ;incstack = 0
  2180  003334  0E01               	movlw	1
  2181  003336  6E0B               	movwf	lcd_gotoxy@y,c
  2182  003338  0E01               	movlw	1
  2183  00333A  ECD5  F01A         	call	_lcd_gotoxy
  2184                           
  2185                           ;test.c: 109:     sprintf(F, "Temp: %5.1fC", SP);
  2186  00333E  0E50               	movlw	low _F
  2187  003340  0100               	movlb	0	; () banked
  2188  003342  6FC6               	movwf	sprintf@s& (0+255),b
  2189  003344  0E01               	movlw	high _F
  2190  003346  6FC7               	movwf	(sprintf@s+1)& (0+255),b
  2191  003348  0E2C               	movlw	low STR_1
  2192  00334A  6FC8               	movwf	sprintf@fmt& (0+255),b
  2193  00334C  0E10               	movlw	high STR_1
  2194  00334E  6FC9               	movwf	(sprintf@fmt+1)& (0+255),b
  2195  003350  C0E0  F0CA         	movff	_SP,?_sprintf+4
  2196  003354  C0E1  F0CB         	movff	_SP+1,?_sprintf+5
  2197  003358  C0E2  F0CC         	movff	_SP+2,?_sprintf+6
  2198  00335C  C0E3  F0CD         	movff	_SP+3,?_sprintf+7
  2199  003360  ECAC  F01A         	call	_sprintf	;wreg free
  2200                           
  2201                           ;test.c: 110:     lcd_puts(F);
  2202  003364  0E50               	movlw	low _F
  2203  003366  6E13               	movwf	lcd_puts@s,c
  2204  003368  0E01               	movlw	high _F
  2205  00336A  6E14               	movwf	lcd_puts@s+1,c
  2206  00336C  EC95  F01C         	call	_lcd_puts	;wreg free
  2207                           
  2208                           ;test.c: 112:     lcd_gotoxy(1, 2);
  2209  003370  0E02               	movlw	2
  2210  003372  6E0B               	movwf	lcd_gotoxy@y,c
  2211  003374  0E01               	movlw	1
  2212  003376  ECD5  F01A         	call	_lcd_gotoxy
  2213                           
  2214                           ;test.c: 113:     sprintf(J, "FATHI");
  2215  00337A  0E00               	movlw	low _J
  2216  00337C  0100               	movlb	0	; () banked
  2217  00337E  6FC6               	movwf	sprintf@s& (0+255),b
  2218  003380  0E02               	movlw	high _J
  2219  003382  6FC7               	movwf	(sprintf@s+1)& (0+255),b
  2220  003384  0E57               	movlw	low STR_2
  2221  003386  6FC8               	movwf	sprintf@fmt& (0+255),b
  2222  003388  0E10               	movlw	high STR_2
  2223  00338A  6FC9               	movwf	(sprintf@fmt+1)& (0+255),b
  2224  00338C  ECAC  F01A         	call	_sprintf	;wreg free
  2225                           
  2226                           ;test.c: 114:     lcd_puts(J);
  2227  003390  0E00               	movlw	low _J
  2228  003392  6E13               	movwf	lcd_puts@s,c
  2229  003394  0E02               	movlw	high _J
  2230  003396  6E14               	movwf	lcd_puts@s+1,c
  2231  003398  EC95  F01C         	call	_lcd_puts	;wreg free
  2232  00339C  0012               	return		;funcret
  2233  00339E                     __end_of_display:
  2234                           	opt callstack 0
  2235                           
  2236 ;; *************** function _sprintf *****************
  2237 ;; Defined at:
  2238 ;;		line 9 in file "D:\Microchip\pic\sources\c99\common\nf_sprintf.c"
  2239 ;; Parameters:    Size  Location     Type
  2240 ;;  s               2   70[BANK0 ] PTR unsigned char 
  2241 ;;		 -> main@Buffer(64), J(64), F(64), 
  2242 ;;  fmt             2   72[BANK0 ] PTR const unsigned char 
  2243 ;;		 -> STR_8(43), STR_7(7), STR_6(12), STR_5(11), 
  2244 ;;		 -> STR_2(6), STR_1(13), 
  2245 ;; Auto vars:     Size  Location     Type
  2246 ;;  f               6   82[BANK0 ] struct _IO_FILE
  2247 ;;  ap              2   80[BANK0 ] PTR void [1]
  2248 ;;		 -> ?_sprintf(2), 
  2249 ;;  ret             2    0        int 
  2250 ;; Return value:  Size  Location     Type
  2251 ;;                  2   70[BANK0 ] int 
  2252 ;; Registers used:
  2253 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2254 ;; Tracked objects:
  2255 ;;		On entry : 0/0
  2256 ;;		On exit  : 0/0
  2257 ;;		Unchanged: 0/0
  2258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2259 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2260 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2262 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2263 ;;Total ram usage:       18 bytes
  2264 ;; Hardware stack levels used:    1
  2265 ;; Hardware stack levels required when called:    7
  2266 ;; This function calls:
  2267 ;;		_vfprintf
  2268 ;; This function is called by:
  2269 ;;		_display
  2270 ;;		_main
  2271 ;; This function uses a non-reentrant model
  2272 ;;
  2273                           
  2274                           	psect	text11
  2275  003558                     __ptext11:
  2276                           	opt callstack 0
  2277  003558                     _sprintf:
  2278                           	opt callstack 23
  2279                           
  2280                           ;incstack = 0
  2281  003558  0ECA               	movlw	low (?_sprintf+4)
  2282  00355A  0100               	movlb	0	; () banked
  2283  00355C  6FD0               	movwf	sprintf@ap& (0+255),b
  2284  00355E  0E00               	movlw	high (?_sprintf+4)
  2285  003560  6FD1               	movwf	(sprintf@ap+1)& (0+255),b
  2286  003562  C0C6  F0D2         	movff	sprintf@s,sprintf@f
  2287  003566  C0C7  F0D3         	movff	sprintf@s+1,sprintf@f+1
  2288                           
  2289                           ; BSR set to: 0
  2290  00356A  0E00               	movlw	0
  2291  00356C  6FD5               	movwf	(sprintf@f+3)& (0+255),b
  2292  00356E  0E00               	movlw	0
  2293  003570  6FD4               	movwf	(sprintf@f+2)& (0+255),b
  2294                           
  2295                           ; BSR set to: 0
  2296  003572  0E00               	movlw	0
  2297  003574  6FD7               	movwf	(sprintf@f+5)& (0+255),b
  2298  003576  0E00               	movlw	0
  2299  003578  6FD6               	movwf	(sprintf@f+4)& (0+255),b
  2300                           
  2301                           ; BSR set to: 0
  2302  00357A  0ED2               	movlw	low sprintf@f
  2303  00357C  6E74               	movwf	vfprintf@fp,c
  2304  00357E  0E00               	movlw	high sprintf@f
  2305  003580  6E75               	movwf	vfprintf@fp+1,c
  2306  003582  C0C8  F076         	movff	sprintf@fmt,vfprintf@fmt
  2307  003586  C0C9  F077         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2308  00358A  0ED0               	movlw	low sprintf@ap
  2309  00358C  6E78               	movwf	vfprintf@ap,c
  2310  00358E  0E00               	movlw	high sprintf@ap
  2311  003590  6E79               	movwf	vfprintf@ap+1,c
  2312  003592  EC57  F01A         	call	_vfprintf	;wreg free
  2313  003596  0100               	movlb	0	; () banked
  2314  003598  51D4               	movf	(sprintf@f+2)& (0+255),w,b
  2315  00359A  25C6               	addwf	sprintf@s& (0+255),w,b
  2316  00359C  6ED9               	movwf	fsr2l,c
  2317  00359E  51D5               	movf	(sprintf@f+3)& (0+255),w,b
  2318  0035A0  21C7               	addwfc	(sprintf@s+1)& (0+255),w,b
  2319  0035A2  6EDA               	movwf	fsr2h,c
  2320  0035A4  0E00               	movlw	0
  2321  0035A6  6EDF               	movwf	indf2,c
  2322                           
  2323                           ; BSR set to: 0
  2324  0035A8  0012               	return		;funcret
  2325  0035AA                     __end_of_sprintf:
  2326                           	opt callstack 0
  2327                           
  2328 ;; *************** function _vfprintf *****************
  2329 ;; Defined at:
  2330 ;;		line 1368 in file "D:\Microchip\pic\sources\c99\common\doprnt.c"
  2331 ;; Parameters:    Size  Location     Type
  2332 ;;  fp              2  115[COMRAM] PTR struct _IO_FILE
  2333 ;;		 -> sprintf@f(6), 
  2334 ;;  fmt             2  117[COMRAM] PTR const unsigned char 
  2335 ;;		 -> STR_8(43), STR_7(7), STR_6(12), STR_5(11), 
  2336 ;;		 -> STR_2(6), STR_1(13), 
  2337 ;;  ap              2  119[COMRAM] PTR PTR void 
  2338 ;;		 -> sprintf@ap(2), 
  2339 ;; Auto vars:     Size  Location     Type
  2340 ;;  cfmt            2  121[COMRAM] PTR unsigned char 
  2341 ;;		 -> STR_8(43), STR_7(7), STR_6(12), STR_5(11), 
  2342 ;;		 -> STR_2(6), STR_1(13), 
  2343 ;; Return value:  Size  Location     Type
  2344 ;;                  2  115[COMRAM] int 
  2345 ;; Registers used:
  2346 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2347 ;; Tracked objects:
  2348 ;;		On entry : 0/0
  2349 ;;		On exit  : 0/0
  2350 ;;		Unchanged: 0/0
  2351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2352 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2353 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2355 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2356 ;;Total ram usage:        8 bytes
  2357 ;; Hardware stack levels used:    1
  2358 ;; Hardware stack levels required when called:    6
  2359 ;; This function calls:
  2360 ;;		_vfpfcnvrt
  2361 ;; This function is called by:
  2362 ;;		_sprintf
  2363 ;; This function uses a non-reentrant model
  2364 ;;
  2365                           
  2366                           	psect	text12
  2367  0034AE                     __ptext12:
  2368                           	opt callstack 0
  2369  0034AE                     _vfprintf:
  2370                           	opt callstack 23
  2371                           
  2372                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 1368: int vfprintf(FILE *fp, const char *
      +                          fmt, va_list ap);D:\Microchip\pic\sources\c99\common\doprnt.c: 1369: {;D:\Microchip\pic\
      +                          sources\c99\common\doprnt.c: 1371:     char *cfmt;;D:\Microchip\pic\sources\c99\common\d
      +                          oprnt.c: 1373:     cfmt = (char *)fmt;
  2373                           
  2374                           ; BSR set to: 0
  2375                           ;incstack = 0
  2376  0034AE  C076  F07A         	movff	vfprintf@fmt,vfprintf@cfmt
  2377  0034B2  C077  F07B         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2378                           
  2379                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 1374:     nout = 0;
  2380  0034B6  0E00               	movlw	0
  2381  0034B8  0100               	movlb	0	; () banked
  2382  0034BA  6FE5               	movwf	(_nout+1)& (0+255),b
  2383  0034BC  0E00               	movlw	0
  2384  0034BE  6FE4               	movwf	_nout& (0+255),b
  2385                           
  2386                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 1375:     while (*cfmt) {
  2387  0034C0  D013               	goto	l4163
  2388  0034C2                     l4161:
  2389                           
  2390                           ; BSR set to: 0
  2391                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 1376:         nout += vfpfcnvrt(fp, &cfmt
      +                          , ap);
  2392  0034C2  C074  F06A         	movff	vfprintf@fp,vfpfcnvrt@fp
  2393  0034C6  C075  F06B         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2394  0034CA  0E7A               	movlw	low vfprintf@cfmt
  2395  0034CC  6E6C               	movwf	vfpfcnvrt@fmt,c
  2396  0034CE  0E00               	movlw	high vfprintf@cfmt
  2397  0034D0  6E6D               	movwf	vfpfcnvrt@fmt+1,c
  2398  0034D2  C078  F06E         	movff	vfprintf@ap,vfpfcnvrt@ap
  2399  0034D6  C079  F06F         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2400  0034DA  ECF8  F00C         	call	_vfpfcnvrt	;wreg free
  2401  0034DE  506A               	movf	?_vfpfcnvrt,w,c
  2402  0034E0  0100               	movlb	0	; () banked
  2403  0034E2  27E4               	addwf	_nout& (0+255),f,b
  2404  0034E4  506B               	movf	?_vfpfcnvrt+1,w,c
  2405  0034E6  23E5               	addwfc	(_nout+1)& (0+255),f,b
  2406  0034E8                     l4163:
  2407                           
  2408                           ; BSR set to: 0
  2409                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 1375:     while (*cfmt) {
  2410  0034E8  C07A  FFF6         	movff	vfprintf@cfmt,tblptrl
  2411  0034EC  C07B  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2412  0034F0                     	if	0	;tblptru may be non-zero
  2413  0034F0                     	endif
  2414  0034F0                     	if	0	;tblptru may be non-zero
  2415  0034F0                     	endif
  2416  0034F0  0008               	tblrd		*
  2417  0034F2  50F5               	movf	tablat,w,c
  2418  0034F4  0900               	iorlw	0
  2419  0034F6  A4D8               	btfss	status,2,c
  2420  0034F8  D7E4               	goto	l4161
  2421                           
  2422                           ; BSR set to: 0
  2423                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 1378:     return nout;
  2424  0034FA  C0E4  F074         	movff	_nout,?_vfprintf
  2425  0034FE  C0E5  F075         	movff	_nout+1,?_vfprintf+1
  2426                           
  2427                           ; BSR set to: 0
  2428  003502  0012               	return		;funcret
  2429  003504                     __end_of_vfprintf:
  2430                           	opt callstack 0
  2431                           
  2432 ;; *************** function _vfpfcnvrt *****************
  2433 ;; Defined at:
  2434 ;;		line 670 in file "D:\Microchip\pic\sources\c99\common\doprnt.c"
  2435 ;; Parameters:    Size  Location     Type
  2436 ;;  fp              2  105[COMRAM] PTR struct _IO_FILE
  2437 ;;		 -> sprintf@f(6), 
  2438 ;;  fmt             2  107[COMRAM] PTR PTR unsigned char 
  2439 ;;		 -> vfprintf@cfmt(2), 
  2440 ;;  ap              2  109[COMRAM] PTR PTR void 
  2441 ;;		 -> sprintf@ap(2), 
  2442 ;; Auto vars:     Size  Location     Type
  2443 ;;  llu             8    0        unsigned long long 
  2444 ;;  ll              8    0        long long 
  2445 ;;  f               4   62[BANK0 ] long long 
  2446 ;;  ct              3   66[BANK0 ] unsigned char [3]
  2447 ;;  vp              3    0        PTR void 
  2448 ;;  cp              3    0        PTR unsigned char 
  2449 ;;  i               2    0        int 
  2450 ;;  done            2    0        int 
  2451 ;;  c               1   69[BANK0 ] unsigned char 
  2452 ;; Return value:  Size  Location     Type
  2453 ;;                  2  105[COMRAM] int 
  2454 ;; Registers used:
  2455 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2456 ;; Tracked objects:
  2457 ;;		On entry : 0/0
  2458 ;;		On exit  : 0/0
  2459 ;;		Unchanged: 0/0
  2460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2461 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2462 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2463 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2464 ;;      Totals:        10      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2465 ;;Total ram usage:       24 bytes
  2466 ;; Hardware stack levels used:    1
  2467 ;; Hardware stack levels required when called:    5
  2468 ;; This function calls:
  2469 ;;		_atoi
  2470 ;;		_efgtoa
  2471 ;;		_fputc
  2472 ;;		_isdigit
  2473 ;;		_isupper
  2474 ;;		_strncmp
  2475 ;;		_tolower
  2476 ;; This function is called by:
  2477 ;;		_vfprintf
  2478 ;; This function uses a non-reentrant model
  2479 ;;
  2480                           
  2481                           	psect	text13
  2482  0019F0                     __ptext13:
  2483                           	opt callstack 0
  2484  0019F0                     _vfpfcnvrt:
  2485                           	opt callstack 23
  2486                           
  2487                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 670: static int vfpfcnvrt(FILE *fp, char 
      +                          *fmt[], va_list ap);D:\Microchip\pic\sources\c99\common\doprnt.c: 671: {;D:\Microchip\pi
      +                          c\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;D:\Microchip\pic\sources\c99
      +                          \common\doprnt.c: 673:     int done, i;;D:\Microchip\pic\sources\c99\common\doprnt.c: 67
      +                          4:     long long ll;;D:\Microchip\pic\sources\c99\common\doprnt.c: 675:     unsigned lon
      +                          g long llu;;D:\Microchip\pic\sources\c99\common\doprnt.c: 676:     long double f;
  2488                           
  2489                           ; BSR set to: 0
  2490                           ;incstack = 0
  2491  0019F0  C06C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2492  0019F4  C06D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2493  0019F8  CFDE FFF6          	movff	postinc2,tblptrl
  2494  0019FC  CFDD FFF7          	movff	postdec2,tblptrh
  2495  001A00                     	if	0	;tblptru may be non-zero
  2496  001A00                     	endif
  2497  001A00                     	if	0	;tblptru may be non-zero
  2498  001A00                     	endif
  2499  001A00  0008               	tblrd		*
  2500  001A02  50F5               	movf	tablat,w,c
  2501  001A04  0A25               	xorlw	37
  2502  001A06  A4D8               	btfss	status,2,c
  2503  001A08  D21A               	goto	l4131
  2504                           
  2505                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 681:         ++*fmt;
  2506  001A0A  C06C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2507  001A0E  C06D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2508  001A12  2ADE               	incf	postinc2,f,c
  2509  001A14  0E00               	movlw	0
  2510  001A16  22DD               	addwfc	postdec2,f,c
  2511                           
  2512                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 683:         flags = width = 0;
  2513  001A18  0E00               	movlw	0
  2514  001A1A  0100               	movlb	0	; () banked
  2515  001A1C  6FE7               	movwf	(_width+1)& (0+255),b
  2516  001A1E  0E00               	movlw	0
  2517  001A20  6FE6               	movwf	_width& (0+255),b
  2518  001A22  C0E6  F07E         	movff	_width,_flags
  2519  001A26  C0E7  F07F         	movff	_width+1,_flags+1
  2520                           
  2521                           ; BSR set to: 0
  2522                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 684:         prec = -1;
  2523  001A2A  687C               	setf	_prec,c
  2524  001A2C  687D               	setf	_prec+1,c
  2525                           
  2526                           ; BSR set to: 0
  2527                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 723:         if ((*fmt)[0] == '*') {
  2528  001A2E  C06C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2529  001A32  C06D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2530  001A36  CFDE FFF6          	movff	postinc2,tblptrl
  2531  001A3A  CFDD FFF7          	movff	postdec2,tblptrh
  2532  001A3E                     	if	0	;tblptru may be non-zero
  2533  001A3E                     	endif
  2534  001A3E                     	if	0	;tblptru may be non-zero
  2535  001A3E                     	endif
  2536  001A3E  0008               	tblrd		*
  2537  001A40  50F5               	movf	tablat,w,c
  2538  001A42  0A2A               	xorlw	42
  2539  001A44  A4D8               	btfss	status,2,c
  2540  001A46  D023               	goto	l4047
  2541                           
  2542                           ; BSR set to: 0
  2543                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 724:             ++*fmt;
  2544  001A48  C06C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2545  001A4C  C06D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2546  001A50  2ADE               	incf	postinc2,f,c
  2547  001A52  0E00               	movlw	0
  2548  001A54  22DD               	addwfc	postdec2,f,c
  2549                           
  2550                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 725:             width = (*(int *)__va_ar
      +                          g(*(int **)ap, (int)0));
  2551  001A56  C06E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2552  001A5A  C06F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2553  001A5E  CFDF F070          	movff	indf2,??_vfpfcnvrt
  2554  001A62  0E02               	movlw	2
  2555  001A64  26DE               	addwf	postinc2,f,c
  2556  001A66  CFDF F071          	movff	indf2,??_vfpfcnvrt+1
  2557  001A6A  0E00               	movlw	0
  2558  001A6C  22DD               	addwfc	postdec2,f,c
  2559  001A6E  C070  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2560  001A72  C071  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2561  001A76  CFDE F0E6          	movff	postinc2,_width
  2562  001A7A  CFDD F0E7          	movff	postdec2,_width+1
  2563                           
  2564                           ; BSR set to: 0
  2565                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 726:             if (width < 0) {
  2566  001A7E  AFE7               	btfss	(_width+1)& (0+255),7,b
  2567  001A80  D040               	goto	u4790
  2568                           
  2569                           ; BSR set to: 0
  2570                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 727:                 flags |= (1 << 0);
  2571  001A82  807E               	bsf	_flags,0,c
  2572                           
  2573                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 728:                 width = -width;
  2574  001A84  6DE6               	negf	_width& (0+255),b
  2575  001A86  1FE7               	comf	(_width+1)& (0+255),f,b
  2576  001A88  B0D8               	btfsc	status,0,c
  2577  001A8A  2BE7               	incf	(_width+1)& (0+255),f,b
  2578  001A8C  D03A               	goto	u4790
  2579  001A8E                     l4047:
  2580                           
  2581                           ; BSR set to: 0
  2582                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 731:             width = atoi(*fmt);
  2583  001A8E  C06C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2584  001A92  C06D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2585  001A96  CFDE F008          	movff	postinc2,atoi@s
  2586  001A9A  CFDD F009          	movff	postdec2,atoi@s+1
  2587  001A9E  ECE3  F015         	call	_atoi	;wreg free
  2588  001AA2  C008  F0E6         	movff	?_atoi,_width
  2589  001AA6  C009  F0E7         	movff	?_atoi+1,_width+1
  2590                           
  2591                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 732:             while ((0 ? isdigit((*fm
      +                          t)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2592  001AAA  D007               	goto	l4051
  2593  001AAC                     l4049:
  2594                           
  2595                           ; BSR set to: 0
  2596                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 733:                 ++*fmt;
  2597  001AAC  C06C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2598  001AB0  C06D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2599  001AB4  2ADE               	incf	postinc2,f,c
  2600  001AB6  0E00               	movlw	0
  2601  001AB8  22DD               	addwfc	postdec2,f,c
  2602  001ABA                     l4051:
  2603  001ABA  0ED0               	movlw	208
  2604  001ABC  6E70               	movwf	??_vfpfcnvrt& (0+255),c
  2605  001ABE  0EFF               	movlw	255
  2606  001AC0  6E71               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  2607  001AC2  C06C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2608  001AC6  C06D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2609  001ACA  CFDE FFF6          	movff	postinc2,tblptrl
  2610  001ACE  CFDD FFF7          	movff	postdec2,tblptrh
  2611  001AD2                     	if	0	;tblptru may be non-zero
  2612  001AD2                     	endif
  2613  001AD2                     	if	0	;tblptru may be non-zero
  2614  001AD2                     	endif
  2615  001AD2  0008               	tblrd		*
  2616  001AD4  50F5               	movf	tablat,w,c
  2617  001AD6  6E72               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  2618  001AD8  6A73               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  2619  001ADA  5070               	movf	??_vfpfcnvrt,w,c
  2620  001ADC  2672               	addwf	??_vfpfcnvrt+2,f,c
  2621  001ADE  5071               	movf	??_vfpfcnvrt+1,w,c
  2622  001AE0  2273               	addwfc	??_vfpfcnvrt+3,f,c
  2623  001AE2  5073               	movf	??_vfpfcnvrt+3,w,c
  2624  001AE4  E106               	bnz	u4770
  2625  001AE6  0E0A               	movlw	10
  2626  001AE8  5C72               	subwf	??_vfpfcnvrt+2,w,c
  2627  001AEA  B0D8               	btfsc	status,0,c
  2628  001AEC  D002               	goto	u4770
  2629  001AEE  0E01               	movlw	1
  2630  001AF0  D001               	goto	u4780
  2631  001AF2                     u4770:
  2632  001AF2  0E00               	movlw	0
  2633  001AF4                     u4780:
  2634  001AF4  0100               	movlb	0	; () banked
  2635  001AF6  6FB8               	movwf	_vfpfcnvrt$680& (0+255),b
  2636  001AF8  6BB9               	clrf	(_vfpfcnvrt$680+1)& (0+255),b
  2637                           
  2638                           ; BSR set to: 0
  2639  001AFA  51B8               	movf	_vfpfcnvrt$680& (0+255),w,b
  2640  001AFC  11B9               	iorwf	(_vfpfcnvrt$680+1)& (0+255),w,b
  2641  001AFE  A4D8               	btfss	status,2,c
  2642  001B00  D7D5               	goto	l4049
  2643  001B02                     u4790:
  2644                           
  2645                           ; BSR set to: 0
  2646                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 740:         if ((*fmt)[0] == '.') {
  2647  001B02  C06C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2648  001B06  C06D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2649  001B0A  CFDE FFF6          	movff	postinc2,tblptrl
  2650  001B0E  CFDD FFF7          	movff	postdec2,tblptrh
  2651  001B12                     	if	0	;tblptru may be non-zero
  2652  001B12                     	endif
  2653  001B12                     	if	0	;tblptru may be non-zero
  2654  001B12                     	endif
  2655  001B12  0008               	tblrd		*
  2656  001B14  50F5               	movf	tablat,w,c
  2657  001B16  0A2E               	xorlw	46
  2658  001B18  A4D8               	btfss	status,2,c
  2659  001B1A  D06E               	goto	u4840
  2660                           
  2661                           ; BSR set to: 0
  2662                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 741:             prec = 0;
  2663  001B1C  0E00               	movlw	0
  2664  001B1E  6E7D               	movwf	_prec+1,c
  2665  001B20  0E00               	movlw	0
  2666  001B22  6E7C               	movwf	_prec,c
  2667                           
  2668                           ; BSR set to: 0
  2669                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 742:             ++*fmt;
  2670  001B24  C06C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2671  001B28  C06D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2672  001B2C  2ADE               	incf	postinc2,f,c
  2673  001B2E  0E00               	movlw	0
  2674  001B30  22DD               	addwfc	postdec2,f,c
  2675                           
  2676                           ; BSR set to: 0
  2677                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 743:             if ((*fmt)[0] == '*') {
  2678  001B32  C06C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2679  001B36  C06D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2680  001B3A  CFDE FFF6          	movff	postinc2,tblptrl
  2681  001B3E  CFDD FFF7          	movff	postdec2,tblptrh
  2682  001B42                     	if	0	;tblptru may be non-zero
  2683  001B42                     	endif
  2684  001B42                     	if	0	;tblptru may be non-zero
  2685  001B42                     	endif
  2686  001B42  0008               	tblrd		*
  2687  001B44  50F5               	movf	tablat,w,c
  2688  001B46  0A2A               	xorlw	42
  2689  001B48  A4D8               	btfss	status,2,c
  2690  001B4A  D01C               	goto	l4067
  2691                           
  2692                           ; BSR set to: 0
  2693                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 744:                 ++*fmt;
  2694  001B4C  C06C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2695  001B50  C06D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2696  001B54  2ADE               	incf	postinc2,f,c
  2697  001B56  0E00               	movlw	0
  2698  001B58  22DD               	addwfc	postdec2,f,c
  2699                           
  2700                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 745:                 prec = (*(int *)__va
      +                          _arg(*(int **)ap, (int)0));
  2701  001B5A  C06E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2702  001B5E  C06F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2703  001B62  CFDF F070          	movff	indf2,??_vfpfcnvrt
  2704  001B66  0E02               	movlw	2
  2705  001B68  26DE               	addwf	postinc2,f,c
  2706  001B6A  CFDF F071          	movff	indf2,??_vfpfcnvrt+1
  2707  001B6E  0E00               	movlw	0
  2708  001B70  22DD               	addwfc	postdec2,f,c
  2709  001B72  C070  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2710  001B76  C071  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2711  001B7A  CFDE F07C          	movff	postinc2,_prec
  2712  001B7E  CFDD F07D          	movff	postdec2,_prec+1
  2713                           
  2714                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 746:             } else {
  2715  001B82  D03A               	goto	u4840
  2716  001B84                     l4067:
  2717                           
  2718                           ; BSR set to: 0
  2719                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 747:                 prec = atoi(*fmt);
  2720  001B84  C06C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2721  001B88  C06D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2722  001B8C  CFDE F008          	movff	postinc2,atoi@s
  2723  001B90  CFDD F009          	movff	postdec2,atoi@s+1
  2724  001B94  ECE3  F015         	call	_atoi	;wreg free
  2725  001B98  C008  F07C         	movff	?_atoi,_prec
  2726  001B9C  C009  F07D         	movff	?_atoi+1,_prec+1
  2727                           
  2728                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 748:                 while ((0 ? isdigit(
      +                          (*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2729  001BA0  D007               	goto	l4071
  2730  001BA2                     l4069:
  2731                           
  2732                           ; BSR set to: 0
  2733                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 749:                     ++*fmt;
  2734  001BA2  C06C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2735  001BA6  C06D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2736  001BAA  2ADE               	incf	postinc2,f,c
  2737  001BAC  0E00               	movlw	0
  2738  001BAE  22DD               	addwfc	postdec2,f,c
  2739  001BB0                     l4071:
  2740  001BB0  0ED0               	movlw	208
  2741  001BB2  6E70               	movwf	??_vfpfcnvrt& (0+255),c
  2742  001BB4  0EFF               	movlw	255
  2743  001BB6  6E71               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  2744  001BB8  C06C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2745  001BBC  C06D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2746  001BC0  CFDE FFF6          	movff	postinc2,tblptrl
  2747  001BC4  CFDD FFF7          	movff	postdec2,tblptrh
  2748  001BC8                     	if	0	;tblptru may be non-zero
  2749  001BC8                     	endif
  2750  001BC8                     	if	0	;tblptru may be non-zero
  2751  001BC8                     	endif
  2752  001BC8  0008               	tblrd		*
  2753  001BCA  50F5               	movf	tablat,w,c
  2754  001BCC  6E72               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  2755  001BCE  6A73               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  2756  001BD0  5070               	movf	??_vfpfcnvrt,w,c
  2757  001BD2  2672               	addwf	??_vfpfcnvrt+2,f,c
  2758  001BD4  5071               	movf	??_vfpfcnvrt+1,w,c
  2759  001BD6  2273               	addwfc	??_vfpfcnvrt+3,f,c
  2760  001BD8  5073               	movf	??_vfpfcnvrt+3,w,c
  2761  001BDA  E106               	bnz	u4820
  2762  001BDC  0E0A               	movlw	10
  2763  001BDE  5C72               	subwf	??_vfpfcnvrt+2,w,c
  2764  001BE0  B0D8               	btfsc	status,0,c
  2765  001BE2  D002               	goto	u4820
  2766  001BE4  0E01               	movlw	1
  2767  001BE6  D001               	goto	u4830
  2768  001BE8                     u4820:
  2769  001BE8  0E00               	movlw	0
  2770  001BEA                     u4830:
  2771  001BEA  0100               	movlb	0	; () banked
  2772  001BEC  6FBA               	movwf	_vfpfcnvrt$681& (0+255),b
  2773  001BEE  6BBB               	clrf	(_vfpfcnvrt$681+1)& (0+255),b
  2774                           
  2775                           ; BSR set to: 0
  2776  001BF0  51BA               	movf	_vfpfcnvrt$681& (0+255),w,b
  2777  001BF2  11BB               	iorwf	(_vfpfcnvrt$681+1)& (0+255),w,b
  2778  001BF4  A4D8               	btfss	status,2,c
  2779  001BF6  D7D5               	goto	l4069
  2780  001BF8                     u4840:
  2781                           
  2782                           ; BSR set to: 0
  2783                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 757:         ct[0] = tolower((int)(*fmt)[
      +                          0]);
  2784  001BF8  C06C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2785  001BFC  C06D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2786  001C00  CFDE FFF6          	movff	postinc2,tblptrl
  2787  001C04  CFDD FFF7          	movff	postdec2,tblptrh
  2788  001C08                     	if	0	;tblptru may be non-zero
  2789  001C08                     	endif
  2790  001C08                     	if	0	;tblptru may be non-zero
  2791  001C08                     	endif
  2792  001C08  0008               	tblrd		*
  2793  001C0A  50F5               	movf	tablat,w,c
  2794  001C0C  6E07               	movwf	tolower@c,c
  2795  001C0E  6A08               	clrf	tolower@c+1,c
  2796  001C10  EC23  F01B         	call	_tolower	;wreg free
  2797  001C14  5007               	movf	?_tolower,w,c
  2798  001C16  0100               	movlb	0	; () banked
  2799  001C18  6FC2               	movwf	vfpfcnvrt@ct& (0+255),b
  2800                           
  2801                           ; BSR set to: 0
  2802                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 758:         if (ct[0]) {
  2803  001C1A  51C2               	movf	vfpfcnvrt@ct& (0+255),w,b
  2804  001C1C  B4D8               	btfsc	status,2,c
  2805  001C1E  D035               	goto	l4087
  2806                           
  2807                           ; BSR set to: 0
  2808                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 759:             ct[1] = tolower((int)(*f
      +                          mt)[1]);
  2809  001C20  C06C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2810  001C24  C06D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2811  001C28  CFDE F070          	movff	postinc2,??_vfpfcnvrt
  2812  001C2C  CFDD F071          	movff	postdec2,??_vfpfcnvrt+1
  2813  001C30  0E01               	movlw	1
  2814  001C32  2670               	addwf	??_vfpfcnvrt,f,c
  2815  001C34  0E00               	movlw	0
  2816  001C36  2271               	addwfc	??_vfpfcnvrt+1,f,c
  2817  001C38  C070  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2818  001C3C  C071  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2819  001C40                     	if	0	;tblptru may be non-zero
  2820  001C40                     	endif
  2821  001C40                     	if	0	;tblptru may be non-zero
  2822  001C40                     	endif
  2823  001C40  0008               	tblrd		*
  2824  001C42  50F5               	movf	tablat,w,c
  2825  001C44  6E07               	movwf	tolower@c,c
  2826  001C46  6A08               	clrf	tolower@c+1,c
  2827  001C48  EC23  F01B         	call	_tolower	;wreg free
  2828  001C4C  5007               	movf	?_tolower,w,c
  2829  001C4E  0100               	movlb	0	; () banked
  2830  001C50  6FC3               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  2831                           
  2832                           ; BSR set to: 0
  2833                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 760:             if (ct[1]) {
  2834  001C52  51C3               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  2835  001C54  B4D8               	btfsc	status,2,c
  2836  001C56  D019               	goto	l4087
  2837                           
  2838                           ; BSR set to: 0
  2839                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 761:                 ct[2] = tolower((int
      +                          )(*fmt)[2]);
  2840  001C58  C06C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2841  001C5C  C06D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2842  001C60  CFDE F070          	movff	postinc2,??_vfpfcnvrt
  2843  001C64  CFDD F071          	movff	postdec2,??_vfpfcnvrt+1
  2844  001C68  0E02               	movlw	2
  2845  001C6A  2670               	addwf	??_vfpfcnvrt,f,c
  2846  001C6C  0E00               	movlw	0
  2847  001C6E  2271               	addwfc	??_vfpfcnvrt+1,f,c
  2848  001C70  C070  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2849  001C74  C071  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2850  001C78                     	if	0	;tblptru may be non-zero
  2851  001C78                     	endif
  2852  001C78                     	if	0	;tblptru may be non-zero
  2853  001C78                     	endif
  2854  001C78  0008               	tblrd		*
  2855  001C7A  50F5               	movf	tablat,w,c
  2856  001C7C  6E07               	movwf	tolower@c,c
  2857  001C7E  6A08               	clrf	tolower@c+1,c
  2858  001C80  EC23  F01B         	call	_tolower	;wreg free
  2859  001C84  5007               	movf	?_tolower,w,c
  2860  001C86  0100               	movlb	0	; () banked
  2861  001C88  6FC4               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  2862  001C8A                     l4087:
  2863                           
  2864                           ; BSR set to: 0
  2865                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 920:         if (ct[0] == 'f') {
  2866  001C8A  0E66               	movlw	102
  2867  001C8C  19C2               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  2868  001C8E  A4D8               	btfss	status,2,c
  2869  001C90  D03F               	goto	l4099
  2870                           
  2871                           ; BSR set to: 0
  2872                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 922:             c = (*fmt)[0];
  2873  001C92  C06C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2874  001C96  C06D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2875  001C9A  CFDE FFF6          	movff	postinc2,tblptrl
  2876  001C9E  CFDD FFF7          	movff	postdec2,tblptrh
  2877  001CA2                     	if	0	;tblptru may be non-zero
  2878  001CA2                     	endif
  2879  001CA2                     	if	0	;tblptru may be non-zero
  2880  001CA2                     	endif
  2881  001CA2  0008               	tblrd		*
  2882  001CA4  CFF5 F0C5          	movff	tablat,vfpfcnvrt@c
  2883                           
  2884                           ; BSR set to: 0
  2885                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 923:             ++*fmt;
  2886  001CA8  C06C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2887  001CAC  C06D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2888  001CB0  2ADE               	incf	postinc2,f,c
  2889  001CB2  0E00               	movlw	0
  2890  001CB4  22DD               	addwfc	postdec2,f,c
  2891                           
  2892                           ; BSR set to: 0
  2893                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 924:             f = (long double)(*(doub
      +                          le *)__va_arg(*(double **)ap, (double)0));
  2894  001CB6  C06E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2895  001CBA  C06F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2896  001CBE  CFDF F070          	movff	indf2,??_vfpfcnvrt
  2897  001CC2  0E04               	movlw	4
  2898  001CC4  26DE               	addwf	postinc2,f,c
  2899  001CC6  CFDF F071          	movff	indf2,??_vfpfcnvrt+1
  2900  001CCA  0E00               	movlw	0
  2901  001CCC  22DD               	addwfc	postdec2,f,c
  2902  001CCE  C070  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2903  001CD2  C071  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2904  001CD6  CFDE F0BE          	movff	postinc2,vfpfcnvrt@f
  2905  001CDA  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f+1
  2906  001CDE  CFDE F0C0          	movff	postinc2,vfpfcnvrt@f+2
  2907  001CE2  CFDE F0C1          	movff	postinc2,vfpfcnvrt@f+3
  2908  001CE6                     l4095:
  2909                           
  2910                           ; BSR set to: 0
  2911                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 926:             return efgtoa(fp, f, c);
  2912  001CE6  C06A  F05E         	movff	vfpfcnvrt@fp,efgtoa@fp
  2913  001CEA  C06B  F05F         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2914  001CEE  C0BE  F060         	movff	vfpfcnvrt@f,efgtoa@f
  2915  001CF2  C0BF  F061         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2916  001CF6  C0C0  F062         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2917  001CFA  C0C1  F063         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2918  001CFE  C0C5  F064         	movff	vfpfcnvrt@c,efgtoa@c
  2919  001D02  EC39  F008         	call	_efgtoa	;wreg free
  2920  001D06  C05E  F06A         	movff	?_efgtoa,?_vfpfcnvrt
  2921  001D0A  C05F  F06B         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2922  001D0E  0012               	return	
  2923  001D10                     l4099:
  2924                           
  2925                           ; BSR set to: 0
  2926                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 928:         if (!strncmp(ct, "lf", ((siz
      +                          eof("lf")/sizeof("lf"[0]))-1))) {
  2927  001D10  0EC2               	movlw	low vfpfcnvrt@ct
  2928  001D12  6E01               	movwf	strncmp@_l,c
  2929  001D14  0E00               	movlw	high vfpfcnvrt@ct
  2930  001D16  6E02               	movwf	strncmp@_l+1,c
  2931  001D18  0E6D               	movlw	low STR_17
  2932  001D1A  6E03               	movwf	strncmp@_r,c
  2933  001D1C  0E10               	movlw	high STR_17
  2934  001D1E  6E04               	movwf	strncmp@_r+1,c
  2935  001D20  0E00               	movlw	0
  2936  001D22  6E06               	movwf	strncmp@n+1,c
  2937  001D24  0E02               	movlw	2
  2938  001D26  6E05               	movwf	strncmp@n,c
  2939  001D28  ECAE  F017         	call	_strncmp	;wreg free
  2940  001D2C  5001               	movf	?_strncmp,w,c
  2941  001D2E  1002               	iorwf	?_strncmp+1,w,c
  2942  001D30  A4D8               	btfss	status,2,c
  2943  001D32  D056               	goto	l4115
  2944                           
  2945                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 931:             if ((0 ? isupper((int)(*
      +                          fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  2946  001D34  C06C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2947  001D38  C06D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2948  001D3C  CFDE F070          	movff	postinc2,??_vfpfcnvrt
  2949  001D40  CFDD F071          	movff	postdec2,??_vfpfcnvrt+1
  2950  001D44  0E01               	movlw	1
  2951  001D46  2670               	addwf	??_vfpfcnvrt,f,c
  2952  001D48  0E00               	movlw	0
  2953  001D4A  2271               	addwfc	??_vfpfcnvrt+1,f,c
  2954  001D4C  C070  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2955  001D50  C071  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2956  001D54                     	if	0	;tblptru may be non-zero
  2957  001D54                     	endif
  2958  001D54                     	if	0	;tblptru may be non-zero
  2959  001D54                     	endif
  2960  001D54  0008               	tblrd		*
  2961  001D56  CFF5 F0C5          	movff	tablat,vfpfcnvrt@c
  2962  001D5A  0EBF               	movlw	191
  2963  001D5C  6E70               	movwf	??_vfpfcnvrt& (0+255),c
  2964  001D5E  0EFF               	movlw	255
  2965  001D60  6E71               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  2966  001D62  C06C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2967  001D66  C06D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2968  001D6A  CFDE FFF6          	movff	postinc2,tblptrl
  2969  001D6E  CFDD FFF7          	movff	postdec2,tblptrh
  2970  001D72                     	if	0	;tblptru may be non-zero
  2971  001D72                     	endif
  2972  001D72                     	if	0	;tblptru may be non-zero
  2973  001D72                     	endif
  2974  001D72  0008               	tblrd		*
  2975  001D74  50F5               	movf	tablat,w,c
  2976  001D76  6E72               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  2977  001D78  6A73               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  2978  001D7A  5070               	movf	??_vfpfcnvrt,w,c
  2979  001D7C  2672               	addwf	??_vfpfcnvrt+2,f,c
  2980  001D7E  5071               	movf	??_vfpfcnvrt+1,w,c
  2981  001D80  2273               	addwfc	??_vfpfcnvrt+3,f,c
  2982  001D82  5073               	movf	??_vfpfcnvrt+3,w,c
  2983  001D84  E106               	bnz	u4890
  2984  001D86  0E1A               	movlw	26
  2985  001D88  5C72               	subwf	??_vfpfcnvrt+2,w,c
  2986  001D8A  B0D8               	btfsc	status,0,c
  2987  001D8C  D002               	goto	u4890
  2988  001D8E  0E01               	movlw	1
  2989  001D90  D001               	goto	u4900
  2990  001D92                     u4890:
  2991  001D92  0E00               	movlw	0
  2992  001D94                     u4900:
  2993  001D94  0100               	movlb	0	; () banked
  2994  001D96  6FBC               	movwf	_vfpfcnvrt$685& (0+255),b
  2995  001D98  6BBD               	clrf	(_vfpfcnvrt$685+1)& (0+255),b
  2996                           
  2997                           ; BSR set to: 0
  2998  001D9A  51BC               	movf	_vfpfcnvrt$685& (0+255),w,b
  2999  001D9C  11BD               	iorwf	(_vfpfcnvrt$685+1)& (0+255),w,b
  3000                           
  3001                           ; BSR set to: 0
  3002                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 934:                 f = (long double)(*(
      +                          double *)__va_arg(*(double **)ap, (double)0));
  3003                           
  3004                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 933:             } else {
  3005                           
  3006                           ; BSR set to: 0
  3007                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 932:                 f = (*(long double *
      +                          )__va_arg(*(long double **)ap, (long double)0));
  3008  001D9E  C06E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3009  001DA2  C06F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3010  001DA6  CFDF F070          	movff	indf2,??_vfpfcnvrt
  3011  001DAA  0E04               	movlw	4
  3012  001DAC  26DE               	addwf	postinc2,f,c
  3013  001DAE  CFDF F071          	movff	indf2,??_vfpfcnvrt+1
  3014  001DB2  0E00               	movlw	0
  3015  001DB4  22DD               	addwfc	postdec2,f,c
  3016  001DB6  C070  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3017  001DBA  C071  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3018  001DBE  CFDE F0BE          	movff	postinc2,vfpfcnvrt@f
  3019  001DC2  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f+1
  3020  001DC6  CFDE F0C0          	movff	postinc2,vfpfcnvrt@f+2
  3021  001DCA  CFDE F0C1          	movff	postinc2,vfpfcnvrt@f+3
  3022                           
  3023                           ; BSR set to: 0
  3024                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 936:             *fmt += ((sizeof("lf")/s
      +                          izeof("lf"[0]))-1);
  3025                           
  3026                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 935:             }
  3027  001DCE  0E02               	movlw	2
  3028  001DD0  C06C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3029  001DD4  C06D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3030  001DD8  26DE               	addwf	postinc2,f,c
  3031  001DDA  0E00               	movlw	0
  3032  001DDC  22DD               	addwfc	postdec2,f,c
  3033  001DDE  D783               	goto	l4095
  3034  001DE0                     l4115:
  3035                           
  3036                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 1350:         if ((*fmt)[0] == '%') {
  3037  001DE0  C06C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3038  001DE4  C06D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3039  001DE8  CFDE FFF6          	movff	postinc2,tblptrl
  3040  001DEC  CFDD FFF7          	movff	postdec2,tblptrh
  3041  001DF0                     	if	0	;tblptru may be non-zero
  3042  001DF0                     	endif
  3043  001DF0                     	if	0	;tblptru may be non-zero
  3044  001DF0                     	endif
  3045  001DF0  0008               	tblrd		*
  3046  001DF2  50F5               	movf	tablat,w,c
  3047  001DF4  0A25               	xorlw	37
  3048  001DF6  A4D8               	btfss	status,2,c
  3049  001DF8  D016               	goto	l4125
  3050                           
  3051                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 1351:             ++*fmt;
  3052  001DFA  C06C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3053  001DFE  C06D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3054  001E02  2ADE               	incf	postinc2,f,c
  3055  001E04  0E00               	movlw	0
  3056  001E06  22DD               	addwfc	postdec2,f,c
  3057                           
  3058                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 1352:             fputc((int)'%', fp);
  3059  001E08  0E00               	movlw	0
  3060  001E0A  6E02               	movwf	fputc@c+1,c
  3061  001E0C  0E25               	movlw	37
  3062  001E0E  6E01               	movwf	fputc@c,c
  3063  001E10  C06A  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3064  001E14  C06B  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3065  001E18  ECFF  F017         	call	_fputc	;wreg free
  3066  001E1C                     l4121:
  3067                           
  3068                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 1353:             return 1;
  3069  001E1C  0E00               	movlw	0
  3070  001E1E  6E6B               	movwf	?_vfpfcnvrt+1,c
  3071  001E20  0E01               	movlw	1
  3072  001E22  6E6A               	movwf	?_vfpfcnvrt,c
  3073  001E24  0012               	return	
  3074  001E26                     l4125:
  3075                           
  3076                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 1357:         ++*fmt;
  3077  001E26  C06C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3078  001E2A  C06D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3079  001E2E  2ADE               	incf	postinc2,f,c
  3080  001E30  0E00               	movlw	0
  3081  001E32  22DD               	addwfc	postdec2,f,c
  3082                           
  3083                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 1358:         return 0;
  3084  001E34  0E00               	movlw	0
  3085  001E36  6E6B               	movwf	?_vfpfcnvrt+1,c
  3086  001E38  0E00               	movlw	0
  3087  001E3A  6E6A               	movwf	?_vfpfcnvrt,c
  3088  001E3C  0012               	return	
  3089  001E3E                     l4131:
  3090                           
  3091                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 1362:     fputc((int)(*fmt)[0], fp);
  3092  001E3E  C06C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3093  001E42  C06D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3094  001E46  CFDE FFF6          	movff	postinc2,tblptrl
  3095  001E4A  CFDD FFF7          	movff	postdec2,tblptrh
  3096  001E4E                     	if	0	;tblptru may be non-zero
  3097  001E4E                     	endif
  3098  001E4E                     	if	0	;tblptru may be non-zero
  3099  001E4E                     	endif
  3100  001E4E  0008               	tblrd		*
  3101  001E50  50F5               	movf	tablat,w,c
  3102  001E52  6E01               	movwf	fputc@c,c
  3103  001E54  6A02               	clrf	fputc@c+1,c
  3104  001E56  C06A  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3105  001E5A  C06B  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3106  001E5E  ECFF  F017         	call	_fputc	;wreg free
  3107                           
  3108                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  3109  001E62  C06C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3110  001E66  C06D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3111  001E6A  2ADE               	incf	postinc2,f,c
  3112  001E6C  0E00               	movlw	0
  3113  001E6E  22DD               	addwfc	postdec2,f,c
  3114  001E70  D7D5               	goto	l4121
  3115  001E72                     __end_of_vfpfcnvrt:
  3116                           	opt callstack 0
  3117                           
  3118 ;; *************** function _strncmp *****************
  3119 ;; Defined at:
  3120 ;;		line 3 in file "D:\Microchip\pic\sources\c99\common\strncmp.c"
  3121 ;; Parameters:    Size  Location     Type
  3122 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  3123 ;;		 -> vfpfcnvrt@ct(3), 
  3124 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  3125 ;;		 -> STR_19(3), 
  3126 ;;  n               2    4[COMRAM] unsigned int 
  3127 ;; Auto vars:     Size  Location     Type
  3128 ;;  r               2    9[COMRAM] PTR const unsigned char 
  3129 ;;		 -> STR_19(3), 
  3130 ;;  l               2    7[COMRAM] PTR const unsigned char 
  3131 ;;		 -> vfpfcnvrt@ct(3), 
  3132 ;; Return value:  Size  Location     Type
  3133 ;;                  2    0[COMRAM] int 
  3134 ;; Registers used:
  3135 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3136 ;; Tracked objects:
  3137 ;;		On entry : 0/0
  3138 ;;		On exit  : 0/0
  3139 ;;		Unchanged: 0/0
  3140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3141 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3142 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3143 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3144 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3145 ;;Total ram usage:       11 bytes
  3146 ;; Hardware stack levels used:    1
  3147 ;; This function calls:
  3148 ;;		Nothing
  3149 ;; This function is called by:
  3150 ;;		_vfpfcnvrt
  3151 ;; This function uses a non-reentrant model
  3152 ;;
  3153                           
  3154                           	psect	text14
  3155  002F5C                     __ptext14:
  3156                           	opt callstack 0
  3157  002F5C                     _strncmp:
  3158                           	opt callstack 27
  3159                           
  3160                           ;incstack = 0
  3161  002F5C  C001  F008         	movff	strncmp@_l,strncmp@l
  3162  002F60  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  3163  002F64  C003  F00A         	movff	strncmp@_r,strncmp@r
  3164  002F68  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  3165  002F6C  0605               	decf	strncmp@n,f,c
  3166  002F6E  A0D8               	btfss	status,0,c
  3167  002F70  0606               	decf	strncmp@n+1,f,c
  3168  002F72  2805               	incf	strncmp@n,w,c
  3169  002F74  E10F               	bnz	l3991
  3170  002F76  2806               	incf	strncmp@n+1,w,c
  3171  002F78  A4D8               	btfss	status,2,c
  3172  002F7A  D00C               	goto	l3991
  3173  002F7C  0E00               	movlw	0
  3174  002F7E  6E02               	movwf	?_strncmp+1,c
  3175  002F80  0E00               	movlw	0
  3176  002F82  6E01               	movwf	?_strncmp,c
  3177  002F84  0012               	return	
  3178  002F86                     l3989:
  3179  002F86  4A08               	infsnz	strncmp@l,f,c
  3180  002F88  2A09               	incf	strncmp@l+1,f,c
  3181  002F8A  4A0A               	infsnz	strncmp@r,f,c
  3182  002F8C  2A0B               	incf	strncmp@r+1,f,c
  3183  002F8E  0605               	decf	strncmp@n,f,c
  3184  002F90  A0D8               	btfss	status,0,c
  3185  002F92  0606               	decf	strncmp@n+1,f,c
  3186  002F94                     l3991:
  3187  002F94  C008  FFD9         	movff	strncmp@l,fsr2l
  3188  002F98  C009  FFDA         	movff	strncmp@l+1,fsr2h
  3189  002F9C  50DF               	movf	indf2,w,c
  3190  002F9E  B4D8               	btfsc	status,2,c
  3191  002FA0  D01C               	goto	u4720
  3192  002FA2  C00A  FFF6         	movff	strncmp@r,tblptrl
  3193  002FA6  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3194  002FAA                     	if	0	;tblptru may be non-zero
  3195  002FAA                     	endif
  3196  002FAA                     	if	0	;tblptru may be non-zero
  3197  002FAA                     	endif
  3198  002FAA  0008               	tblrd		*
  3199  002FAC  50F5               	movf	tablat,w,c
  3200  002FAE  0900               	iorlw	0
  3201  002FB0  B4D8               	btfsc	status,2,c
  3202  002FB2  D013               	goto	u4720
  3203  002FB4  5005               	movf	strncmp@n,w,c
  3204  002FB6  1006               	iorwf	strncmp@n+1,w,c
  3205  002FB8  B4D8               	btfsc	status,2,c
  3206  002FBA  D00F               	goto	u4720
  3207  002FBC  C008  FFD9         	movff	strncmp@l,fsr2l
  3208  002FC0  C009  FFDA         	movff	strncmp@l+1,fsr2h
  3209  002FC4  50DF               	movf	indf2,w,c
  3210  002FC6  6E07               	movwf	??_strncmp& (0+255),c
  3211  002FC8  C00A  FFF6         	movff	strncmp@r,tblptrl
  3212  002FCC  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3213  002FD0                     	if	0	;tblptru may be non-zero
  3214  002FD0                     	endif
  3215  002FD0                     	if	0	;tblptru may be non-zero
  3216  002FD0                     	endif
  3217  002FD0  0008               	tblrd		*
  3218  002FD2  50F5               	movf	tablat,w,c
  3219  002FD4  1807               	xorwf	??_strncmp,w,c
  3220  002FD6  B4D8               	btfsc	status,2,c
  3221  002FD8  D7D6               	goto	l3989
  3222  002FDA                     u4720:
  3223  002FDA  C008  FFD9         	movff	strncmp@l,fsr2l
  3224  002FDE  C009  FFDA         	movff	strncmp@l+1,fsr2h
  3225  002FE2  50DF               	movf	indf2,w,c
  3226  002FE4  6E07               	movwf	??_strncmp& (0+255),c
  3227  002FE6  C00A  FFF6         	movff	strncmp@r,tblptrl
  3228  002FEA  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3229  002FEE                     	if	0	;tblptru may be non-zero
  3230  002FEE                     	endif
  3231  002FEE                     	if	0	;tblptru may be non-zero
  3232  002FEE                     	endif
  3233  002FEE  0008               	tblrd		*
  3234  002FF0  50F5               	movf	tablat,w,c
  3235  002FF2  5C07               	subwf	??_strncmp,w,c
  3236  002FF4  6E01               	movwf	?_strncmp,c
  3237  002FF6  6A02               	clrf	?_strncmp+1,c
  3238  002FF8  A0D8               	btfss	status,0,c
  3239  002FFA  0602               	decf	?_strncmp+1,f,c
  3240  002FFC  0012               	return		;funcret
  3241  002FFE                     __end_of_strncmp:
  3242                           	opt callstack 0
  3243                           
  3244 ;; *************** function _efgtoa *****************
  3245 ;; Defined at:
  3246 ;;		line 319 in file "D:\Microchip\pic\sources\c99\common\doprnt.c"
  3247 ;; Parameters:    Size  Location     Type
  3248 ;;  fp              2   93[COMRAM] PTR struct _IO_FILE
  3249 ;;		 -> sprintf@f(6), 
  3250 ;;  f               4   95[COMRAM] PTR struct _IO_FILE
  3251 ;;  c               1   99[COMRAM] unsigned char 
  3252 ;; Auto vars:     Size  Location     Type
  3253 ;;  u               4   52[BANK0 ] unsigned char 
  3254 ;;  g               4   44[BANK0 ] unsigned char 
  3255 ;;  l               4   38[BANK0 ] unsigned char 
  3256 ;;  h               4   34[BANK0 ] unsigned char 
  3257 ;;  ou              4    0[BANK0 ] unsigned char 
  3258 ;;  n               2   50[BANK0 ] int 
  3259 ;;  e               2   48[BANK0 ] int 
  3260 ;;  i               2   42[BANK0 ] int 
  3261 ;;  w               2   31[BANK0 ] int 
  3262 ;;  p               2   28[BANK0 ] int 
  3263 ;;  sign            2   26[BANK0 ] int 
  3264 ;;  d               2   24[BANK0 ] int 
  3265 ;;  ne              2   22[BANK0 ] int 
  3266 ;;  m               2   20[BANK0 ] int 
  3267 ;;  pp              2   18[BANK0 ] int 
  3268 ;;  t               2   16[BANK0 ] int 
  3269 ;;  mode            1   33[BANK0 ] unsigned char 
  3270 ;;  nmode           1   30[BANK0 ] unsigned char 
  3271 ;; Return value:  Size  Location     Type
  3272 ;;                  2   93[COMRAM] int 
  3273 ;; Registers used:
  3274 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3275 ;; Tracked objects:
  3276 ;;		On entry : 0/0
  3277 ;;		On exit  : 0/0
  3278 ;;		Unchanged: 0/0
  3279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3280 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3281 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3282 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3283 ;;      Totals:        12      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3284 ;;Total ram usage:       68 bytes
  3285 ;; Hardware stack levels used:    1
  3286 ;; Hardware stack levels required when called:    4
  3287 ;; This function calls:
  3288 ;;		___awdiv
  3289 ;;		___awmod
  3290 ;;		___fladd
  3291 ;;		___fldiv
  3292 ;;		___fleq
  3293 ;;		___flge
  3294 ;;		___flmul
  3295 ;;		___flneg
  3296 ;;		___flsub
  3297 ;;		___fltol
  3298 ;;		___fpclassifyf
  3299 ;;		_floorf
  3300 ;;		_isupper
  3301 ;;		_pad
  3302 ;;		_strcpy
  3303 ;;		_tolower
  3304 ;; This function is called by:
  3305 ;;		_vfpfcnvrt
  3306 ;; This function uses a non-reentrant model
  3307 ;;
  3308                           
  3309                           	psect	text15
  3310  001072                     __ptext15:
  3311                           	opt callstack 0
  3312  001072                     _efgtoa:
  3313                           	opt callstack 23
  3314                           
  3315                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 319: static int efgtoa(FILE *fp, long dou
      +                          ble f, char c);D:\Microchip\pic\sources\c99\common\doprnt.c: 320: {;D:\Microchip\pic\sou
      +                          rces\c99\common\doprnt.c: 321:     char mode, nmode;;D:\Microchip\pic\sources\c99\common
      +                          \doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, t, w;;D:\Microchip\pic\sources\c
      +                          99\common\doprnt.c: 323:     long double g, h, l, ou, u;;D:\Microchip\pic\sources\c99\co
      +                          mmon\doprnt.c: 326:     sign = 0;
  3316                           
  3317                           ;incstack = 0
  3318  001072  0E00               	movlw	0
  3319  001074  0100               	movlb	0	; () banked
  3320  001076  6F9B               	movwf	(efgtoa@sign+1)& (0+255),b
  3321  001078  0E00               	movlw	0
  3322  00107A  6F9A               	movwf	efgtoa@sign& (0+255),b
  3323                           
  3324                           ; BSR set to: 0
  3325                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 327:     g = f;
  3326  00107C  C060  F0AC         	movff	efgtoa@f,efgtoa@g
  3327  001080  C061  F0AD         	movff	efgtoa@f+1,efgtoa@g+1
  3328  001084  C062  F0AE         	movff	efgtoa@f+2,efgtoa@g+2
  3329  001088  C063  F0AF         	movff	efgtoa@f+3,efgtoa@g+3
  3330                           
  3331                           ; BSR set to: 0
  3332                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 328:     if (g < 0.0) {
  3333  00108C  AFAF               	btfss	(efgtoa@g+3)& (0+255),7,b
  3334  00108E  D016               	goto	l3653
  3335                           
  3336                           ; BSR set to: 0
  3337                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 329:         sign = 1;
  3338  001090  0E00               	movlw	0
  3339  001092  6F9B               	movwf	(efgtoa@sign+1)& (0+255),b
  3340  001094  0E01               	movlw	1
  3341  001096  6F9A               	movwf	efgtoa@sign& (0+255),b
  3342                           
  3343                           ; BSR set to: 0
  3344                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 330:         g = -g;
  3345  001098  C0AC  F001         	movff	efgtoa@g,___flneg@f1
  3346  00109C  C0AD  F002         	movff	efgtoa@g+1,___flneg@f1+1
  3347  0010A0  C0AE  F003         	movff	efgtoa@g+2,___flneg@f1+2
  3348  0010A4  C0AF  F004         	movff	efgtoa@g+3,___flneg@f1+3
  3349  0010A8  EC2C  F01C         	call	___flneg	;wreg free
  3350  0010AC  C001  F0AC         	movff	?___flneg,efgtoa@g
  3351  0010B0  C002  F0AD         	movff	?___flneg+1,efgtoa@g+1
  3352  0010B4  C003  F0AE         	movff	?___flneg+2,efgtoa@g+2
  3353  0010B8  C004  F0AF         	movff	?___flneg+3,efgtoa@g+3
  3354  0010BC                     l3653:
  3355                           
  3356                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 334:     n = 0;
  3357  0010BC  0E00               	movlw	0
  3358  0010BE  0100               	movlb	0	; () banked
  3359  0010C0  6FB3               	movwf	(efgtoa@n+1)& (0+255),b
  3360  0010C2  0E00               	movlw	0
  3361  0010C4  6FB2               	movwf	efgtoa@n& (0+255),b
  3362                           
  3363                           ; BSR set to: 0
  3364                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 335:     w = width;
  3365  0010C6  C0E6  F09F         	movff	_width,efgtoa@w
  3366  0010CA  C0E7  F0A0         	movff	_width+1,efgtoa@w+1
  3367                           
  3368                           ; BSR set to: 0
  3369                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 336:     if (sign || (flags & (1 << 2))) 
      +                          {
  3370  0010CE  519A               	movf	efgtoa@sign& (0+255),w,b
  3371  0010D0  119B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3372  0010D2  A4D8               	btfss	status,2,c
  3373  0010D4  D002               	goto	u4110
  3374                           
  3375                           ; BSR set to: 0
  3376  0010D6  A47E               	btfss	_flags,2,c
  3377  0010D8  D013               	goto	l3673
  3378  0010DA                     u4110:
  3379                           
  3380                           ; BSR set to: 0
  3381                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 337:         dbuf[n] = sign ? '-' : '+';
  3382  0010DA  519A               	movf	efgtoa@sign& (0+255),w,b
  3383  0010DC  119B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3384  0010DE  A4D8               	btfss	status,2,c
  3385  0010E0  D004               	goto	l3665
  3386                           
  3387                           ; BSR set to: 0
  3388  0010E2  0E00               	movlw	0
  3389  0010E4  6F85               	movwf	(_efgtoa$654+1)& (0+255),b
  3390  0010E6  0E2B               	movlw	43
  3391  0010E8  D003               	goto	L1
  3392  0010EA                     l3665:
  3393                           
  3394                           ; BSR set to: 0
  3395  0010EA  0E00               	movlw	0
  3396  0010EC  6F85               	movwf	(_efgtoa$654+1)& (0+255),b
  3397  0010EE  0E2D               	movlw	45
  3398  0010F0                     L1:
  3399  0010F0  6F84               	movwf	_efgtoa$654& (0+255),b
  3400                           
  3401                           ; BSR set to: 0
  3402  0010F2  C084  F100         	movff	_efgtoa$654,_dbuf
  3403                           
  3404                           ; BSR set to: 0
  3405                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 338:         ++n;
  3406  0010F6  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  3407  0010F8  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  3408                           
  3409                           ; BSR set to: 0
  3410                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 339:         --w;
  3411  0010FA  079F               	decf	efgtoa@w& (0+255),f,b
  3412  0010FC  A0D8               	btfss	status,0,c
  3413  0010FE  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  3414  001100                     l3673:
  3415                           
  3416                           ; BSR set to: 0
  3417                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 344:         if ((0 ? isupper((int)c) : (
      +                          (unsigned)((int)c)-'A') < 26)) {
  3418  001100  C0AC  F001         	movff	efgtoa@g,___fpclassifyf@x
  3419  001104  C0AD  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3420  001108  C0AE  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3421  00110C  C0AF  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3422  001110  ECEB  F016         	call	___fpclassifyf	;wreg free
  3423  001114  0401               	decf	?___fpclassifyf,w,c
  3424  001116  1002               	iorwf	?___fpclassifyf+1,w,c
  3425  001118  A4D8               	btfss	status,2,c
  3426  00111A  D04C               	goto	l3691
  3427  00111C  0EBF               	movlw	191
  3428  00111E  6E65               	movwf	??_efgtoa& (0+255),c
  3429  001120  0EFF               	movlw	255
  3430  001122  6E66               	movwf	(??_efgtoa+1)& (0+255),c
  3431  001124  5064               	movf	efgtoa@c,w,c
  3432  001126  6E67               	movwf	(??_efgtoa+2)& (0+255),c
  3433  001128  6A68               	clrf	(??_efgtoa+3)& (0+255),c
  3434  00112A  5065               	movf	??_efgtoa,w,c
  3435  00112C  2667               	addwf	??_efgtoa+2,f,c
  3436  00112E  5066               	movf	??_efgtoa+1,w,c
  3437  001130  2268               	addwfc	??_efgtoa+3,f,c
  3438  001132  5068               	movf	??_efgtoa+3,w,c
  3439  001134  E106               	bnz	u4140
  3440  001136  0E1A               	movlw	26
  3441  001138  5C67               	subwf	??_efgtoa+2,w,c
  3442  00113A  B0D8               	btfsc	status,0,c
  3443  00113C  D002               	goto	u4140
  3444  00113E  0E01               	movlw	1
  3445  001140  D001               	goto	u4150
  3446  001142                     u4140:
  3447  001142  0E00               	movlw	0
  3448  001144                     u4150:
  3449  001144  0100               	movlb	0	; () banked
  3450  001146  6F86               	movwf	_efgtoa$655& (0+255),b
  3451  001148  6B87               	clrf	(_efgtoa$655+1)& (0+255),b
  3452                           
  3453                           ; BSR set to: 0
  3454  00114A  5186               	movf	_efgtoa$655& (0+255),w,b
  3455  00114C  1187               	iorwf	(_efgtoa$655+1)& (0+255),w,b
  3456  00114E  B4D8               	btfsc	status,2,c
  3457  001150  D00D               	goto	l3683
  3458                           
  3459                           ; BSR set to: 0
  3460                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 345:             strcpy(&dbuf[n], "INF");
  3461  001152  0E00               	movlw	low _dbuf
  3462  001154  25B2               	addwf	efgtoa@n& (0+255),w,b
  3463  001156  6E01               	movwf	strcpy@dest,c
  3464  001158  0E01               	movlw	high _dbuf
  3465  00115A  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3466  00115C  6E02               	movwf	strcpy@dest+1,c
  3467  00115E  0E5D               	movlw	low STR_9
  3468  001160  6E03               	movwf	strcpy@src,c
  3469  001162  0E10               	movlw	high STR_9
  3470  001164  6E04               	movwf	strcpy@src+1,c
  3471  001166  EC82  F01A         	call	_strcpy	;wreg free
  3472                           
  3473                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 346:         } else {
  3474  00116A  D00C               	goto	l3685
  3475  00116C                     l3683:
  3476                           
  3477                           ; BSR set to: 0
  3478                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 347:             strcpy(&dbuf[n], "inf");
  3479  00116C  0E00               	movlw	low _dbuf
  3480  00116E  25B2               	addwf	efgtoa@n& (0+255),w,b
  3481  001170  6E01               	movwf	strcpy@dest,c
  3482  001172  0E01               	movlw	high _dbuf
  3483  001174  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3484  001176  6E02               	movwf	strcpy@dest+1,c
  3485  001178  0E65               	movlw	low STR_10
  3486  00117A  6E03               	movwf	strcpy@src,c
  3487  00117C  0E10               	movlw	high STR_10
  3488  00117E  6E04               	movwf	strcpy@src+1,c
  3489  001180  EC82  F01A         	call	_strcpy	;wreg free
  3490  001184                     l3685:
  3491                           
  3492                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 349:         w -= ((sizeof("inf")/sizeof(
      +                          "inf"[0]))-1);
  3493  001184  0100               	movlb	0	; () banked
  3494  001186  0EFD               	movlw	253
  3495  001188  279F               	addwf	efgtoa@w& (0+255),f,b
  3496  00118A  0EFF               	movlw	255
  3497  00118C  23A0               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3498  00118E                     l3687:
  3499                           
  3500                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 350:         return pad(fp, &dbuf[0], w);
  3501  00118E  C05E  F011         	movff	efgtoa@fp,pad@fp
  3502  001192  C05F  F012         	movff	efgtoa@fp+1,pad@fp+1
  3503  001196  0E00               	movlw	low _dbuf
  3504  001198  6E13               	movwf	pad@buf,c
  3505  00119A  0E01               	movlw	high _dbuf
  3506  00119C  6E14               	movwf	pad@buf+1,c
  3507  00119E  C09F  F015         	movff	efgtoa@w,pad@p
  3508  0011A2  C0A0  F016         	movff	efgtoa@w+1,pad@p+1
  3509  0011A6  EC4F  F018         	call	_pad	;wreg free
  3510  0011AA  C011  F05E         	movff	?_pad,?_efgtoa
  3511  0011AE  C012  F05F         	movff	?_pad+1,?_efgtoa+1
  3512  0011B2  0012               	return	
  3513  0011B4                     l3691:
  3514                           
  3515                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 353:         if ((0 ? isupper((int)c) : (
      +                          (unsigned)((int)c)-'A') < 26)) {
  3516  0011B4  C0AC  F001         	movff	efgtoa@g,___fpclassifyf@x
  3517  0011B8  C0AD  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3518  0011BC  C0AE  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3519  0011C0  C0AF  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3520  0011C4  ECEB  F016         	call	___fpclassifyf	;wreg free
  3521  0011C8  5001               	movf	?___fpclassifyf,w,c
  3522  0011CA  1002               	iorwf	?___fpclassifyf+1,w,c
  3523  0011CC  A4D8               	btfss	status,2,c
  3524  0011CE  D035               	goto	l3709
  3525  0011D0  0EBF               	movlw	191
  3526  0011D2  6E65               	movwf	??_efgtoa& (0+255),c
  3527  0011D4  0EFF               	movlw	255
  3528  0011D6  6E66               	movwf	(??_efgtoa+1)& (0+255),c
  3529  0011D8  5064               	movf	efgtoa@c,w,c
  3530  0011DA  6E67               	movwf	(??_efgtoa+2)& (0+255),c
  3531  0011DC  6A68               	clrf	(??_efgtoa+3)& (0+255),c
  3532  0011DE  5065               	movf	??_efgtoa,w,c
  3533  0011E0  2667               	addwf	??_efgtoa+2,f,c
  3534  0011E2  5066               	movf	??_efgtoa+1,w,c
  3535  0011E4  2268               	addwfc	??_efgtoa+3,f,c
  3536  0011E6  5068               	movf	??_efgtoa+3,w,c
  3537  0011E8  E106               	bnz	u4180
  3538  0011EA  0E1A               	movlw	26
  3539  0011EC  5C67               	subwf	??_efgtoa+2,w,c
  3540  0011EE  B0D8               	btfsc	status,0,c
  3541  0011F0  D002               	goto	u4180
  3542  0011F2  0E01               	movlw	1
  3543  0011F4  D001               	goto	u4190
  3544  0011F6                     u4180:
  3545  0011F6  0E00               	movlw	0
  3546  0011F8                     u4190:
  3547  0011F8  0100               	movlb	0	; () banked
  3548  0011FA  6F88               	movwf	_efgtoa$660& (0+255),b
  3549  0011FC  6B89               	clrf	(_efgtoa$660+1)& (0+255),b
  3550                           
  3551                           ; BSR set to: 0
  3552  0011FE  5188               	movf	_efgtoa$660& (0+255),w,b
  3553  001200  1189               	iorwf	(_efgtoa$660+1)& (0+255),w,b
  3554  001202  B4D8               	btfsc	status,2,c
  3555  001204  D00D               	goto	l3701
  3556                           
  3557                           ; BSR set to: 0
  3558                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 354:             strcpy(&dbuf[n], "NAN");
  3559  001206  0E00               	movlw	low _dbuf
  3560  001208  25B2               	addwf	efgtoa@n& (0+255),w,b
  3561  00120A  6E01               	movwf	strcpy@dest,c
  3562  00120C  0E01               	movlw	high _dbuf
  3563  00120E  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3564  001210  6E02               	movwf	strcpy@dest+1,c
  3565  001212  0E61               	movlw	low STR_13
  3566  001214  6E03               	movwf	strcpy@src,c
  3567  001216  0E10               	movlw	high STR_13
  3568  001218  6E04               	movwf	strcpy@src+1,c
  3569  00121A  EC82  F01A         	call	_strcpy	;wreg free
  3570                           
  3571                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 355:         } else {
  3572  00121E  D7B2               	goto	l3685
  3573  001220                     l3701:
  3574                           
  3575                           ; BSR set to: 0
  3576                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 356:             strcpy(&dbuf[n], "nan");
  3577  001220  0E00               	movlw	low _dbuf
  3578  001222  25B2               	addwf	efgtoa@n& (0+255),w,b
  3579  001224  6E01               	movwf	strcpy@dest,c
  3580  001226  0E01               	movlw	high _dbuf
  3581  001228  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3582  00122A  6E02               	movwf	strcpy@dest+1,c
  3583  00122C  0E69               	movlw	low STR_14
  3584  00122E  6E03               	movwf	strcpy@src,c
  3585  001230  0E10               	movlw	high STR_14
  3586  001232  6E04               	movwf	strcpy@src+1,c
  3587  001234  EC82  F01A         	call	_strcpy	;wreg free
  3588  001238  D7A5               	goto	l3685
  3589  00123A                     l3709:
  3590                           
  3591                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 363:     u = 1.0;
  3592  00123A  0E00               	movlw	0
  3593  00123C  0100               	movlb	0	; () banked
  3594  00123E  6FB4               	movwf	efgtoa@u& (0+255),b
  3595  001240  0E00               	movlw	0
  3596  001242  6FB5               	movwf	(efgtoa@u+1)& (0+255),b
  3597  001244  0E80               	movlw	128
  3598  001246  6FB6               	movwf	(efgtoa@u+2)& (0+255),b
  3599  001248  0E3F               	movlw	63
  3600  00124A  6FB7               	movwf	(efgtoa@u+3)& (0+255),b
  3601                           
  3602                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 364:     e = 0;
  3603  00124C  0E00               	movlw	0
  3604  00124E  6FB1               	movwf	(efgtoa@e+1)& (0+255),b
  3605  001250  0E00               	movlw	0
  3606  001252  6FB0               	movwf	efgtoa@e& (0+255),b
  3607                           
  3608                           ; BSR set to: 0
  3609                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 365:     if (!(g == 0.0)) {
  3610  001254  C0AC  F001         	movff	efgtoa@g,___fleq@ff1
  3611  001258  C0AD  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  3612  00125C  C0AE  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  3613  001260  C0AF  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  3614  001264  0E00               	movlw	0
  3615  001266  6E05               	movwf	___fleq@ff2,c
  3616  001268  0E00               	movlw	0
  3617  00126A  6E06               	movwf	___fleq@ff2+1,c
  3618  00126C  0E00               	movlw	0
  3619  00126E  6E07               	movwf	___fleq@ff2+2,c
  3620  001270  0E00               	movlw	0
  3621  001272  6E08               	movwf	___fleq@ff2+3,c
  3622  001274  EC9A  F018         	call	___fleq	;wreg free
  3623  001278  A0D8               	btfss	status,0,c
  3624  00127A  D01E               	goto	l3719
  3625  00127C  D076               	goto	u4230
  3626  00127E                     l3715:
  3627                           
  3628                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 367:             u = u*10.0;
  3629  00127E  C0B4  F039         	movff	efgtoa@u,___flmul@b
  3630  001282  C0B5  F03A         	movff	efgtoa@u+1,___flmul@b+1
  3631  001286  C0B6  F03B         	movff	efgtoa@u+2,___flmul@b+2
  3632  00128A  C0B7  F03C         	movff	efgtoa@u+3,___flmul@b+3
  3633  00128E  0E00               	movlw	0
  3634  001290  6E3D               	movwf	___flmul@a,c
  3635  001292  0E00               	movlw	0
  3636  001294  6E3E               	movwf	___flmul@a+1,c
  3637  001296  0E20               	movlw	32
  3638  001298  6E3F               	movwf	___flmul@a+2,c
  3639  00129A  0E41               	movlw	65
  3640  00129C  6E40               	movwf	___flmul@a+3,c
  3641  00129E  EC39  F00F         	call	___flmul	;wreg free
  3642  0012A2  C039  F0B4         	movff	?___flmul,efgtoa@u
  3643  0012A6  C03A  F0B5         	movff	?___flmul+1,efgtoa@u+1
  3644  0012AA  C03B  F0B6         	movff	?___flmul+2,efgtoa@u+2
  3645  0012AE  C03C  F0B7         	movff	?___flmul+3,efgtoa@u+3
  3646                           
  3647                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 368:             ++e;
  3648  0012B2  0100               	movlb	0	; () banked
  3649  0012B4  4BB0               	infsnz	efgtoa@e& (0+255),f,b
  3650  0012B6  2BB1               	incf	(efgtoa@e+1)& (0+255),f,b
  3651  0012B8                     l3719:
  3652                           
  3653                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 366:         while (!(g < (u*10.0))) {
  3654  0012B8  C0AC  F052         	movff	efgtoa@g,___flge@ff1
  3655  0012BC  C0AD  F053         	movff	efgtoa@g+1,___flge@ff1+1
  3656  0012C0  C0AE  F054         	movff	efgtoa@g+2,___flge@ff1+2
  3657  0012C4  C0AF  F055         	movff	efgtoa@g+3,___flge@ff1+3
  3658  0012C8  0E00               	movlw	0
  3659  0012CA  6E3D               	movwf	___flmul@a,c
  3660  0012CC  0E00               	movlw	0
  3661  0012CE  6E3E               	movwf	___flmul@a+1,c
  3662  0012D0  0E20               	movlw	32
  3663  0012D2  6E3F               	movwf	___flmul@a+2,c
  3664  0012D4  0E41               	movlw	65
  3665  0012D6  6E40               	movwf	___flmul@a+3,c
  3666  0012D8  C0B4  F039         	movff	efgtoa@u,___flmul@b
  3667  0012DC  C0B5  F03A         	movff	efgtoa@u+1,___flmul@b+1
  3668  0012E0  C0B6  F03B         	movff	efgtoa@u+2,___flmul@b+2
  3669  0012E4  C0B7  F03C         	movff	efgtoa@u+3,___flmul@b+3
  3670  0012E8  EC39  F00F         	call	___flmul	;wreg free
  3671  0012EC  C039  F056         	movff	?___flmul,___flge@ff2
  3672  0012F0  C03A  F057         	movff	?___flmul+1,___flge@ff2+1
  3673  0012F4  C03B  F058         	movff	?___flmul+2,___flge@ff2+2
  3674  0012F8  C03C  F059         	movff	?___flmul+3,___flge@ff2+3
  3675  0012FC  EC83  F016         	call	___flge	;wreg free
  3676  001300  A0D8               	btfss	status,0,c
  3677  001302  D01F               	goto	l3725
  3678  001304  D7BC               	goto	l3715
  3679  001306                     l3721:
  3680                           
  3681                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 371:             u = u/10.0;
  3682  001306  C0B4  F015         	movff	efgtoa@u,___fldiv@b
  3683  00130A  C0B5  F016         	movff	efgtoa@u+1,___fldiv@b+1
  3684  00130E  C0B6  F017         	movff	efgtoa@u+2,___fldiv@b+2
  3685  001312  C0B7  F018         	movff	efgtoa@u+3,___fldiv@b+3
  3686  001316  0E00               	movlw	0
  3687  001318  6E19               	movwf	___fldiv@a,c
  3688  00131A  0E00               	movlw	0
  3689  00131C  6E1A               	movwf	___fldiv@a+1,c
  3690  00131E  0E20               	movlw	32
  3691  001320  6E1B               	movwf	___fldiv@a+2,c
  3692  001322  0E41               	movlw	65
  3693  001324  6E1C               	movwf	___fldiv@a+3,c
  3694  001326  EC68  F012         	call	___fldiv	;wreg free
  3695  00132A  C015  F0B4         	movff	?___fldiv,efgtoa@u
  3696  00132E  C016  F0B5         	movff	?___fldiv+1,efgtoa@u+1
  3697  001332  C017  F0B6         	movff	?___fldiv+2,efgtoa@u+2
  3698  001336  C018  F0B7         	movff	?___fldiv+3,efgtoa@u+3
  3699                           
  3700                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 372:             --e;
  3701  00133A  0100               	movlb	0	; () banked
  3702  00133C  07B0               	decf	efgtoa@e& (0+255),f,b
  3703  00133E  A0D8               	btfss	status,0,c
  3704  001340  07B1               	decf	(efgtoa@e+1)& (0+255),f,b
  3705  001342                     l3725:
  3706                           
  3707                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 370:         while (g < u) {
  3708  001342  C0AC  F052         	movff	efgtoa@g,___flge@ff1
  3709  001346  C0AD  F053         	movff	efgtoa@g+1,___flge@ff1+1
  3710  00134A  C0AE  F054         	movff	efgtoa@g+2,___flge@ff1+2
  3711  00134E  C0AF  F055         	movff	efgtoa@g+3,___flge@ff1+3
  3712  001352  C0B4  F056         	movff	efgtoa@u,___flge@ff2
  3713  001356  C0B5  F057         	movff	efgtoa@u+1,___flge@ff2+1
  3714  00135A  C0B6  F058         	movff	efgtoa@u+2,___flge@ff2+2
  3715  00135E  C0B7  F059         	movff	efgtoa@u+3,___flge@ff2+3
  3716  001362  EC83  F016         	call	___flge	;wreg free
  3717  001366  A0D8               	btfss	status,0,c
  3718  001368  D7CE               	goto	l3721
  3719  00136A                     u4230:
  3720                           
  3721                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 377:     mode = tolower((int)c);
  3722  00136A  C064  F007         	movff	efgtoa@c,tolower@c
  3723  00136E  6A08               	clrf	tolower@c+1,c
  3724  001370  EC23  F01B         	call	_tolower	;wreg free
  3725  001374  5007               	movf	?_tolower,w,c
  3726  001376  0100               	movlb	0	; () banked
  3727  001378  6FA1               	movwf	efgtoa@mode& (0+255),b
  3728                           
  3729                           ; BSR set to: 0
  3730                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 378:     nmode = mode;
  3731  00137A  C0A1  F09E         	movff	efgtoa@mode,efgtoa@nmode
  3732                           
  3733                           ; BSR set to: 0
  3734                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 379:     if (mode == 'g') {
  3735  00137E  0E67               	movlw	103
  3736  001380  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  3737  001382  A4D8               	btfss	status,2,c
  3738  001384  D019               	goto	l3741
  3739                           
  3740                           ; BSR set to: 0
  3741                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 380:   if (prec == 0) {
  3742  001386  507C               	movf	_prec,w,c
  3743  001388  107D               	iorwf	_prec+1,w,c
  3744  00138A  A4D8               	btfss	status,2,c
  3745  00138C  D004               	goto	l3737
  3746                           
  3747                           ; BSR set to: 0
  3748                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 381:    prec = 1;
  3749  00138E  0E00               	movlw	0
  3750  001390  6E7D               	movwf	_prec+1,c
  3751  001392  0E01               	movlw	1
  3752  001394  6E7C               	movwf	_prec,c
  3753  001396                     l3737:
  3754                           
  3755                           ; BSR set to: 0
  3756                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 383:         p = (0 < prec) ? prec : 6;
  3757  001396  BE7D               	btfsc	_prec+1,7,c
  3758  001398  D005               	goto	u4260
  3759  00139A  507D               	movf	_prec+1,w,c
  3760  00139C  E108               	bnz	l288
  3761  00139E  047C               	decf	_prec,w,c
  3762  0013A0  B0D8               	btfsc	status,0,c
  3763  0013A2  D005               	goto	l288
  3764  0013A4                     u4260:
  3765                           
  3766                           ; BSR set to: 0
  3767  0013A4  0E00               	movlw	0
  3768  0013A6  6F9D               	movwf	(efgtoa@p+1)& (0+255),b
  3769  0013A8  0E06               	movlw	6
  3770  0013AA  6F9C               	movwf	efgtoa@p& (0+255),b
  3771  0013AC  D008               	goto	l3747
  3772  0013AE                     l288:
  3773                           
  3774                           ; BSR set to: 0
  3775  0013AE  C07C  F09C         	movff	_prec,efgtoa@p
  3776  0013B2  C07D  F09D         	movff	_prec+1,efgtoa@p+1
  3777  0013B6  D003               	goto	l3747
  3778  0013B8                     l3741:
  3779                           
  3780                           ; BSR set to: 0
  3781                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 385:         p = (prec < 0) ? 6 : prec;
  3782  0013B8  AE7D               	btfss	_prec+1,7,c
  3783  0013BA  D7F9               	goto	l288
  3784  0013BC  D7F3               	goto	u4260
  3785  0013BE                     l3747:
  3786                           
  3787                           ; BSR set to: 0
  3788                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 389:     if (mode == 'g') {
  3789  0013BE  0E67               	movlw	103
  3790  0013C0  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  3791  0013C2  A4D8               	btfss	status,2,c
  3792  0013C4  D022               	goto	l3757
  3793                           
  3794                           ; BSR set to: 0
  3795                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 390:         if (!(e < -4) && !((p - 1) <
      +                           e)) {
  3796  0013C6  AFB1               	btfss	(efgtoa@e+1)& (0+255),7,b
  3797  0013C8  D006               	goto	u4290
  3798  0013CA  0EFC               	movlw	252
  3799  0013CC  5DB0               	subwf	efgtoa@e& (0+255),w,b
  3800  0013CE  0EFF               	movlw	255
  3801  0013D0  59B1               	subwfb	(efgtoa@e+1)& (0+255),w,b
  3802  0013D2  A0D8               	btfss	status,0,c
  3803  0013D4  D018               	goto	l3755
  3804  0013D6                     u4290:
  3805                           
  3806                           ; BSR set to: 0
  3807  0013D6  0EFF               	movlw	255
  3808  0013D8  6E65               	movwf	??_efgtoa& (0+255),c
  3809  0013DA  0EFF               	movlw	255
  3810  0013DC  6E66               	movwf	(??_efgtoa+1)& (0+255),c
  3811  0013DE  C09C  F067         	movff	efgtoa@p,??_efgtoa+2
  3812  0013E2  C09D  F068         	movff	efgtoa@p+1,??_efgtoa+3
  3813  0013E6  5065               	movf	??_efgtoa,w,c
  3814  0013E8  2667               	addwf	??_efgtoa+2,f,c
  3815  0013EA  5066               	movf	??_efgtoa+1,w,c
  3816  0013EC  2268               	addwfc	??_efgtoa+3,f,c
  3817  0013EE  51B0               	movf	efgtoa@e& (0+255),w,b
  3818  0013F0  5C67               	subwf	??_efgtoa+2,w,c
  3819  0013F2  5068               	movf	??_efgtoa+3,w,c
  3820  0013F4  0A80               	xorlw	128
  3821  0013F6  6E69               	movwf	(??_efgtoa+4)& (0+255),c
  3822  0013F8  51B1               	movf	(efgtoa@e+1)& (0+255),w,b
  3823  0013FA  0A80               	xorlw	128
  3824  0013FC  5869               	subwfb	(??_efgtoa+4)& (0+255),w,c
  3825  0013FE  A0D8               	btfss	status,0,c
  3826  001400  D002               	goto	l3755
  3827                           
  3828                           ; BSR set to: 0
  3829                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 391:             nmode = 'f';
  3830  001402  0E66               	movlw	102
  3831  001404  D001               	goto	L2
  3832  001406                     l3755:
  3833                           
  3834                           ; BSR set to: 0
  3835                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 393:             nmode = 'e';
  3836  001406  0E65               	movlw	101
  3837  001408                     L2:
  3838  001408  6F9E               	movwf	efgtoa@nmode& (0+255),b
  3839  00140A                     l3757:
  3840                           
  3841                           ; BSR set to: 0
  3842                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 398:     m = p;
  3843  00140A  C09C  F094         	movff	efgtoa@p,efgtoa@m
  3844  00140E  C09D  F095         	movff	efgtoa@p+1,efgtoa@m+1
  3845                           
  3846                           ; BSR set to: 0
  3847                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 399:     if (!(mode == 'g') || ((nmode ==
      +                           'f') && (e < 0))) {
  3848  001412  0E67               	movlw	103
  3849  001414  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  3850  001416  A4D8               	btfss	status,2,c
  3851  001418  D005               	goto	u4330
  3852                           
  3853                           ; BSR set to: 0
  3854  00141A  0E66               	movlw	102
  3855  00141C  199E               	xorwf	efgtoa@nmode& (0+255),w,b
  3856  00141E  B4D8               	btfsc	status,2,c
  3857                           
  3858                           ; BSR set to: 0
  3859  001420  AFB1               	btfss	(efgtoa@e+1)& (0+255),7,b
  3860  001422  D002               	goto	l3767
  3861  001424                     u4330:
  3862                           
  3863                           ; BSR set to: 0
  3864                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 400:         ++m;
  3865  001424  4B94               	infsnz	efgtoa@m& (0+255),f,b
  3866  001426  2B95               	incf	(efgtoa@m+1)& (0+255),f,b
  3867  001428                     l3767:
  3868                           
  3869                           ; BSR set to: 0
  3870                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 404:     if (nmode == 'f') {
  3871  001428  0E66               	movlw	102
  3872  00142A  199E               	xorwf	efgtoa@nmode& (0+255),w,b
  3873  00142C  A4D8               	btfss	status,2,c
  3874  00142E  D016               	goto	l3777
  3875                           
  3876                           ; BSR set to: 0
  3877                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 405:         if (e < 0) {
  3878  001430  AFB1               	btfss	(efgtoa@e+1)& (0+255),7,b
  3879  001432  D00C               	goto	l3773
  3880                           
  3881                           ; BSR set to: 0
  3882                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 406:             u = 1.0;
  3883  001434  0E00               	movlw	0
  3884  001436  6FB4               	movwf	efgtoa@u& (0+255),b
  3885  001438  0E00               	movlw	0
  3886  00143A  6FB5               	movwf	(efgtoa@u+1)& (0+255),b
  3887  00143C  0E80               	movlw	128
  3888  00143E  6FB6               	movwf	(efgtoa@u+2)& (0+255),b
  3889  001440  0E3F               	movlw	63
  3890  001442  6FB7               	movwf	(efgtoa@u+3)& (0+255),b
  3891                           
  3892                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 407:             e = 0;
  3893  001444  0E00               	movlw	0
  3894  001446  6FB1               	movwf	(efgtoa@e+1)& (0+255),b
  3895  001448  0E00               	movlw	0
  3896  00144A  6FB0               	movwf	efgtoa@e& (0+255),b
  3897  00144C                     l3773:
  3898                           
  3899                           ; BSR set to: 0
  3900                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 409:         if (!(mode == 'g')) {
  3901  00144C  0E67               	movlw	103
  3902  00144E  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  3903  001450  B4D8               	btfsc	status,2,c
  3904  001452  D004               	goto	l3777
  3905                           
  3906                           ; BSR set to: 0
  3907                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 410:             m += e;
  3908  001454  51B0               	movf	efgtoa@e& (0+255),w,b
  3909  001456  2794               	addwf	efgtoa@m& (0+255),f,b
  3910  001458  51B1               	movf	(efgtoa@e+1)& (0+255),w,b
  3911  00145A  2395               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3912  00145C                     l3777:
  3913                           
  3914                           ; BSR set to: 0
  3915                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 415:     i = 0;
  3916  00145C  0E00               	movlw	0
  3917  00145E  6FAB               	movwf	(efgtoa@i+1)& (0+255),b
  3918  001460  0E00               	movlw	0
  3919  001462  6FAA               	movwf	efgtoa@i& (0+255),b
  3920                           
  3921                           ; BSR set to: 0
  3922                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 416:     h = g;
  3923  001464  C0AC  F0A2         	movff	efgtoa@g,efgtoa@h
  3924  001468  C0AD  F0A3         	movff	efgtoa@g+1,efgtoa@h+1
  3925  00146C  C0AE  F0A4         	movff	efgtoa@g+2,efgtoa@h+2
  3926  001470  C0AF  F0A5         	movff	efgtoa@g+3,efgtoa@h+3
  3927                           
  3928                           ; BSR set to: 0
  3929                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 417:     ou = u;
  3930  001474  C0B4  F080         	movff	efgtoa@u,efgtoa@ou
  3931  001478  C0B5  F081         	movff	efgtoa@u+1,efgtoa@ou+1
  3932  00147C  C0B6  F082         	movff	efgtoa@u+2,efgtoa@ou+2
  3933  001480  C0B7  F083         	movff	efgtoa@u+3,efgtoa@ou+3
  3934                           
  3935                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 418:     while (i < m) {
  3936  001484  D07B               	goto	l3791
  3937  001486                     l3783:
  3938                           
  3939                           ; BSR set to: 0
  3940                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 419:         l = floorf(h/u);
  3941  001486  C0A2  F015         	movff	efgtoa@h,___fldiv@b
  3942  00148A  C0A3  F016         	movff	efgtoa@h+1,___fldiv@b+1
  3943  00148E  C0A4  F017         	movff	efgtoa@h+2,___fldiv@b+2
  3944  001492  C0A5  F018         	movff	efgtoa@h+3,___fldiv@b+3
  3945  001496  C0B4  F019         	movff	efgtoa@u,___fldiv@a
  3946  00149A  C0B5  F01A         	movff	efgtoa@u+1,___fldiv@a+1
  3947  00149E  C0B6  F01B         	movff	efgtoa@u+2,___fldiv@a+2
  3948  0014A2  C0B7  F01C         	movff	efgtoa@u+3,___fldiv@a+3
  3949  0014A6  EC68  F012         	call	___fldiv	;wreg free
  3950  0014AA  C015  F02E         	movff	?___fldiv,floorf@x
  3951  0014AE  C016  F02F         	movff	?___fldiv+1,floorf@x+1
  3952  0014B2  C017  F030         	movff	?___fldiv+2,floorf@x+2
  3953  0014B6  C018  F031         	movff	?___fldiv+3,floorf@x+3
  3954  0014BA  ECAC  F013         	call	_floorf	;wreg free
  3955  0014BE  C02E  F0A6         	movff	?_floorf,efgtoa@l
  3956  0014C2  C02F  F0A7         	movff	?_floorf+1,efgtoa@l+1
  3957  0014C6  C030  F0A8         	movff	?_floorf+2,efgtoa@l+2
  3958  0014CA  C031  F0A9         	movff	?_floorf+3,efgtoa@l+3
  3959                           
  3960                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 420:         d = (int)l;
  3961  0014CE  C0A6  F001         	movff	efgtoa@l,___fltol@f1
  3962  0014D2  C0A7  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3963  0014D6  C0A8  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3964  0014DA  C0A9  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3965  0014DE  EC51  F017         	call	___fltol	;wreg free
  3966  0014E2  C001  F098         	movff	?___fltol,efgtoa@d
  3967  0014E6  C002  F099         	movff	?___fltol+1,efgtoa@d+1
  3968                           
  3969                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 421:         h -= l*u;
  3970  0014EA  C0A2  F052         	movff	efgtoa@h,___flsub@b
  3971  0014EE  C0A3  F053         	movff	efgtoa@h+1,___flsub@b+1
  3972  0014F2  C0A4  F054         	movff	efgtoa@h+2,___flsub@b+2
  3973  0014F6  C0A5  F055         	movff	efgtoa@h+3,___flsub@b+3
  3974  0014FA  C0B4  F03D         	movff	efgtoa@u,___flmul@a
  3975  0014FE  C0B5  F03E         	movff	efgtoa@u+1,___flmul@a+1
  3976  001502  C0B6  F03F         	movff	efgtoa@u+2,___flmul@a+2
  3977  001506  C0B7  F040         	movff	efgtoa@u+3,___flmul@a+3
  3978  00150A  C0A6  F039         	movff	efgtoa@l,___flmul@b
  3979  00150E  C0A7  F03A         	movff	efgtoa@l+1,___flmul@b+1
  3980  001512  C0A8  F03B         	movff	efgtoa@l+2,___flmul@b+2
  3981  001516  C0A9  F03C         	movff	efgtoa@l+3,___flmul@b+3
  3982  00151A  EC39  F00F         	call	___flmul	;wreg free
  3983  00151E  C039  F056         	movff	?___flmul,___flsub@a
  3984  001522  C03A  F057         	movff	?___flmul+1,___flsub@a+1
  3985  001526  C03B  F058         	movff	?___flmul+2,___flsub@a+2
  3986  00152A  C03C  F059         	movff	?___flmul+3,___flsub@a+3
  3987  00152E  EC49  F01B         	call	___flsub	;wreg free
  3988  001532  C052  F0A2         	movff	?___flsub,efgtoa@h
  3989  001536  C053  F0A3         	movff	?___flsub+1,efgtoa@h+1
  3990  00153A  C054  F0A4         	movff	?___flsub+2,efgtoa@h+2
  3991  00153E  C055  F0A5         	movff	?___flsub+3,efgtoa@h+3
  3992                           
  3993                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 422:         u = u/10.0;
  3994  001542  C0B4  F015         	movff	efgtoa@u,___fldiv@b
  3995  001546  C0B5  F016         	movff	efgtoa@u+1,___fldiv@b+1
  3996  00154A  C0B6  F017         	movff	efgtoa@u+2,___fldiv@b+2
  3997  00154E  C0B7  F018         	movff	efgtoa@u+3,___fldiv@b+3
  3998  001552  0E00               	movlw	0
  3999  001554  6E19               	movwf	___fldiv@a,c
  4000  001556  0E00               	movlw	0
  4001  001558  6E1A               	movwf	___fldiv@a+1,c
  4002  00155A  0E20               	movlw	32
  4003  00155C  6E1B               	movwf	___fldiv@a+2,c
  4004  00155E  0E41               	movlw	65
  4005  001560  6E1C               	movwf	___fldiv@a+3,c
  4006  001562  EC68  F012         	call	___fldiv	;wreg free
  4007  001566  C015  F0B4         	movff	?___fldiv,efgtoa@u
  4008  00156A  C016  F0B5         	movff	?___fldiv+1,efgtoa@u+1
  4009  00156E  C017  F0B6         	movff	?___fldiv+2,efgtoa@u+2
  4010  001572  C018  F0B7         	movff	?___fldiv+3,efgtoa@u+3
  4011                           
  4012                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 423:         ++i;
  4013  001576  0100               	movlb	0	; () banked
  4014  001578  4BAA               	infsnz	efgtoa@i& (0+255),f,b
  4015  00157A  2BAB               	incf	(efgtoa@i+1)& (0+255),f,b
  4016  00157C                     l3791:
  4017                           
  4018                           ; BSR set to: 0
  4019                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 418:     while (i < m) {
  4020  00157C  5194               	movf	efgtoa@m& (0+255),w,b
  4021  00157E  5DAA               	subwf	efgtoa@i& (0+255),w,b
  4022  001580  51AB               	movf	(efgtoa@i+1)& (0+255),w,b
  4023  001582  0A80               	xorlw	128
  4024  001584  6E65               	movwf	??_efgtoa& (0+255),c
  4025  001586  5195               	movf	(efgtoa@m+1)& (0+255),w,b
  4026  001588  0A80               	xorlw	128
  4027  00158A  5865               	subwfb	??_efgtoa& (0+255),w,c
  4028  00158C  A0D8               	btfss	status,0,c
  4029  00158E  D77B               	goto	l3783
  4030                           
  4031                           ; BSR set to: 0
  4032                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 427:     l = u*5.0;
  4033  001590  C0B4  F039         	movff	efgtoa@u,___flmul@b
  4034  001594  C0B5  F03A         	movff	efgtoa@u+1,___flmul@b+1
  4035  001598  C0B6  F03B         	movff	efgtoa@u+2,___flmul@b+2
  4036  00159C  C0B7  F03C         	movff	efgtoa@u+3,___flmul@b+3
  4037  0015A0  0E00               	movlw	0
  4038  0015A2  6E3D               	movwf	___flmul@a,c
  4039  0015A4  0E00               	movlw	0
  4040  0015A6  6E3E               	movwf	___flmul@a+1,c
  4041  0015A8  0EA0               	movlw	160
  4042  0015AA  6E3F               	movwf	___flmul@a+2,c
  4043  0015AC  0E40               	movlw	64
  4044  0015AE  6E40               	movwf	___flmul@a+3,c
  4045  0015B0  EC39  F00F         	call	___flmul	;wreg free
  4046  0015B4  C039  F0A6         	movff	?___flmul,efgtoa@l
  4047  0015B8  C03A  F0A7         	movff	?___flmul+1,efgtoa@l+1
  4048  0015BC  C03B  F0A8         	movff	?___flmul+2,efgtoa@l+2
  4049  0015C0  C03C  F0A9         	movff	?___flmul+3,efgtoa@l+3
  4050                           
  4051                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 428:     if (h < l) {
  4052  0015C4  C0A2  F052         	movff	efgtoa@h,___flge@ff1
  4053  0015C8  C0A3  F053         	movff	efgtoa@h+1,___flge@ff1+1
  4054  0015CC  C0A4  F054         	movff	efgtoa@h+2,___flge@ff1+2
  4055  0015D0  C0A5  F055         	movff	efgtoa@h+3,___flge@ff1+3
  4056  0015D4  C0A6  F056         	movff	efgtoa@l,___flge@ff2
  4057  0015D8  C0A7  F057         	movff	efgtoa@l+1,___flge@ff2+1
  4058  0015DC  C0A8  F058         	movff	efgtoa@l+2,___flge@ff2+2
  4059  0015E0  C0A9  F059         	movff	efgtoa@l+3,___flge@ff2+3
  4060  0015E4  EC83  F016         	call	___flge	;wreg free
  4061  0015E8  B0D8               	btfsc	status,0,c
  4062  0015EA  D003               	goto	l3799
  4063                           
  4064                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 429:         l = 0.0;
  4065  0015EC  0E00               	movlw	0
  4066  0015EE  0100               	movlb	0	; () banked
  4067  0015F0  D018               	goto	L3
  4068  0015F2                     l3799:
  4069                           
  4070                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 432:         if ((h == l) && !(d % 2)) {
  4071  0015F2  C0A2  F001         	movff	efgtoa@h,___fleq@ff1
  4072  0015F6  C0A3  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  4073  0015FA  C0A4  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  4074  0015FE  C0A5  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  4075  001602  C0A6  F005         	movff	efgtoa@l,___fleq@ff2
  4076  001606  C0A7  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  4077  00160A  C0A8  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  4078  00160E  C0A9  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  4079  001612  EC9A  F018         	call	___fleq	;wreg free
  4080  001616  A0D8               	btfss	status,0,c
  4081  001618  D00B               	goto	l3805
  4082  00161A  0100               	movlb	0	; () banked
  4083  00161C  B198               	btfsc	efgtoa@d& (0+255),0,b
  4084  00161E  D008               	goto	l3805
  4085                           
  4086                           ; BSR set to: 0
  4087                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 433:             l = 0.0;
  4088  001620  0E00               	movlw	0
  4089  001622                     L3:
  4090  001622  6FA6               	movwf	efgtoa@l& (0+255),b
  4091  001624  0E00               	movlw	0
  4092  001626  6FA7               	movwf	(efgtoa@l+1)& (0+255),b
  4093  001628  0E00               	movlw	0
  4094  00162A  6FA8               	movwf	(efgtoa@l+2)& (0+255),b
  4095  00162C  0E00               	movlw	0
  4096  00162E  6FA9               	movwf	(efgtoa@l+3)& (0+255),b
  4097  001630                     l3805:
  4098                           
  4099                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 438:     h = g + l;
  4100  001630  C0AC  F001         	movff	efgtoa@g,___fladd@b
  4101  001634  C0AD  F002         	movff	efgtoa@g+1,___fladd@b+1
  4102  001638  C0AE  F003         	movff	efgtoa@g+2,___fladd@b+2
  4103  00163C  C0AF  F004         	movff	efgtoa@g+3,___fladd@b+3
  4104  001640  C0A6  F005         	movff	efgtoa@l,___fladd@a
  4105  001644  C0A7  F006         	movff	efgtoa@l+1,___fladd@a+1
  4106  001648  C0A8  F007         	movff	efgtoa@l+2,___fladd@a+2
  4107  00164C  C0A9  F008         	movff	efgtoa@l+3,___fladd@a+3
  4108  001650  ECE2  F010         	call	___fladd	;wreg free
  4109  001654  C001  F0A2         	movff	?___fladd,efgtoa@h
  4110  001658  C002  F0A3         	movff	?___fladd+1,efgtoa@h+1
  4111  00165C  C003  F0A4         	movff	?___fladd+2,efgtoa@h+2
  4112  001660  C004  F0A5         	movff	?___fladd+3,efgtoa@h+3
  4113                           
  4114                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 441:     u = ou;
  4115  001664  C080  F0B4         	movff	efgtoa@ou,efgtoa@u
  4116  001668  C081  F0B5         	movff	efgtoa@ou+1,efgtoa@u+1
  4117  00166C  C082  F0B6         	movff	efgtoa@ou+2,efgtoa@u+2
  4118  001670  C083  F0B7         	movff	efgtoa@ou+3,efgtoa@u+3
  4119                           
  4120                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 442:     ne = (nmode == 'e') ? 0 : e;
  4121  001674  0E65               	movlw	101
  4122  001676  0100               	movlb	0	; () banked
  4123  001678  199E               	xorwf	efgtoa@nmode& (0+255),w,b
  4124  00167A  B4D8               	btfsc	status,2,c
  4125  00167C  D005               	goto	l3813
  4126                           
  4127                           ; BSR set to: 0
  4128  00167E  C0B0  F096         	movff	efgtoa@e,efgtoa@ne
  4129  001682  C0B1  F097         	movff	efgtoa@e+1,efgtoa@ne+1
  4130  001686  D004               	goto	l314
  4131  001688                     l3813:
  4132                           
  4133                           ; BSR set to: 0
  4134  001688  0E00               	movlw	0
  4135  00168A  6F97               	movwf	(efgtoa@ne+1)& (0+255),b
  4136  00168C  0E00               	movlw	0
  4137  00168E  6F96               	movwf	efgtoa@ne& (0+255),b
  4138  001690                     l314:
  4139                           
  4140                           ; BSR set to: 0
  4141                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 443:     pp = 0;
  4142  001690  0E00               	movlw	0
  4143  001692  6F93               	movwf	(efgtoa@pp+1)& (0+255),b
  4144  001694  0E00               	movlw	0
  4145  001696  6F92               	movwf	efgtoa@pp& (0+255),b
  4146                           
  4147                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 444:     t = 0;
  4148  001698  0E00               	movlw	0
  4149  00169A  6F91               	movwf	(efgtoa@t+1)& (0+255),b
  4150  00169C  0E00               	movlw	0
  4151  00169E  6F90               	movwf	efgtoa@t& (0+255),b
  4152                           
  4153                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 445:     i = 0;
  4154  0016A0  0E00               	movlw	0
  4155  0016A2  6FAB               	movwf	(efgtoa@i+1)& (0+255),b
  4156  0016A4  0E00               	movlw	0
  4157  0016A6  6FAA               	movwf	efgtoa@i& (0+255),b
  4158                           
  4159                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 446:     while ((i < m) && (n < (80 - 5))
      +                          ) {
  4160  0016A8  D0C7               	goto	l3863
  4161  0016AA                     l3815:
  4162                           
  4163                           ; BSR set to: 0
  4164                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 447:         l = floorf(h/u);
  4165  0016AA  C0A2  F015         	movff	efgtoa@h,___fldiv@b
  4166  0016AE  C0A3  F016         	movff	efgtoa@h+1,___fldiv@b+1
  4167  0016B2  C0A4  F017         	movff	efgtoa@h+2,___fldiv@b+2
  4168  0016B6  C0A5  F018         	movff	efgtoa@h+3,___fldiv@b+3
  4169  0016BA  C0B4  F019         	movff	efgtoa@u,___fldiv@a
  4170  0016BE  C0B5  F01A         	movff	efgtoa@u+1,___fldiv@a+1
  4171  0016C2  C0B6  F01B         	movff	efgtoa@u+2,___fldiv@a+2
  4172  0016C6  C0B7  F01C         	movff	efgtoa@u+3,___fldiv@a+3
  4173  0016CA  EC68  F012         	call	___fldiv	;wreg free
  4174  0016CE  C015  F02E         	movff	?___fldiv,floorf@x
  4175  0016D2  C016  F02F         	movff	?___fldiv+1,floorf@x+1
  4176  0016D6  C017  F030         	movff	?___fldiv+2,floorf@x+2
  4177  0016DA  C018  F031         	movff	?___fldiv+3,floorf@x+3
  4178  0016DE  ECAC  F013         	call	_floorf	;wreg free
  4179  0016E2  C02E  F0A6         	movff	?_floorf,efgtoa@l
  4180  0016E6  C02F  F0A7         	movff	?_floorf+1,efgtoa@l+1
  4181  0016EA  C030  F0A8         	movff	?_floorf+2,efgtoa@l+2
  4182  0016EE  C031  F0A9         	movff	?_floorf+3,efgtoa@l+3
  4183                           
  4184                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 448:         d = (int)l;
  4185  0016F2  C0A6  F001         	movff	efgtoa@l,___fltol@f1
  4186  0016F6  C0A7  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4187  0016FA  C0A8  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4188  0016FE  C0A9  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4189  001702  EC51  F017         	call	___fltol	;wreg free
  4190  001706  C001  F098         	movff	?___fltol,efgtoa@d
  4191  00170A  C002  F099         	movff	?___fltol+1,efgtoa@d+1
  4192                           
  4193                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 449:         if (!(flags & (1 << 4)) && !
      +                          d && (mode == 'g') && (ne < 0)) {
  4194  00170E  B87E               	btfsc	_flags,4,c
  4195  001710  D00D               	goto	l3827
  4196  001712  0100               	movlb	0	; () banked
  4197  001714  5198               	movf	efgtoa@d& (0+255),w,b
  4198  001716  1199               	iorwf	(efgtoa@d+1)& (0+255),w,b
  4199  001718  A4D8               	btfss	status,2,c
  4200  00171A  D008               	goto	l3827
  4201                           
  4202                           ; BSR set to: 0
  4203  00171C  0E67               	movlw	103
  4204  00171E  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  4205  001720  B4D8               	btfsc	status,2,c
  4206                           
  4207                           ; BSR set to: 0
  4208  001722  AF97               	btfss	(efgtoa@ne+1)& (0+255),7,b
  4209  001724  D003               	goto	l3827
  4210                           
  4211                           ; BSR set to: 0
  4212                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 450:             ++t;
  4213  001726  4B90               	infsnz	efgtoa@t& (0+255),f,b
  4214  001728  2B91               	incf	(efgtoa@t+1)& (0+255),f,b
  4215                           
  4216                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 451:         } else {
  4217  00172A  D03A               	goto	l3855
  4218  00172C                     l3827:
  4219                           
  4220                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 452:             if (!pp && (ne < 0)) {
  4221  00172C  0100               	movlb	0	; () banked
  4222  00172E  5192               	movf	efgtoa@pp& (0+255),w,b
  4223  001730  1193               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4224  001732  B4D8               	btfsc	status,2,c
  4225                           
  4226                           ; BSR set to: 0
  4227  001734  AF97               	btfss	(efgtoa@ne+1)& (0+255),7,b
  4228  001736  D022               	goto	l3847
  4229                           
  4230                           ; BSR set to: 0
  4231                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 453:                 dbuf[n++] = '.';
  4232  001738  0E00               	movlw	low _dbuf
  4233  00173A  25B2               	addwf	efgtoa@n& (0+255),w,b
  4234  00173C  6ED9               	movwf	fsr2l,c
  4235  00173E  0E01               	movlw	high _dbuf
  4236  001740  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4237  001742  6EDA               	movwf	fsr2h,c
  4238  001744  0E2E               	movlw	46
  4239  001746  6EDF               	movwf	indf2,c
  4240                           
  4241                           ; BSR set to: 0
  4242  001748  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  4243  00174A  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  4244                           
  4245                           ; BSR set to: 0
  4246                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 454:                 --w;
  4247  00174C  079F               	decf	efgtoa@w& (0+255),f,b
  4248  00174E  A0D8               	btfss	status,0,c
  4249  001750  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  4250                           
  4251                           ; BSR set to: 0
  4252                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 455:                 pp = 1;
  4253  001752  0E00               	movlw	0
  4254  001754  6F93               	movwf	(efgtoa@pp+1)& (0+255),b
  4255  001756  0E01               	movlw	1
  4256  001758  6F92               	movwf	efgtoa@pp& (0+255),b
  4257  00175A  D010               	goto	l3847
  4258  00175C                     l3839:
  4259                           
  4260                           ; BSR set to: 0
  4261                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 458:                 dbuf[n++] = '0';
  4262  00175C  0E00               	movlw	low _dbuf
  4263  00175E  25B2               	addwf	efgtoa@n& (0+255),w,b
  4264  001760  6ED9               	movwf	fsr2l,c
  4265  001762  0E01               	movlw	high _dbuf
  4266  001764  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4267  001766  6EDA               	movwf	fsr2h,c
  4268  001768  0E30               	movlw	48
  4269  00176A  6EDF               	movwf	indf2,c
  4270                           
  4271                           ; BSR set to: 0
  4272  00176C  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  4273  00176E  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  4274                           
  4275                           ; BSR set to: 0
  4276                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 459:                 --w;
  4277  001770  079F               	decf	efgtoa@w& (0+255),f,b
  4278  001772  A0D8               	btfss	status,0,c
  4279  001774  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  4280                           
  4281                           ; BSR set to: 0
  4282                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 460:                 --t;
  4283  001776  0790               	decf	efgtoa@t& (0+255),f,b
  4284  001778  A0D8               	btfss	status,0,c
  4285  00177A  0791               	decf	(efgtoa@t+1)& (0+255),f,b
  4286  00177C                     l3847:
  4287                           
  4288                           ; BSR set to: 0
  4289                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 457:             while (t) {
  4290  00177C  5190               	movf	efgtoa@t& (0+255),w,b
  4291  00177E  1191               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4292  001780  A4D8               	btfss	status,2,c
  4293  001782  D7EC               	goto	l3839
  4294                           
  4295                           ; BSR set to: 0
  4296                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 462:             dbuf[n++] = '0' + d;
  4297  001784  0E00               	movlw	low _dbuf
  4298  001786  25B2               	addwf	efgtoa@n& (0+255),w,b
  4299  001788  6ED9               	movwf	fsr2l,c
  4300  00178A  0E01               	movlw	high _dbuf
  4301  00178C  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4302  00178E  6EDA               	movwf	fsr2h,c
  4303  001790  5198               	movf	efgtoa@d& (0+255),w,b
  4304  001792  0F30               	addlw	48
  4305  001794  6EDF               	movwf	indf2,c
  4306                           
  4307                           ; BSR set to: 0
  4308  001796  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  4309  001798  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  4310                           
  4311                           ; BSR set to: 0
  4312                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 463:             --w;
  4313  00179A  079F               	decf	efgtoa@w& (0+255),f,b
  4314  00179C  A0D8               	btfss	status,0,c
  4315  00179E  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  4316  0017A0                     l3855:
  4317                           
  4318                           ; BSR set to: 0
  4319                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 465:         h -= l*u;
  4320  0017A0  C0A2  F052         	movff	efgtoa@h,___flsub@b
  4321  0017A4  C0A3  F053         	movff	efgtoa@h+1,___flsub@b+1
  4322  0017A8  C0A4  F054         	movff	efgtoa@h+2,___flsub@b+2
  4323  0017AC  C0A5  F055         	movff	efgtoa@h+3,___flsub@b+3
  4324  0017B0  C0B4  F03D         	movff	efgtoa@u,___flmul@a
  4325  0017B4  C0B5  F03E         	movff	efgtoa@u+1,___flmul@a+1
  4326  0017B8  C0B6  F03F         	movff	efgtoa@u+2,___flmul@a+2
  4327  0017BC  C0B7  F040         	movff	efgtoa@u+3,___flmul@a+3
  4328  0017C0  C0A6  F039         	movff	efgtoa@l,___flmul@b
  4329  0017C4  C0A7  F03A         	movff	efgtoa@l+1,___flmul@b+1
  4330  0017C8  C0A8  F03B         	movff	efgtoa@l+2,___flmul@b+2
  4331  0017CC  C0A9  F03C         	movff	efgtoa@l+3,___flmul@b+3
  4332  0017D0  EC39  F00F         	call	___flmul	;wreg free
  4333  0017D4  C039  F056         	movff	?___flmul,___flsub@a
  4334  0017D8  C03A  F057         	movff	?___flmul+1,___flsub@a+1
  4335  0017DC  C03B  F058         	movff	?___flmul+2,___flsub@a+2
  4336  0017E0  C03C  F059         	movff	?___flmul+3,___flsub@a+3
  4337  0017E4  EC49  F01B         	call	___flsub	;wreg free
  4338  0017E8  C052  F0A2         	movff	?___flsub,efgtoa@h
  4339  0017EC  C053  F0A3         	movff	?___flsub+1,efgtoa@h+1
  4340  0017F0  C054  F0A4         	movff	?___flsub+2,efgtoa@h+2
  4341  0017F4  C055  F0A5         	movff	?___flsub+3,efgtoa@h+3
  4342                           
  4343                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 466:         u = u/10.0;
  4344  0017F8  C0B4  F015         	movff	efgtoa@u,___fldiv@b
  4345  0017FC  C0B5  F016         	movff	efgtoa@u+1,___fldiv@b+1
  4346  001800  C0B6  F017         	movff	efgtoa@u+2,___fldiv@b+2
  4347  001804  C0B7  F018         	movff	efgtoa@u+3,___fldiv@b+3
  4348  001808  0E00               	movlw	0
  4349  00180A  6E19               	movwf	___fldiv@a,c
  4350  00180C  0E00               	movlw	0
  4351  00180E  6E1A               	movwf	___fldiv@a+1,c
  4352  001810  0E20               	movlw	32
  4353  001812  6E1B               	movwf	___fldiv@a+2,c
  4354  001814  0E41               	movlw	65
  4355  001816  6E1C               	movwf	___fldiv@a+3,c
  4356  001818  EC68  F012         	call	___fldiv	;wreg free
  4357  00181C  C015  F0B4         	movff	?___fldiv,efgtoa@u
  4358  001820  C016  F0B5         	movff	?___fldiv+1,efgtoa@u+1
  4359  001824  C017  F0B6         	movff	?___fldiv+2,efgtoa@u+2
  4360  001828  C018  F0B7         	movff	?___fldiv+3,efgtoa@u+3
  4361                           
  4362                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 467:         --ne;
  4363  00182C  0100               	movlb	0	; () banked
  4364  00182E  0796               	decf	efgtoa@ne& (0+255),f,b
  4365  001830  A0D8               	btfss	status,0,c
  4366  001832  0797               	decf	(efgtoa@ne+1)& (0+255),f,b
  4367                           
  4368                           ; BSR set to: 0
  4369                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 468:         ++i;
  4370  001834  4BAA               	infsnz	efgtoa@i& (0+255),f,b
  4371  001836  2BAB               	incf	(efgtoa@i+1)& (0+255),f,b
  4372  001838                     l3863:
  4373                           
  4374                           ; BSR set to: 0
  4375                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 446:     while ((i < m) && (n < (80 - 5))
      +                          ) {
  4376  001838  5194               	movf	efgtoa@m& (0+255),w,b
  4377  00183A  5DAA               	subwf	efgtoa@i& (0+255),w,b
  4378  00183C  51AB               	movf	(efgtoa@i+1)& (0+255),w,b
  4379  00183E  0A80               	xorlw	128
  4380  001840  6E65               	movwf	??_efgtoa& (0+255),c
  4381  001842  5195               	movf	(efgtoa@m+1)& (0+255),w,b
  4382  001844  0A80               	xorlw	128
  4383  001846  5865               	subwfb	??_efgtoa& (0+255),w,c
  4384  001848  B0D8               	btfsc	status,0,c
  4385  00184A  D008               	goto	u4500
  4386                           
  4387                           ; BSR set to: 0
  4388  00184C  BFB3               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4389  00184E  D72D               	goto	l3815
  4390  001850  51B3               	movf	(efgtoa@n+1)& (0+255),w,b
  4391  001852  E104               	bnz	u4500
  4392  001854  0E4B               	movlw	75
  4393  001856  5DB2               	subwf	efgtoa@n& (0+255),w,b
  4394  001858  A0D8               	btfss	status,0,c
  4395  00185A  D727               	goto	l3815
  4396  00185C                     u4500:
  4397                           
  4398                           ; BSR set to: 0
  4399                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 470:     if (!pp && (flags & (1 << 4))) {
  4400  00185C  5192               	movf	efgtoa@pp& (0+255),w,b
  4401  00185E  1193               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4402  001860  B4D8               	btfsc	status,2,c
  4403                           
  4404                           ; BSR set to: 0
  4405  001862  A87E               	btfss	_flags,4,c
  4406  001864  D00A               	goto	l3875
  4407                           
  4408                           ; BSR set to: 0
  4409                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 471:         dbuf[n++] = '.';
  4410  001866  0E00               	movlw	low _dbuf
  4411  001868  25B2               	addwf	efgtoa@n& (0+255),w,b
  4412  00186A  6ED9               	movwf	fsr2l,c
  4413  00186C  0E01               	movlw	high _dbuf
  4414  00186E  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4415  001870  6EDA               	movwf	fsr2h,c
  4416  001872  0E2E               	movlw	46
  4417  001874  6EDF               	movwf	indf2,c
  4418                           
  4419                           ; BSR set to: 0
  4420  001876  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  4421  001878  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  4422  00187A                     l3875:
  4423                           
  4424                           ; BSR set to: 0
  4425                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 473:     dbuf[n] = '\0';
  4426  00187A  0E00               	movlw	low _dbuf
  4427  00187C  25B2               	addwf	efgtoa@n& (0+255),w,b
  4428  00187E  6ED9               	movwf	fsr2l,c
  4429  001880  0E01               	movlw	high _dbuf
  4430  001882  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4431  001884  6EDA               	movwf	fsr2h,c
  4432  001886  0E00               	movlw	0
  4433  001888  6EDF               	movwf	indf2,c
  4434                           
  4435                           ; BSR set to: 0
  4436                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 476:     if (nmode == 'e') {
  4437  00188A  0E65               	movlw	101
  4438  00188C  199E               	xorwf	efgtoa@nmode& (0+255),w,b
  4439  00188E  A4D8               	btfss	status,2,c
  4440  001890  D47E               	goto	l3687
  4441                           
  4442                           ; BSR set to: 0
  4443                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 477:         i = sizeof(dbuf) - 1;
  4444  001892  0E00               	movlw	0
  4445  001894  6FAB               	movwf	(efgtoa@i+1)& (0+255),b
  4446  001896  0E4F               	movlw	79
  4447  001898  6FAA               	movwf	efgtoa@i& (0+255),b
  4448                           
  4449                           ; BSR set to: 0
  4450                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 478:         dbuf[i] = '\0';
  4451  00189A  0E00               	movlw	low _dbuf
  4452  00189C  25AA               	addwf	efgtoa@i& (0+255),w,b
  4453  00189E  6ED9               	movwf	fsr2l,c
  4454  0018A0  0E01               	movlw	high _dbuf
  4455  0018A2  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4456  0018A4  6EDA               	movwf	fsr2h,c
  4457  0018A6  0E00               	movlw	0
  4458  0018A8  6EDF               	movwf	indf2,c
  4459                           
  4460                           ; BSR set to: 0
  4461                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 479:         sign = 0;
  4462  0018AA  0E00               	movlw	0
  4463  0018AC  6F9B               	movwf	(efgtoa@sign+1)& (0+255),b
  4464  0018AE  0E00               	movlw	0
  4465  0018B0  6F9A               	movwf	efgtoa@sign& (0+255),b
  4466                           
  4467                           ; BSR set to: 0
  4468                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 480:         if (e < 0) {
  4469  0018B2  AFB1               	btfss	(efgtoa@e+1)& (0+255),7,b
  4470  0018B4  D008               	goto	l3891
  4471                           
  4472                           ; BSR set to: 0
  4473                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 481:             sign = 1;
  4474  0018B6  0E00               	movlw	0
  4475  0018B8  6F9B               	movwf	(efgtoa@sign+1)& (0+255),b
  4476  0018BA  0E01               	movlw	1
  4477  0018BC  6F9A               	movwf	efgtoa@sign& (0+255),b
  4478                           
  4479                           ; BSR set to: 0
  4480                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 482:             e = -e;
  4481  0018BE  6DB0               	negf	efgtoa@e& (0+255),b
  4482  0018C0  1FB1               	comf	(efgtoa@e+1)& (0+255),f,b
  4483  0018C2  B0D8               	btfsc	status,0,c
  4484  0018C4  2BB1               	incf	(efgtoa@e+1)& (0+255),f,b
  4485  0018C6                     l3891:
  4486                           
  4487                           ; BSR set to: 0
  4488                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 484:         p = 2;
  4489  0018C6  0E00               	movlw	0
  4490  0018C8  6F9D               	movwf	(efgtoa@p+1)& (0+255),b
  4491  0018CA  0E02               	movlw	2
  4492  0018CC  6F9C               	movwf	efgtoa@p& (0+255),b
  4493                           
  4494                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 485:         while (e || (0 < p)) {
  4495  0018CE  D02B               	goto	l3903
  4496  0018D0                     l3893:
  4497                           
  4498                           ; BSR set to: 0
  4499                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 486:             --i;
  4500  0018D0  07AA               	decf	efgtoa@i& (0+255),f,b
  4501  0018D2  A0D8               	btfss	status,0,c
  4502  0018D4  07AB               	decf	(efgtoa@i+1)& (0+255),f,b
  4503                           
  4504                           ; BSR set to: 0
  4505                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 487:             dbuf[i] = '0' + (e % 10)
      +                          ;
  4506  0018D6  0E00               	movlw	low _dbuf
  4507  0018D8  25AA               	addwf	efgtoa@i& (0+255),w,b
  4508  0018DA  6ED9               	movwf	fsr2l,c
  4509  0018DC  0E01               	movlw	high _dbuf
  4510  0018DE  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4511  0018E0  6EDA               	movwf	fsr2h,c
  4512  0018E2  C0B0  F001         	movff	efgtoa@e,___awmod@dividend
  4513  0018E6  C0B1  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  4514  0018EA  0E00               	movlw	0
  4515  0018EC  6E04               	movwf	___awmod@divisor+1,c
  4516  0018EE  0E0A               	movlw	10
  4517  0018F0  6E03               	movwf	___awmod@divisor,c
  4518  0018F2  EC62  F019         	call	___awmod	;wreg free
  4519  0018F6  5001               	movf	?___awmod,w,c
  4520  0018F8  0F30               	addlw	48
  4521  0018FA  6EDF               	movwf	indf2,c
  4522                           
  4523                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 488:             e = e / 10;
  4524  0018FC  C0B0  F001         	movff	efgtoa@e,___awdiv@dividend
  4525  001900  C0B1  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  4526  001904  0E00               	movlw	0
  4527  001906  6E04               	movwf	___awdiv@divisor+1,c
  4528  001908  0E0A               	movlw	10
  4529  00190A  6E03               	movwf	___awdiv@divisor,c
  4530  00190C  ECDF  F018         	call	___awdiv	;wreg free
  4531  001910  C001  F0B0         	movff	?___awdiv,efgtoa@e
  4532  001914  C002  F0B1         	movff	?___awdiv+1,efgtoa@e+1
  4533                           
  4534                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 489:             --p;
  4535  001918  0100               	movlb	0	; () banked
  4536  00191A  079C               	decf	efgtoa@p& (0+255),f,b
  4537  00191C  A0D8               	btfss	status,0,c
  4538  00191E  079D               	decf	(efgtoa@p+1)& (0+255),f,b
  4539                           
  4540                           ; BSR set to: 0
  4541                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 490:             --w;
  4542  001920  079F               	decf	efgtoa@w& (0+255),f,b
  4543  001922  A0D8               	btfss	status,0,c
  4544  001924  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  4545  001926                     l3903:
  4546                           
  4547                           ; BSR set to: 0
  4548                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 485:         while (e || (0 < p)) {
  4549  001926  51B0               	movf	efgtoa@e& (0+255),w,b
  4550  001928  11B1               	iorwf	(efgtoa@e+1)& (0+255),w,b
  4551  00192A  A4D8               	btfss	status,2,c
  4552  00192C  D7D1               	goto	l3893
  4553                           
  4554                           ; BSR set to: 0
  4555  00192E  BF9D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  4556  001930  D005               	goto	u4560
  4557  001932  519D               	movf	(efgtoa@p+1)& (0+255),w,b
  4558  001934  E1CD               	bnz	l3893
  4559  001936  059C               	decf	efgtoa@p& (0+255),w,b
  4560  001938  B0D8               	btfsc	status,0,c
  4561  00193A  D7CA               	goto	l3893
  4562  00193C                     u4560:
  4563                           
  4564                           ; BSR set to: 0
  4565                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 492:         --i;
  4566  00193C  07AA               	decf	efgtoa@i& (0+255),f,b
  4567  00193E  A0D8               	btfss	status,0,c
  4568  001940  07AB               	decf	(efgtoa@i+1)& (0+255),f,b
  4569                           
  4570                           ; BSR set to: 0
  4571                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 493:         dbuf[i] = sign ? '-' : '+';
  4572  001942  519A               	movf	efgtoa@sign& (0+255),w,b
  4573  001944  119B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4574  001946  A4D8               	btfss	status,2,c
  4575  001948  D004               	goto	l3913
  4576                           
  4577                           ; BSR set to: 0
  4578  00194A  0E00               	movlw	0
  4579  00194C  6F8B               	movwf	(_efgtoa$664+1)& (0+255),b
  4580  00194E  0E2B               	movlw	43
  4581  001950  D003               	goto	L4
  4582  001952                     l3913:
  4583                           
  4584                           ; BSR set to: 0
  4585  001952  0E00               	movlw	0
  4586  001954  6F8B               	movwf	(_efgtoa$664+1)& (0+255),b
  4587  001956  0E2D               	movlw	45
  4588  001958                     L4:
  4589  001958  6F8A               	movwf	_efgtoa$664& (0+255),b
  4590                           
  4591                           ; BSR set to: 0
  4592  00195A  0E00               	movlw	low _dbuf
  4593  00195C  25AA               	addwf	efgtoa@i& (0+255),w,b
  4594  00195E  6ED9               	movwf	fsr2l,c
  4595  001960  0E01               	movlw	high _dbuf
  4596  001962  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4597  001964  6EDA               	movwf	fsr2h,c
  4598  001966  C08A  FFDF         	movff	_efgtoa$664,indf2
  4599                           
  4600                           ; BSR set to: 0
  4601                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 494:         --w;
  4602  00196A  079F               	decf	efgtoa@w& (0+255),f,b
  4603  00196C  A0D8               	btfss	status,0,c
  4604  00196E  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  4605                           
  4606                           ; BSR set to: 0
  4607                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 496:         dbuf[i] = (0 ? isupper((int)
      +                          c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  4608  001970  07AA               	decf	efgtoa@i& (0+255),f,b
  4609  001972  A0D8               	btfss	status,0,c
  4610  001974  07AB               	decf	(efgtoa@i+1)& (0+255),f,b
  4611                           
  4612                           ; BSR set to: 0
  4613  001976  0EBF               	movlw	191
  4614  001978  6E65               	movwf	??_efgtoa& (0+255),c
  4615  00197A  0EFF               	movlw	255
  4616  00197C  6E66               	movwf	(??_efgtoa+1)& (0+255),c
  4617  00197E  5064               	movf	efgtoa@c,w,c
  4618  001980  6E67               	movwf	(??_efgtoa+2)& (0+255),c
  4619  001982  6A68               	clrf	(??_efgtoa+3)& (0+255),c
  4620  001984  5065               	movf	??_efgtoa,w,c
  4621  001986  2667               	addwf	??_efgtoa+2,f,c
  4622  001988  5066               	movf	??_efgtoa+1,w,c
  4623  00198A  2268               	addwfc	??_efgtoa+3,f,c
  4624  00198C  5068               	movf	??_efgtoa+3,w,c
  4625  00198E  E106               	bnz	u4580
  4626  001990  0E1A               	movlw	26
  4627  001992  5C67               	subwf	??_efgtoa+2,w,c
  4628  001994  B0D8               	btfsc	status,0,c
  4629  001996  D002               	goto	u4580
  4630  001998  0E01               	movlw	1
  4631  00199A  D001               	goto	u4590
  4632  00199C                     u4580:
  4633  00199C  0E00               	movlw	0
  4634  00199E                     u4590:
  4635  00199E  6F8E               	movwf	_efgtoa$666& (0+255),b
  4636  0019A0  6B8F               	clrf	(_efgtoa$666+1)& (0+255),b
  4637                           
  4638                           ; BSR set to: 0
  4639  0019A2  518E               	movf	_efgtoa$666& (0+255),w,b
  4640  0019A4  118F               	iorwf	(_efgtoa$666+1)& (0+255),w,b
  4641  0019A6  A4D8               	btfss	status,2,c
  4642  0019A8  D004               	goto	l3929
  4643                           
  4644                           ; BSR set to: 0
  4645  0019AA  0E00               	movlw	0
  4646  0019AC  6F8D               	movwf	(_efgtoa$665+1)& (0+255),b
  4647  0019AE  0E65               	movlw	101
  4648  0019B0  D003               	goto	L5
  4649  0019B2                     l3929:
  4650                           
  4651                           ; BSR set to: 0
  4652  0019B2  0E00               	movlw	0
  4653  0019B4  6F8D               	movwf	(_efgtoa$665+1)& (0+255),b
  4654  0019B6  0E45               	movlw	69
  4655  0019B8                     L5:
  4656  0019B8  6F8C               	movwf	_efgtoa$665& (0+255),b
  4657                           
  4658                           ; BSR set to: 0
  4659  0019BA  0E00               	movlw	low _dbuf
  4660  0019BC  25AA               	addwf	efgtoa@i& (0+255),w,b
  4661  0019BE  6ED9               	movwf	fsr2l,c
  4662  0019C0  0E01               	movlw	high _dbuf
  4663  0019C2  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4664  0019C4  6EDA               	movwf	fsr2h,c
  4665  0019C6  C08C  FFDF         	movff	_efgtoa$665,indf2
  4666                           
  4667                           ; BSR set to: 0
  4668                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 497:         --w;
  4669  0019CA  079F               	decf	efgtoa@w& (0+255),f,b
  4670  0019CC  A0D8               	btfss	status,0,c
  4671  0019CE  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  4672                           
  4673                           ; BSR set to: 0
  4674                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 498:         strcpy(&dbuf[n], &dbuf[i]);
  4675  0019D0  0E00               	movlw	low _dbuf
  4676  0019D2  25B2               	addwf	efgtoa@n& (0+255),w,b
  4677  0019D4  6E01               	movwf	strcpy@dest,c
  4678  0019D6  0E01               	movlw	high _dbuf
  4679  0019D8  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4680  0019DA  6E02               	movwf	strcpy@dest+1,c
  4681  0019DC  0E00               	movlw	low _dbuf
  4682  0019DE  25AA               	addwf	efgtoa@i& (0+255),w,b
  4683  0019E0  6E03               	movwf	strcpy@src,c
  4684  0019E2  0E01               	movlw	high _dbuf
  4685  0019E4  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4686  0019E6  6E04               	movwf	strcpy@src+1,c
  4687  0019E8  EC82  F01A         	call	_strcpy	;wreg free
  4688  0019EC  EFC7  F008         	goto	l3687
  4689  0019F0                     __end_of_efgtoa:
  4690                           	opt callstack 0
  4691                           
  4692 ;; *************** function _tolower *****************
  4693 ;; Defined at:
  4694 ;;		line 4 in file "D:\Microchip\pic\sources\c99\common\tolower.c"
  4695 ;; Parameters:    Size  Location     Type
  4696 ;;  c               2    6[COMRAM] int 
  4697 ;; Auto vars:     Size  Location     Type
  4698 ;;		None
  4699 ;; Return value:  Size  Location     Type
  4700 ;;                  2    6[COMRAM] int 
  4701 ;; Registers used:
  4702 ;;		wreg, status,2, status,0
  4703 ;; Tracked objects:
  4704 ;;		On entry : 0/0
  4705 ;;		On exit  : 0/0
  4706 ;;		Unchanged: 0/0
  4707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4708 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4709 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4710 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4711 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4712 ;;Total ram usage:        8 bytes
  4713 ;; Hardware stack levels used:    1
  4714 ;; Hardware stack levels required when called:    1
  4715 ;; This function calls:
  4716 ;;		_isupper
  4717 ;; This function is called by:
  4718 ;;		_efgtoa
  4719 ;;		_vfpfcnvrt
  4720 ;; This function uses a non-reentrant model
  4721 ;;
  4722                           
  4723                           	psect	text16
  4724  003646                     __ptext16:
  4725                           	opt callstack 0
  4726  003646                     _tolower:
  4727                           	opt callstack 26
  4728                           
  4729                           ;incstack = 0
  4730  003646  0EBF               	movlw	191
  4731  003648  6E09               	movwf	??_tolower& (0+255),c
  4732  00364A  0EFF               	movlw	255
  4733  00364C  6E0A               	movwf	(??_tolower+1)& (0+255),c
  4734  00364E  C007  F00B         	movff	tolower@c,??_tolower+2
  4735  003652  C008  F00C         	movff	tolower@c+1,??_tolower+3
  4736  003656  5009               	movf	??_tolower,w,c
  4737  003658  260B               	addwf	??_tolower+2,f,c
  4738  00365A  500A               	movf	??_tolower+1,w,c
  4739  00365C  220C               	addwfc	??_tolower+3,f,c
  4740  00365E  500C               	movf	??_tolower+3,w,c
  4741  003660  E106               	bnz	u3200
  4742  003662  0E1A               	movlw	26
  4743  003664  5C0B               	subwf	??_tolower+2,w,c
  4744  003666  B0D8               	btfsc	status,0,c
  4745  003668  D002               	goto	u3200
  4746  00366A  0E01               	movlw	1
  4747  00366C  D001               	goto	u3210
  4748  00366E                     u3200:
  4749  00366E  0E00               	movlw	0
  4750  003670                     u3210:
  4751  003670  6E0D               	movwf	_tolower$1272,c
  4752  003672  6A0E               	clrf	_tolower$1272+1,c
  4753  003674  500D               	movf	_tolower$1272,w,c
  4754  003676  100E               	iorwf	_tolower$1272+1,w,c
  4755  003678  B4D8               	btfsc	status,2,c
  4756  00367A  D006               	goto	l1189
  4757  00367C  0E20               	movlw	32
  4758  00367E  1007               	iorwf	tolower@c,w,c
  4759  003680  6E07               	movwf	?_tolower,c
  4760  003682  5008               	movf	tolower@c+1,w,c
  4761  003684  6E08               	movwf	?_tolower+1,c
  4762  003686  0012               	return	
  4763  003688                     l1189:
  4764  003688  C007  F007         	movff	tolower@c,?_tolower
  4765  00368C  C008  F008         	movff	tolower@c+1,?_tolower+1
  4766  003690  0012               	return		;funcret
  4767  003692                     __end_of_tolower:
  4768                           	opt callstack 0
  4769                           
  4770 ;; *************** function _isupper *****************
  4771 ;; Defined at:
  4772 ;;		line 5 in file "D:\Microchip\pic\sources\c99\common\isupper.c"
  4773 ;; Parameters:    Size  Location     Type
  4774 ;;  c               2    0[COMRAM] int 
  4775 ;; Auto vars:     Size  Location     Type
  4776 ;;		None
  4777 ;; Return value:  Size  Location     Type
  4778 ;;                  2    0[COMRAM] int 
  4779 ;; Registers used:
  4780 ;;		wreg, status,2, status,0
  4781 ;; Tracked objects:
  4782 ;;		On entry : 0/0
  4783 ;;		On exit  : 0/0
  4784 ;;		Unchanged: 0/0
  4785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4786 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4788 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4789 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4790 ;;Total ram usage:        6 bytes
  4791 ;; Hardware stack levels used:    1
  4792 ;; This function calls:
  4793 ;;		Nothing
  4794 ;; This function is called by:
  4795 ;;		_efgtoa
  4796 ;;		_vfpfcnvrt
  4797 ;;		_tolower
  4798 ;; This function uses a non-reentrant model
  4799 ;;
  4800                           
  4801                           	psect	text17
  4802  0037F8                     __ptext17:
  4803                           	opt callstack 0
  4804  0037F8                     _isupper:
  4805                           	opt callstack 26
  4806                           
  4807                           ;incstack = 0
  4808  0037F8  0EBF               	movlw	191
  4809  0037FA  6E03               	movwf	??_isupper& (0+255),c
  4810  0037FC  0EFF               	movlw	255
  4811  0037FE  6E04               	movwf	(??_isupper+1)& (0+255),c
  4812  003800  C001  F005         	movff	isupper@c,??_isupper+2
  4813  003804  C002  F006         	movff	isupper@c+1,??_isupper+3
  4814  003808  5003               	movf	??_isupper,w,c
  4815  00380A  2605               	addwf	??_isupper+2,f,c
  4816  00380C  5004               	movf	??_isupper+1,w,c
  4817  00380E  2206               	addwfc	??_isupper+3,f,c
  4818  003810  5006               	movf	??_isupper+3,w,c
  4819  003812  E106               	bnz	u2660
  4820  003814  0E1A               	movlw	26
  4821  003816  5C05               	subwf	??_isupper+2,w,c
  4822  003818  B0D8               	btfsc	status,0,c
  4823  00381A  D002               	goto	u2660
  4824  00381C  0E01               	movlw	1
  4825  00381E  D001               	goto	u2670
  4826  003820                     u2660:
  4827  003820  0E00               	movlw	0
  4828  003822                     u2670:
  4829  003822  6E01               	movwf	?_isupper,c
  4830  003824  6A02               	clrf	?_isupper+1,c
  4831  003826  0012               	return		;funcret
  4832  003828                     __end_of_isupper:
  4833                           	opt callstack 0
  4834                           
  4835 ;; *************** function _strcpy *****************
  4836 ;; Defined at:
  4837 ;;		line 7 in file "D:\Microchip\pic\sources\c99\common\strcpy.c"
  4838 ;; Parameters:    Size  Location     Type
  4839 ;;  dest            2    0[COMRAM] PTR unsigned char 
  4840 ;;		 -> dbuf(80), 
  4841 ;;  src             2    2[COMRAM] PTR const unsigned char 
  4842 ;;		 -> STR_14(4), STR_13(4), STR_10(4), STR_9(4), 
  4843 ;;		 -> dbuf(80), 
  4844 ;; Auto vars:     Size  Location     Type
  4845 ;;  d               2    8[COMRAM] PTR unsigned char 
  4846 ;;		 -> dbuf(80), 
  4847 ;;  s               2    6[COMRAM] PTR const unsigned char 
  4848 ;;		 -> STR_14(4), STR_13(4), STR_10(4), STR_9(4), 
  4849 ;;		 -> dbuf(80), 
  4850 ;; Return value:  Size  Location     Type
  4851 ;;                  2    0[COMRAM] PTR unsigned char 
  4852 ;; Registers used:
  4853 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4854 ;; Tracked objects:
  4855 ;;		On entry : 0/0
  4856 ;;		On exit  : 0/0
  4857 ;;		Unchanged: 0/0
  4858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4859 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4860 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4861 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4862 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4863 ;;Total ram usage:       10 bytes
  4864 ;; Hardware stack levels used:    1
  4865 ;; This function calls:
  4866 ;;		Nothing
  4867 ;; This function is called by:
  4868 ;;		_efgtoa
  4869 ;; This function uses a non-reentrant model
  4870 ;;
  4871                           
  4872                           	psect	text18
  4873  003504                     __ptext18:
  4874                           	opt callstack 0
  4875  003504                     _strcpy:
  4876                           	opt callstack 26
  4877                           
  4878                           ;incstack = 0
  4879  003504  C003  F007         	movff	strcpy@src,strcpy@s
  4880  003508  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  4881  00350C  C001  F009         	movff	strcpy@dest,strcpy@d
  4882  003510  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  4883  003514                     l3121:
  4884  003514  5007               	movf	strcpy@s,w,c
  4885  003516  6E05               	movwf	??_strcpy& (0+255),c
  4886  003518  5008               	movf	strcpy@s+1,w,c
  4887  00351A  6E06               	movwf	(??_strcpy+1)& (0+255),c
  4888  00351C  4A07               	infsnz	strcpy@s,f,c
  4889  00351E  2A08               	incf	strcpy@s+1,f,c
  4890  003520  C005  FFF6         	movff	??_strcpy,tblptrl
  4891  003524  C006  FFF7         	movff	??_strcpy+1,tblptrh
  4892  003528  0E00               	movlw	low (__smallconst shr (0+16))
  4893  00352A  6EF8               	movwf	tblptru,c
  4894  00352C  C009  FFD9         	movff	strcpy@d,fsr2l
  4895  003530  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  4896  003534  4A09               	infsnz	strcpy@d,f,c
  4897  003536  2A0A               	incf	strcpy@d+1,f,c
  4898  003538  0E0F               	movlw	(high __ramtop+-1)
  4899  00353A  64F7               	cpfsgt	tblptrh,c
  4900  00353C  D003               	bra	u3187
  4901  00353E  0008               	tblrd		*
  4902  003540  50F5               	movf	tablat,w,c
  4903  003542  D005               	bra	u3180
  4904  003544                     u3187:
  4905  003544  CFF6 FFE1          	movff	tblptrl,fsr1l
  4906  003548  CFF7 FFE2          	movff	tblptrh,fsr1h
  4907  00354C  50E7               	movf	indf1,w,c
  4908  00354E                     u3180:
  4909  00354E  6EDF               	movwf	indf2,c
  4910  003550  50DF               	movf	indf2,w,c
  4911  003552  B4D8               	btfsc	status,2,c
  4912  003554  0012               	return	
  4913  003556  D7DE               	goto	l3121
  4914  003558                     __end_of_strcpy:
  4915                           	opt callstack 0
  4916                           
  4917 ;; *************** function _pad *****************
  4918 ;; Defined at:
  4919 ;;		line 72 in file "D:\Microchip\pic\sources\c99\common\doprnt.c"
  4920 ;; Parameters:    Size  Location     Type
  4921 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  4922 ;;		 -> sprintf@f(6), 
  4923 ;;  buf             2   18[COMRAM] PTR unsigned char 
  4924 ;;		 -> dbuf(80), 
  4925 ;;  p               2   20[COMRAM] int 
  4926 ;; Auto vars:     Size  Location     Type
  4927 ;;  w               2   25[COMRAM] int 
  4928 ;;  i               2   23[COMRAM] int 
  4929 ;; Return value:  Size  Location     Type
  4930 ;;                  2   16[COMRAM] int 
  4931 ;; Registers used:
  4932 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4933 ;; Tracked objects:
  4934 ;;		On entry : 0/0
  4935 ;;		On exit  : 0/0
  4936 ;;		Unchanged: 0/0
  4937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4938 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4939 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4940 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4941 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4942 ;;Total ram usage:       11 bytes
  4943 ;; Hardware stack levels used:    1
  4944 ;; Hardware stack levels required when called:    3
  4945 ;; This function calls:
  4946 ;;		_fputc
  4947 ;;		_fputs
  4948 ;;		_strlen
  4949 ;; This function is called by:
  4950 ;;		_efgtoa
  4951 ;; This function uses a non-reentrant model
  4952 ;;
  4953                           
  4954                           	psect	text19
  4955  00309E                     __ptext19:
  4956                           	opt callstack 0
  4957  00309E                     _pad:
  4958                           	opt callstack 23
  4959                           
  4960                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 72: static int pad(FILE *fp, char *buf, i
      +                          nt p);D:\Microchip\pic\sources\c99\common\doprnt.c: 73: {;D:\Microchip\pic\sources\c99\c
      +                          ommon\doprnt.c: 74:     int i, w;;D:\Microchip\pic\sources\c99\common\doprnt.c: 77:     
      +                          if (flags & (1 << 0)) {
  4961                           
  4962                           ;incstack = 0
  4963  00309E  A07E               	btfss	_flags,0,c
  4964  0030A0  D00A               	goto	l3079
  4965                           
  4966                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 78:         fputs((const char *)buf, fp);
  4967  0030A2  C013  F00A         	movff	pad@buf,fputs@s
  4968  0030A6  C014  F00B         	movff	pad@buf+1,fputs@s+1
  4969  0030AA  C011  F00C         	movff	pad@fp,fputs@fp
  4970  0030AE  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  4971  0030B2  ECC7  F01B         	call	_fputs	;wreg free
  4972  0030B6                     l3079:
  4973                           
  4974                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 82:     w = (p < 0) ? 0 : p;
  4975  0030B6  BE16               	btfsc	pad@p+1,7,c
  4976  0030B8  D005               	goto	l3083
  4977  0030BA  C015  F01A         	movff	pad@p,pad@w
  4978  0030BE  C016  F01B         	movff	pad@p+1,pad@w+1
  4979  0030C2  D004               	goto	l247
  4980  0030C4                     l3083:
  4981  0030C4  0E00               	movlw	0
  4982  0030C6  6E1B               	movwf	pad@w+1,c
  4983  0030C8  0E00               	movlw	0
  4984  0030CA  6E1A               	movwf	pad@w,c
  4985  0030CC                     l247:
  4986                           
  4987                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  4988  0030CC  0E00               	movlw	0
  4989  0030CE  6E19               	movwf	pad@i+1,c
  4990  0030D0  0E00               	movlw	0
  4991  0030D2  6E18               	movwf	pad@i,c
  4992                           
  4993                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 84:     while (i < w) {
  4994  0030D4  D00C               	goto	l3089
  4995  0030D6                     l3085:
  4996                           
  4997                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 85:         fputc(' ', fp);
  4998  0030D6  0E00               	movlw	0
  4999  0030D8  6E02               	movwf	fputc@c+1,c
  5000  0030DA  0E20               	movlw	32
  5001  0030DC  6E01               	movwf	fputc@c,c
  5002  0030DE  C011  F003         	movff	pad@fp,fputc@fp
  5003  0030E2  C012  F004         	movff	pad@fp+1,fputc@fp+1
  5004  0030E6  ECFF  F017         	call	_fputc	;wreg free
  5005                           
  5006                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 86:         ++i;
  5007  0030EA  4A18               	infsnz	pad@i,f,c
  5008  0030EC  2A19               	incf	pad@i+1,f,c
  5009  0030EE                     l3089:
  5010                           
  5011                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 84:     while (i < w) {
  5012  0030EE  501A               	movf	pad@w,w,c
  5013  0030F0  5C18               	subwf	pad@i,w,c
  5014  0030F2  5019               	movf	pad@i+1,w,c
  5015  0030F4  0A80               	xorlw	128
  5016  0030F6  6E17               	movwf	??_pad& (0+255),c
  5017  0030F8  501B               	movf	pad@w+1,w,c
  5018  0030FA  0A80               	xorlw	128
  5019  0030FC  5817               	subwfb	??_pad& (0+255),w,c
  5020  0030FE  A0D8               	btfss	status,0,c
  5021  003100  D7EA               	goto	l3085
  5022                           
  5023                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 90:     if (!(flags & (1 << 0))) {
  5024  003102  B07E               	btfsc	_flags,0,c
  5025  003104  D00A               	goto	l3093
  5026                           
  5027                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 91:         fputs((const char *)buf, fp);
  5028  003106  C013  F00A         	movff	pad@buf,fputs@s
  5029  00310A  C014  F00B         	movff	pad@buf+1,fputs@s+1
  5030  00310E  C011  F00C         	movff	pad@fp,fputs@fp
  5031  003112  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  5032  003116  ECC7  F01B         	call	_fputs	;wreg free
  5033  00311A                     l3093:
  5034                           
  5035                           ;D:\Microchip\pic\sources\c99\common\doprnt.c: 94:     return strlen(buf) + w;
  5036  00311A  C013  F001         	movff	pad@buf,strlen@s
  5037  00311E  C014  F002         	movff	pad@buf+1,strlen@s+1
  5038  003122  EC5A  F01C         	call	_strlen	;wreg free
  5039  003126  501A               	movf	pad@w,w,c
  5040  003128  2401               	addwf	?_strlen,w,c
  5041  00312A  6E11               	movwf	?_pad,c
  5042  00312C  501B               	movf	pad@w+1,w,c
  5043  00312E  2002               	addwfc	?_strlen+1,w,c
  5044  003130  6E12               	movwf	?_pad+1,c
  5045  003132  0012               	return		;funcret
  5046  003134                     __end_of_pad:
  5047                           	opt callstack 0
  5048                           
  5049 ;; *************** function _strlen *****************
  5050 ;; Defined at:
  5051 ;;		line 12 in file "D:\Microchip\pic\sources\c99\common\strlen.c"
  5052 ;; Parameters:    Size  Location     Type
  5053 ;;  s               2    0[COMRAM] PTR const unsigned char 
  5054 ;;		 -> dbuf(80), 
  5055 ;; Auto vars:     Size  Location     Type
  5056 ;;  a               2    2[COMRAM] PTR const unsigned char 
  5057 ;;		 -> dbuf(80), 
  5058 ;; Return value:  Size  Location     Type
  5059 ;;                  2    0[COMRAM] unsigned int 
  5060 ;; Registers used:
  5061 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5062 ;; Tracked objects:
  5063 ;;		On entry : 0/0
  5064 ;;		On exit  : 0/0
  5065 ;;		Unchanged: 0/0
  5066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5067 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5068 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5070 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5071 ;;Total ram usage:        4 bytes
  5072 ;; Hardware stack levels used:    1
  5073 ;; This function calls:
  5074 ;;		Nothing
  5075 ;; This function is called by:
  5076 ;;		_pad
  5077 ;; This function uses a non-reentrant model
  5078 ;;
  5079                           
  5080                           	psect	text20
  5081  0038B4                     __ptext20:
  5082                           	opt callstack 0
  5083  0038B4                     _strlen:
  5084                           	opt callstack 25
  5085                           
  5086                           ;incstack = 0
  5087  0038B4  C001  F003         	movff	strlen@s,strlen@a
  5088  0038B8  C002  F004         	movff	strlen@s+1,strlen@a+1
  5089  0038BC  D002               	goto	l2853
  5090  0038BE                     l2851:
  5091  0038BE  4A01               	infsnz	strlen@s,f,c
  5092  0038C0  2A02               	incf	strlen@s+1,f,c
  5093  0038C2                     l2853:
  5094  0038C2  C001  FFD9         	movff	strlen@s,fsr2l
  5095  0038C6  C002  FFDA         	movff	strlen@s+1,fsr2h
  5096  0038CA  50DF               	movf	indf2,w,c
  5097  0038CC  A4D8               	btfss	status,2,c
  5098  0038CE  D7F7               	goto	l2851
  5099  0038D0  5003               	movf	strlen@a,w,c
  5100  0038D2  5C01               	subwf	strlen@s,w,c
  5101  0038D4  6E01               	movwf	?_strlen,c
  5102  0038D6  5004               	movf	strlen@a+1,w,c
  5103  0038D8  5802               	subwfb	strlen@s+1,w,c
  5104  0038DA  6E02               	movwf	?_strlen+1,c
  5105  0038DC  0012               	return		;funcret
  5106  0038DE                     __end_of_strlen:
  5107                           	opt callstack 0
  5108                           
  5109 ;; *************** function _fputs *****************
  5110 ;; Defined at:
  5111 ;;		line 8 in file "D:\Microchip\pic\sources\c99\common\nf_fputs.c"
  5112 ;; Parameters:    Size  Location     Type
  5113 ;;  s               2    9[COMRAM] PTR const unsigned char 
  5114 ;;		 -> dbuf(80), 
  5115 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  5116 ;;		 -> sprintf@f(6), 
  5117 ;; Auto vars:     Size  Location     Type
  5118 ;;  i               2   14[COMRAM] int 
  5119 ;;  c               1   13[COMRAM] unsigned char 
  5120 ;; Return value:  Size  Location     Type
  5121 ;;                  2    9[COMRAM] int 
  5122 ;; Registers used:
  5123 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5124 ;; Tracked objects:
  5125 ;;		On entry : 0/0
  5126 ;;		On exit  : 0/0
  5127 ;;		Unchanged: 0/0
  5128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5129 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5130 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5132 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5133 ;;Total ram usage:        7 bytes
  5134 ;; Hardware stack levels used:    1
  5135 ;; Hardware stack levels required when called:    2
  5136 ;; This function calls:
  5137 ;;		_fputc
  5138 ;; This function is called by:
  5139 ;;		_pad
  5140 ;; This function uses a non-reentrant model
  5141 ;;
  5142                           
  5143                           	psect	text21
  5144  00378E                     __ptext21:
  5145                           	opt callstack 0
  5146  00378E                     _fputs:
  5147                           	opt callstack 23
  5148                           
  5149                           ;incstack = 0
  5150  00378E  0E00               	movlw	0
  5151  003790  6E10               	movwf	fputs@i+1,c
  5152  003792  0E00               	movlw	0
  5153  003794  6E0F               	movwf	fputs@i,c
  5154  003796  D00B               	goto	l2847
  5155  003798                     l2843:
  5156  003798  C00E  F001         	movff	fputs@c,fputc@c
  5157  00379C  6A02               	clrf	fputc@c+1,c
  5158  00379E  C00C  F003         	movff	fputs@fp,fputc@fp
  5159  0037A2  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  5160  0037A6  ECFF  F017         	call	_fputc	;wreg free
  5161  0037AA  4A0F               	infsnz	fputs@i,f,c
  5162  0037AC  2A10               	incf	fputs@i+1,f,c
  5163  0037AE                     l2847:
  5164  0037AE  500F               	movf	fputs@i,w,c
  5165  0037B0  240A               	addwf	fputs@s,w,c
  5166  0037B2  6ED9               	movwf	fsr2l,c
  5167  0037B4  5010               	movf	fputs@i+1,w,c
  5168  0037B6  200B               	addwfc	fputs@s+1,w,c
  5169  0037B8  6EDA               	movwf	fsr2h,c
  5170  0037BA  50DF               	movf	indf2,w,c
  5171  0037BC  6E0E               	movwf	fputs@c,c
  5172  0037BE  500E               	movf	fputs@c,w,c
  5173  0037C0  B4D8               	btfsc	status,2,c
  5174  0037C2  0012               	return	
  5175  0037C4  D7E9               	goto	l2843
  5176  0037C6                     __end_of_fputs:
  5177                           	opt callstack 0
  5178                           
  5179 ;; *************** function _fputc *****************
  5180 ;; Defined at:
  5181 ;;		line 8 in file "D:\Microchip\pic\sources\c99\common\nf_fputc.c"
  5182 ;; Parameters:    Size  Location     Type
  5183 ;;  c               2    0[COMRAM] int 
  5184 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  5185 ;;		 -> sprintf@f(6), 
  5186 ;; Auto vars:     Size  Location     Type
  5187 ;;		None
  5188 ;; Return value:  Size  Location     Type
  5189 ;;                  2    0[COMRAM] int 
  5190 ;; Registers used:
  5191 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5192 ;; Tracked objects:
  5193 ;;		On entry : 0/0
  5194 ;;		On exit  : 0/0
  5195 ;;		Unchanged: 0/0
  5196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5197 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5199 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5200 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5201 ;;Total ram usage:        9 bytes
  5202 ;; Hardware stack levels used:    1
  5203 ;; Hardware stack levels required when called:    1
  5204 ;; This function calls:
  5205 ;;		_putch
  5206 ;; This function is called by:
  5207 ;;		_pad
  5208 ;;		_vfpfcnvrt
  5209 ;;		_fputs
  5210 ;; This function uses a non-reentrant model
  5211 ;;
  5212                           
  5213                           	psect	text22
  5214  002FFE                     __ptext22:
  5215                           	opt callstack 0
  5216  002FFE                     _fputc:
  5217                           	opt callstack 26
  5218                           
  5219                           ;incstack = 0
  5220  002FFE  5003               	movf	fputc@fp,w,c
  5221  003000  1004               	iorwf	fputc@fp+1,w,c
  5222  003002  B4D8               	btfsc	status,2,c
  5223  003004  D004               	goto	u2600
  5224  003006  5003               	movf	fputc@fp,w,c
  5225  003008  1004               	iorwf	fputc@fp+1,w,c
  5226  00300A  A4D8               	btfss	status,2,c
  5227  00300C  D004               	goto	l2827
  5228  00300E                     u2600:
  5229  00300E  5001               	movf	fputc@c,w,c
  5230  003010  ECD8  F01C         	call	_putch
  5231  003014  0012               	return	
  5232  003016                     l2827:
  5233  003016  EE20 F004          	lfsr	2,4
  5234  00301A  5003               	movf	fputc@fp,w,c
  5235  00301C  26D9               	addwf	fsr2l,f,c
  5236  00301E  5004               	movf	fputc@fp+1,w,c
  5237  003020  22DA               	addwfc	fsr2h,f,c
  5238  003022  50DE               	movf	postinc2,w,c
  5239  003024  10DE               	iorwf	postinc2,w,c
  5240  003026  B4D8               	btfsc	status,2,c
  5241  003028  D016               	goto	u2620
  5242  00302A  EE20 F004          	lfsr	2,4
  5243  00302E  5003               	movf	fputc@fp,w,c
  5244  003030  26D9               	addwf	fsr2l,f,c
  5245  003032  5004               	movf	fputc@fp+1,w,c
  5246  003034  22DA               	addwfc	fsr2h,f,c
  5247  003036  EE10 F002          	lfsr	1,2
  5248  00303A  5003               	movf	fputc@fp,w,c
  5249  00303C  26E1               	addwf	fsr1l,f,c
  5250  00303E  5004               	movf	fputc@fp+1,w,c
  5251  003040  22E2               	addwfc	fsr1h,f,c
  5252  003042  50DE               	movf	postinc2,w,c
  5253  003044  5CE6               	subwf	postinc1,w,c
  5254  003046  50E6               	movf	postinc1,w,c
  5255  003048  0A80               	xorlw	128
  5256  00304A  6E09               	movwf	(??_fputc+4)& (0+255),c
  5257  00304C  50DE               	movf	postinc2,w,c
  5258  00304E  0A80               	xorlw	128
  5259  003050  5809               	subwfb	(??_fputc+4)& (0+255),w,c
  5260  003052  B0D8               	btfsc	status,0,c
  5261  003054  0012               	return	
  5262  003056                     u2620:
  5263  003056  EE20 F002          	lfsr	2,2
  5264  00305A  5003               	movf	fputc@fp,w,c
  5265  00305C  26D9               	addwf	fsr2l,f,c
  5266  00305E  5004               	movf	fputc@fp+1,w,c
  5267  003060  22DA               	addwfc	fsr2h,f,c
  5268  003062  CFDE F005          	movff	postinc2,??_fputc
  5269  003066  CFDD F006          	movff	postdec2,??_fputc+1
  5270  00306A  C003  FFD9         	movff	fputc@fp,fsr2l
  5271  00306E  C004  FFDA         	movff	fputc@fp+1,fsr2h
  5272  003072  CFDE F007          	movff	postinc2,??_fputc+2
  5273  003076  CFDD F008          	movff	postdec2,??_fputc+3
  5274  00307A  5005               	movf	??_fputc,w,c
  5275  00307C  2407               	addwf	??_fputc+2,w,c
  5276  00307E  6ED9               	movwf	fsr2l,c
  5277  003080  5006               	movf	??_fputc+1,w,c
  5278  003082  2008               	addwfc	??_fputc+3,w,c
  5279  003084  6EDA               	movwf	fsr2h,c
  5280  003086  C001  FFDF         	movff	fputc@c,indf2
  5281  00308A  EE20 F002          	lfsr	2,2
  5282  00308E  5003               	movf	fputc@fp,w,c
  5283  003090  26D9               	addwf	fsr2l,f,c
  5284  003092  5004               	movf	fputc@fp+1,w,c
  5285  003094  22DA               	addwfc	fsr2h,f,c
  5286  003096  2ADE               	incf	postinc2,f,c
  5287  003098  0E00               	movlw	0
  5288  00309A  22DD               	addwfc	postdec2,f,c
  5289  00309C  0012               	return		;funcret
  5290  00309E                     __end_of_fputc:
  5291                           	opt callstack 0
  5292                           
  5293 ;; *************** function _putch *****************
  5294 ;; Defined at:
  5295 ;;		line 7 in file "D:\Microchip\pic\sources\c99\common\putch.c"
  5296 ;; Parameters:    Size  Location     Type
  5297 ;;  c               1    wreg     unsigned char 
  5298 ;; Auto vars:     Size  Location     Type
  5299 ;;  c               1    0[COMRAM] unsigned char 
  5300 ;; Return value:  Size  Location     Type
  5301 ;;                  1    wreg      void 
  5302 ;; Registers used:
  5303 ;;		wreg
  5304 ;; Tracked objects:
  5305 ;;		On entry : 0/0
  5306 ;;		On exit  : 0/0
  5307 ;;		Unchanged: 0/0
  5308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5313 ;;Total ram usage:        0 bytes
  5314 ;; Hardware stack levels used:    1
  5315 ;; This function calls:
  5316 ;;		Nothing
  5317 ;; This function is called by:
  5318 ;;		_fputc
  5319 ;; This function uses a non-reentrant model
  5320 ;;
  5321                           
  5322                           	psect	text23
  5323  0039B0                     __ptext23:
  5324                           	opt callstack 0
  5325  0039B0                     _putch:
  5326                           	opt callstack 26
  5327                           
  5328                           ;incstack = 0
  5329  0039B0  0012               	return		;funcret
  5330  0039B2                     __end_of_putch:
  5331                           	opt callstack 0
  5332                           
  5333 ;; *************** function _floorf *****************
  5334 ;; Defined at:
  5335 ;;		line 3 in file "D:\Microchip\pic\sources\c99\common\floorf.c"
  5336 ;; Parameters:    Size  Location     Type
  5337 ;;  x               4   45[COMRAM] float 
  5338 ;; Auto vars:     Size  Location     Type
  5339 ;;  u               4   61[COMRAM] struct .
  5340 ;;  m               4   55[COMRAM] unsigned long 
  5341 ;;  e               2   59[COMRAM] int 
  5342 ;; Return value:  Size  Location     Type
  5343 ;;                  4   45[COMRAM] float 
  5344 ;; Registers used:
  5345 ;;		wreg, status,2, status,0
  5346 ;; Tracked objects:
  5347 ;;		On entry : 0/0
  5348 ;;		On exit  : 0/0
  5349 ;;		Unchanged: 0/0
  5350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5351 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5352 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5353 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5354 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5355 ;;Total ram usage:       20 bytes
  5356 ;; Hardware stack levels used:    1
  5357 ;; This function calls:
  5358 ;;		Nothing
  5359 ;; This function is called by:
  5360 ;;		_efgtoa
  5361 ;; This function uses a non-reentrant model
  5362 ;;
  5363                           
  5364                           	psect	text24
  5365  002758                     __ptext24:
  5366                           	opt callstack 0
  5367  002758                     _floorf:
  5368                           	opt callstack 26
  5369                           
  5370                           ;incstack = 0
  5371  002758  C0D8  F03E         	movff	floorf@F524,floorf@u
  5372  00275C  C0D9  F03F         	movff	floorf@F524+1,floorf@u+1
  5373  002760  C0DA  F040         	movff	floorf@F524+2,floorf@u+2
  5374  002764  C0DB  F041         	movff	floorf@F524+3,floorf@u+3
  5375  002768  C02E  F03E         	movff	floorf@x,floorf@u
  5376  00276C  C02F  F03F         	movff	floorf@x+1,floorf@u+1
  5377  002770  C030  F040         	movff	floorf@x+2,floorf@u+2
  5378  002774  C031  F041         	movff	floorf@x+3,floorf@u+3
  5379  002778  0E81               	movlw	129
  5380  00277A  6E32               	movwf	??_floorf& (0+255),c
  5381  00277C  0EFF               	movlw	255
  5382  00277E  6E33               	movwf	(??_floorf+1)& (0+255),c
  5383  002780  C03E  F034         	movff	floorf@u,??_floorf+2
  5384  002784  C03F  F035         	movff	floorf@u+1,??_floorf+3
  5385  002788  C040  F036         	movff	floorf@u+2,??_floorf+4
  5386  00278C  C041  F037         	movff	floorf@u+3,??_floorf+5
  5387  002790  0E18               	movlw	24
  5388  002792  D005               	goto	u3230
  5389  002794                     u3235:
  5390  002794  90D8               	bcf	status,0,c
  5391  002796  3237               	rrcf	??_floorf+5,f,c
  5392  002798  3236               	rrcf	??_floorf+4,f,c
  5393  00279A  3235               	rrcf	??_floorf+3,f,c
  5394  00279C  3234               	rrcf	??_floorf+2,f,c
  5395  00279E                     u3230:
  5396  00279E  2EE8               	decfsz	wreg,f,c
  5397  0027A0  D7F9               	goto	u3235
  5398  0027A2  5034               	movf	??_floorf+2,w,c
  5399  0027A4  2432               	addwf	??_floorf,w,c
  5400  0027A6  6E3C               	movwf	floorf@e,c
  5401  0027A8  0E00               	movlw	0
  5402  0027AA  2033               	addwfc	??_floorf+1,w,c
  5403  0027AC  6E3D               	movwf	floorf@e+1,c
  5404  0027AE  BE3D               	btfsc	floorf@e+1,7,c
  5405  0027B0  D00F               	goto	l3139
  5406  0027B2  503D               	movf	floorf@e+1,w,c
  5407  0027B4  E104               	bnz	u3240
  5408  0027B6  0E17               	movlw	23
  5409  0027B8  5C3C               	subwf	floorf@e,w,c
  5410  0027BA  A0D8               	btfss	status,0,c
  5411  0027BC  D009               	goto	l3139
  5412  0027BE                     u3240:
  5413  0027BE  C02E  F02E         	movff	floorf@x,?_floorf
  5414  0027C2  C02F  F02F         	movff	floorf@x+1,?_floorf+1
  5415  0027C6  C030  F030         	movff	floorf@x+2,?_floorf+2
  5416  0027CA  C031  F031         	movff	floorf@x+3,?_floorf+3
  5417  0027CE  0012               	return	
  5418  0027D0                     l3139:
  5419  0027D0  BE3D               	btfsc	floorf@e+1,7,c
  5420  0027D2  D05E               	goto	l3149
  5421  0027D4  C03C  F032         	movff	floorf@e,??_floorf
  5422  0027D8  0EFF               	movlw	255
  5423  0027DA  6E33               	movwf	(??_floorf+1)& (0+255),c
  5424  0027DC  0EFF               	movlw	255
  5425  0027DE  6E34               	movwf	(??_floorf+2)& (0+255),c
  5426  0027E0  0E7F               	movlw	127
  5427  0027E2  6E35               	movwf	(??_floorf+3)& (0+255),c
  5428  0027E4  0E00               	movlw	0
  5429  0027E6  6E36               	movwf	(??_floorf+4)& (0+255),c
  5430  0027E8                     u3265:
  5431  0027E8  6632               	tstfsz	??_floorf,c
  5432  0027EA  D001               	goto	u3266
  5433  0027EC  D007               	goto	u3267
  5434  0027EE                     u3266:
  5435  0027EE  3436               	rlcf	??_floorf+4,w,c
  5436  0027F0  3236               	rrcf	??_floorf+4,f,c
  5437  0027F2  3235               	rrcf	??_floorf+3,f,c
  5438  0027F4  3234               	rrcf	??_floorf+2,f,c
  5439  0027F6  3233               	rrcf	??_floorf+1,f,c
  5440  0027F8  2E32               	decfsz	??_floorf,f,c
  5441  0027FA  D7F6               	goto	u3265
  5442  0027FC                     u3267:
  5443  0027FC  C033  F038         	movff	??_floorf+1,floorf@m
  5444  002800  C034  F039         	movff	??_floorf+2,floorf@m+1
  5445  002804  C035  F03A         	movff	??_floorf+3,floorf@m+2
  5446  002808  C036  F03B         	movff	??_floorf+4,floorf@m+3
  5447  00280C  5038               	movf	floorf@m,w,c
  5448  00280E  143E               	andwf	floorf@u,w,c
  5449  002810  6E32               	movwf	??_floorf& (0+255),c
  5450  002812  5039               	movf	floorf@m+1,w,c
  5451  002814  143F               	andwf	floorf@u+1,w,c
  5452  002816  6E33               	movwf	(??_floorf+1)& (0+255),c
  5453  002818  503A               	movf	floorf@m+2,w,c
  5454  00281A  1440               	andwf	floorf@u+2,w,c
  5455  00281C  6E34               	movwf	(??_floorf+2)& (0+255),c
  5456  00281E  503B               	movf	floorf@m+3,w,c
  5457  002820  1441               	andwf	floorf@u+3,w,c
  5458  002822  6E35               	movwf	(??_floorf+3)& (0+255),c
  5459  002824  5032               	movf	??_floorf,w,c
  5460  002826  1033               	iorwf	??_floorf+1,w,c
  5461  002828  1034               	iorwf	??_floorf+2,w,c
  5462  00282A  1035               	iorwf	??_floorf+3,w,c
  5463  00282C  B4D8               	btfsc	status,2,c
  5464  00282E  D7C7               	goto	u3240
  5465  002830  C03E  F032         	movff	floorf@u,??_floorf
  5466  002834  C03F  F033         	movff	floorf@u+1,??_floorf+1
  5467  002838  C040  F034         	movff	floorf@u+2,??_floorf+2
  5468  00283C  C041  F035         	movff	floorf@u+3,??_floorf+3
  5469  002840  0E20               	movlw	32
  5470  002842  D005               	goto	u3280
  5471  002844                     u3285:
  5472  002844  90D8               	bcf	status,0,c
  5473  002846  3235               	rrcf	??_floorf+3,f,c
  5474  002848  3234               	rrcf	??_floorf+2,f,c
  5475  00284A  3233               	rrcf	??_floorf+1,f,c
  5476  00284C  3232               	rrcf	??_floorf,f,c
  5477  00284E                     u3280:
  5478  00284E  2EE8               	decfsz	wreg,f,c
  5479  002850  D7F9               	goto	u3285
  5480  002852  5032               	movf	??_floorf,w,c
  5481  002854  1033               	iorwf	??_floorf+1,w,c
  5482  002856  1034               	iorwf	??_floorf+2,w,c
  5483  002858  1035               	iorwf	??_floorf+3,w,c
  5484  00285A  B4D8               	btfsc	status,2,c
  5485  00285C  D008               	goto	l1109
  5486  00285E  5038               	movf	floorf@m,w,c
  5487  002860  263E               	addwf	floorf@u,f,c
  5488  002862  5039               	movf	floorf@m+1,w,c
  5489  002864  223F               	addwfc	floorf@u+1,f,c
  5490  002866  503A               	movf	floorf@m+2,w,c
  5491  002868  2240               	addwfc	floorf@u+2,f,c
  5492  00286A  503B               	movf	floorf@m+3,w,c
  5493  00286C  2241               	addwfc	floorf@u+3,f,c
  5494  00286E                     l1109:
  5495  00286E  1C38               	comf	floorf@m,w,c
  5496  002870  6E32               	movwf	??_floorf& (0+255),c
  5497  002872  1C39               	comf	floorf@m+1,w,c
  5498  002874  6E33               	movwf	(??_floorf+1)& (0+255),c
  5499  002876  1C3A               	comf	floorf@m+2,w,c
  5500  002878  6E34               	movwf	(??_floorf+2)& (0+255),c
  5501  00287A  1C3B               	comf	floorf@m+3,w,c
  5502  00287C  6E35               	movwf	(??_floorf+3)& (0+255),c
  5503  00287E  5032               	movf	??_floorf,w,c
  5504  002880  163E               	andwf	floorf@u,f,c
  5505  002882  5033               	movf	??_floorf+1,w,c
  5506  002884  163F               	andwf	floorf@u+1,f,c
  5507  002886  5034               	movf	??_floorf+2,w,c
  5508  002888  1640               	andwf	floorf@u+2,f,c
  5509  00288A  5035               	movf	??_floorf+3,w,c
  5510  00288C  1641               	andwf	floorf@u+3,f,c
  5511  00288E  D036               	goto	l3157
  5512  002890                     l3149:
  5513  002890  C03E  F032         	movff	floorf@u,??_floorf
  5514  002894  C03F  F033         	movff	floorf@u+1,??_floorf+1
  5515  002898  C040  F034         	movff	floorf@u+2,??_floorf+2
  5516  00289C  C041  F035         	movff	floorf@u+3,??_floorf+3
  5517  0028A0  0E20               	movlw	32
  5518  0028A2  D005               	goto	u3300
  5519  0028A4                     u3305:
  5520  0028A4  90D8               	bcf	status,0,c
  5521  0028A6  3235               	rrcf	??_floorf+3,f,c
  5522  0028A8  3234               	rrcf	??_floorf+2,f,c
  5523  0028AA  3233               	rrcf	??_floorf+1,f,c
  5524  0028AC  3232               	rrcf	??_floorf,f,c
  5525  0028AE                     u3300:
  5526  0028AE  2EE8               	decfsz	wreg,f,c
  5527  0028B0  D7F9               	goto	u3305
  5528  0028B2  5032               	movf	??_floorf,w,c
  5529  0028B4  1033               	iorwf	??_floorf+1,w,c
  5530  0028B6  1034               	iorwf	??_floorf+2,w,c
  5531  0028B8  1035               	iorwf	??_floorf+3,w,c
  5532  0028BA  A4D8               	btfss	status,2,c
  5533  0028BC  D008               	goto	l3153
  5534  0028BE  0E00               	movlw	0
  5535  0028C0  6E3E               	movwf	floorf@u,c
  5536  0028C2  0E00               	movlw	0
  5537  0028C4  6E3F               	movwf	floorf@u+1,c
  5538  0028C6  0E00               	movlw	0
  5539  0028C8  6E40               	movwf	floorf@u+2,c
  5540  0028CA  0E00               	movlw	0
  5541  0028CC  D016               	goto	L6
  5542  0028CE                     l3153:
  5543  0028CE  90D8               	bcf	status,0,c
  5544  0028D0  343E               	rlcf	floorf@u,w,c
  5545  0028D2  6E32               	movwf	??_floorf& (0+255),c
  5546  0028D4  343F               	rlcf	floorf@u+1,w,c
  5547  0028D6  6E33               	movwf	(??_floorf+1)& (0+255),c
  5548  0028D8  3440               	rlcf	floorf@u+2,w,c
  5549  0028DA  6E34               	movwf	(??_floorf+2)& (0+255),c
  5550  0028DC  3441               	rlcf	floorf@u+3,w,c
  5551  0028DE  6E35               	movwf	(??_floorf+3)& (0+255),c
  5552  0028E0  5032               	movf	??_floorf,w,c
  5553  0028E2  1033               	iorwf	??_floorf+1,w,c
  5554  0028E4  1034               	iorwf	??_floorf+2,w,c
  5555  0028E6  1035               	iorwf	??_floorf+3,w,c
  5556  0028E8  B4D8               	btfsc	status,2,c
  5557  0028EA  D008               	goto	l3157
  5558  0028EC  0E00               	movlw	0
  5559  0028EE  6E3E               	movwf	floorf@u,c
  5560  0028F0  0E00               	movlw	0
  5561  0028F2  6E3F               	movwf	floorf@u+1,c
  5562  0028F4  0E80               	movlw	128
  5563  0028F6  6E40               	movwf	floorf@u+2,c
  5564  0028F8  0EBF               	movlw	191
  5565  0028FA                     L6:
  5566  0028FA  6E41               	movwf	floorf@u+3,c
  5567  0028FC                     l3157:
  5568  0028FC  C03E  F02E         	movff	floorf@u,?_floorf
  5569  002900  C03F  F02F         	movff	floorf@u+1,?_floorf+1
  5570  002904  C040  F030         	movff	floorf@u+2,?_floorf+2
  5571  002908  C041  F031         	movff	floorf@u+3,?_floorf+3
  5572  00290C  0012               	return		;funcret
  5573  00290E                     __end_of_floorf:
  5574                           	opt callstack 0
  5575                           
  5576 ;; *************** function ___fpclassifyf *****************
  5577 ;; Defined at:
  5578 ;;		line 4 in file "D:\Microchip\pic\sources\c99\common\__fpclassifyf.c"
  5579 ;; Parameters:    Size  Location     Type
  5580 ;;  x               4    0[COMRAM] float 
  5581 ;; Auto vars:     Size  Location     Type
  5582 ;;  u               4   10[COMRAM] struct .
  5583 ;;  e               2    8[COMRAM] int 
  5584 ;; Return value:  Size  Location     Type
  5585 ;;                  2    0[COMRAM] int 
  5586 ;; Registers used:
  5587 ;;		wreg, status,2, status,0
  5588 ;; Tracked objects:
  5589 ;;		On entry : 0/0
  5590 ;;		On exit  : 0/0
  5591 ;;		Unchanged: 0/0
  5592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5593 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5594 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5595 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5596 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5597 ;;Total ram usage:       14 bytes
  5598 ;; Hardware stack levels used:    1
  5599 ;; This function calls:
  5600 ;;		Nothing
  5601 ;; This function is called by:
  5602 ;;		_efgtoa
  5603 ;; This function uses a non-reentrant model
  5604 ;;
  5605                           
  5606                           	psect	text25
  5607  002DD6                     __ptext25:
  5608                           	opt callstack 0
  5609  002DD6                     ___fpclassifyf:
  5610                           	opt callstack 26
  5611                           
  5612                           ;incstack = 0
  5613  002DD6  C0DC  F00B         	movff	___fpclassifyf@F463,___fpclassifyf@u
  5614  002DDA  C0DD  F00C         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  5615  002DDE  C0DE  F00D         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  5616  002DE2  C0DF  F00E         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  5617  002DE6  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  5618  002DEA  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5619  002DEE  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5620  002DF2  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5621  002DF6  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5622  002DFA  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5623  002DFE  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5624  002E02  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5625  002E06  0E18               	movlw	24
  5626  002E08  D005               	goto	u3110
  5627  002E0A                     u3115:
  5628  002E0A  90D8               	bcf	status,0,c
  5629  002E0C  3208               	rrcf	??___fpclassifyf+3,f,c
  5630  002E0E  3207               	rrcf	??___fpclassifyf+2,f,c
  5631  002E10  3206               	rrcf	??___fpclassifyf+1,f,c
  5632  002E12  3205               	rrcf	??___fpclassifyf,f,c
  5633  002E14                     u3110:
  5634  002E14  2EE8               	decfsz	wreg,f,c
  5635  002E16  D7F9               	goto	u3115
  5636  002E18  5005               	movf	??___fpclassifyf,w,c
  5637  002E1A  6E09               	movwf	___fpclassifyf@e,c
  5638  002E1C  6A0A               	clrf	___fpclassifyf@e+1,c
  5639  002E1E  5009               	movf	___fpclassifyf@e,w,c
  5640  002E20  100A               	iorwf	___fpclassifyf@e+1,w,c
  5641  002E22  A4D8               	btfss	status,2,c
  5642  002E24  D019               	goto	l3109
  5643  002E26  90D8               	bcf	status,0,c
  5644  002E28  340B               	rlcf	___fpclassifyf@u,w,c
  5645  002E2A  6E05               	movwf	??___fpclassifyf& (0+255),c
  5646  002E2C  340C               	rlcf	___fpclassifyf@u+1,w,c
  5647  002E2E  6E06               	movwf	(??___fpclassifyf+1)& (0+255),c
  5648  002E30  340D               	rlcf	___fpclassifyf@u+2,w,c
  5649  002E32  6E07               	movwf	(??___fpclassifyf+2)& (0+255),c
  5650  002E34  340E               	rlcf	___fpclassifyf@u+3,w,c
  5651  002E36  6E08               	movwf	(??___fpclassifyf+3)& (0+255),c
  5652  002E38  5005               	movf	??___fpclassifyf,w,c
  5653  002E3A  1006               	iorwf	??___fpclassifyf+1,w,c
  5654  002E3C  1007               	iorwf	??___fpclassifyf+2,w,c
  5655  002E3E  1008               	iorwf	??___fpclassifyf+3,w,c
  5656  002E40  A4D8               	btfss	status,2,c
  5657  002E42  D005               	goto	l3105
  5658  002E44  0E00               	movlw	0
  5659  002E46  6E02               	movwf	?___fpclassifyf+1,c
  5660  002E48  0E02               	movlw	2
  5661  002E4A  6E01               	movwf	?___fpclassifyf,c
  5662  002E4C  0012               	return	
  5663  002E4E                     l3105:
  5664  002E4E  0E00               	movlw	0
  5665  002E50  6E02               	movwf	?___fpclassifyf+1,c
  5666  002E52  0E03               	movlw	3
  5667  002E54  6E01               	movwf	?___fpclassifyf,c
  5668  002E56  0012               	return	
  5669  002E58                     l3109:
  5670  002E58  2809               	incf	___fpclassifyf@e,w,c
  5671  002E5A  100A               	iorwf	___fpclassifyf@e+1,w,c
  5672  002E5C  A4D8               	btfss	status,2,c
  5673  002E5E  D01C               	goto	l3115
  5674  002E60  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5675  002E64  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5676  002E68  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5677  002E6C  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5678  002E70  0E09               	movlw	9
  5679  002E72                     u3155:
  5680  002E72  90D8               	bcf	status,0,c
  5681  002E74  3605               	rlcf	??___fpclassifyf,f,c
  5682  002E76  3606               	rlcf	??___fpclassifyf+1,f,c
  5683  002E78  3607               	rlcf	??___fpclassifyf+2,f,c
  5684  002E7A  3608               	rlcf	??___fpclassifyf+3,f,c
  5685  002E7C  2EE8               	decfsz	wreg,f,c
  5686  002E7E  D7F9               	goto	u3155
  5687  002E80  5005               	movf	??___fpclassifyf,w,c
  5688  002E82  1006               	iorwf	??___fpclassifyf+1,w,c
  5689  002E84  1007               	iorwf	??___fpclassifyf+2,w,c
  5690  002E86  1008               	iorwf	??___fpclassifyf+3,w,c
  5691  002E88  A4D8               	btfss	status,2,c
  5692  002E8A  D002               	goto	u3160
  5693  002E8C  0E01               	movlw	1
  5694  002E8E  D001               	goto	u3170
  5695  002E90                     u3160:
  5696  002E90  0E00               	movlw	0
  5697  002E92                     u3170:
  5698  002E92  6E01               	movwf	?___fpclassifyf,c
  5699  002E94  6A02               	clrf	?___fpclassifyf+1,c
  5700  002E96  0012               	return	
  5701  002E98                     l3115:
  5702  002E98  0E00               	movlw	0
  5703  002E9A  6E02               	movwf	?___fpclassifyf+1,c
  5704  002E9C  0E04               	movlw	4
  5705  002E9E  6E01               	movwf	?___fpclassifyf,c
  5706  002EA0  0012               	return		;funcret
  5707  002EA2                     __end_of___fpclassifyf:
  5708                           	opt callstack 0
  5709                           
  5710 ;; *************** function ___fltol *****************
  5711 ;; Defined at:
  5712 ;;		line 43 in file "D:\Microchip\pic\sources\c99\common\fltol.c"
  5713 ;; Parameters:    Size  Location     Type
  5714 ;;  f1              4    0[COMRAM] int 
  5715 ;; Auto vars:     Size  Location     Type
  5716 ;;  exp1            1    9[COMRAM] unsigned char 
  5717 ;;  sign1           1    8[COMRAM] unsigned char 
  5718 ;; Return value:  Size  Location     Type
  5719 ;;                  4    0[COMRAM] long 
  5720 ;; Registers used:
  5721 ;;		wreg, status,2, status,0
  5722 ;; Tracked objects:
  5723 ;;		On entry : 0/0
  5724 ;;		On exit  : 0/0
  5725 ;;		Unchanged: 0/0
  5726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5727 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5728 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5729 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5730 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5731 ;;Total ram usage:       10 bytes
  5732 ;; Hardware stack levels used:    1
  5733 ;; This function calls:
  5734 ;;		Nothing
  5735 ;; This function is called by:
  5736 ;;		_efgtoa
  5737 ;; This function uses a non-reentrant model
  5738 ;;
  5739                           
  5740                           	psect	text26
  5741  002EA2                     __ptext26:
  5742                           	opt callstack 0
  5743  002EA2                     ___fltol:
  5744                           	opt callstack 26
  5745                           
  5746                           ;incstack = 0
  5747  002EA2  3403               	rlcf	___fltol@f1+2,w,c
  5748  002EA4  3404               	rlcf	___fltol@f1+3,w,c
  5749  002EA6  6E0A               	movwf	___fltol@exp1,c
  5750  002EA8  500A               	movf	___fltol@exp1,w,c
  5751  002EAA  A4D8               	btfss	status,2,c
  5752  002EAC  D009               	goto	l3577
  5753  002EAE                     u3980:
  5754  002EAE  0E00               	movlw	0
  5755  002EB0  6E01               	movwf	?___fltol,c
  5756  002EB2  0E00               	movlw	0
  5757  002EB4  6E02               	movwf	?___fltol+1,c
  5758  002EB6  0E00               	movlw	0
  5759  002EB8  6E03               	movwf	?___fltol+2,c
  5760  002EBA  0E00               	movlw	0
  5761  002EBC  6E04               	movwf	?___fltol+3,c
  5762  002EBE  0012               	return	
  5763  002EC0                     l3577:
  5764  002EC0  C001  F005         	movff	___fltol@f1,??___fltol
  5765  002EC4  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  5766  002EC8  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  5767  002ECC  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  5768  002ED0  0E20               	movlw	32
  5769  002ED2  D005               	goto	u3990
  5770  002ED4                     u3995:
  5771  002ED4  90D8               	bcf	status,0,c
  5772  002ED6  3208               	rrcf	??___fltol+3,f,c
  5773  002ED8  3207               	rrcf	??___fltol+2,f,c
  5774  002EDA  3206               	rrcf	??___fltol+1,f,c
  5775  002EDC  3205               	rrcf	??___fltol,f,c
  5776  002EDE                     u3990:
  5777  002EDE  2EE8               	decfsz	wreg,f,c
  5778  002EE0  D7F9               	goto	u3995
  5779  002EE2  5005               	movf	??___fltol,w,c
  5780  002EE4  6E09               	movwf	___fltol@sign1,c
  5781  002EE6  8E03               	bsf	___fltol@f1+2,7,c
  5782  002EE8  0EFF               	movlw	255
  5783  002EEA  1601               	andwf	___fltol@f1,f,c
  5784  002EEC  0EFF               	movlw	255
  5785  002EEE  1602               	andwf	___fltol@f1+1,f,c
  5786  002EF0  0EFF               	movlw	255
  5787  002EF2  1603               	andwf	___fltol@f1+2,f,c
  5788  002EF4  0E00               	movlw	0
  5789  002EF6  1604               	andwf	___fltol@f1+3,f,c
  5790  002EF8  0E96               	movlw	150
  5791  002EFA  5E0A               	subwf	___fltol@exp1,f,c
  5792  002EFC  AE0A               	btfss	___fltol@exp1,7,c
  5793  002EFE  D00D               	goto	l3597
  5794  002F00  500A               	movf	___fltol@exp1,w,c
  5795  002F02  0A80               	xorlw	128
  5796  002F04  0F97               	addlw	151
  5797  002F06  A0D8               	btfss	status,0,c
  5798  002F08  D7D2               	goto	u3980
  5799  002F0A                     l3593:
  5800  002F0A  90D8               	bcf	status,0,c
  5801  002F0C  3204               	rrcf	___fltol@f1+3,f,c
  5802  002F0E  3203               	rrcf	___fltol@f1+2,f,c
  5803  002F10  3202               	rrcf	___fltol@f1+1,f,c
  5804  002F12  3201               	rrcf	___fltol@f1,f,c
  5805  002F14  3E0A               	incfsz	___fltol@exp1,f,c
  5806  002F16  D7F9               	goto	l3593
  5807  002F18  D00D               	goto	u4030
  5808  002F1A                     l3597:
  5809  002F1A  0E1F               	movlw	31
  5810  002F1C  640A               	cpfsgt	___fltol@exp1,c
  5811  002F1E  D007               	goto	l3605
  5812  002F20  D7C6               	goto	u3980
  5813  002F22                     l3603:
  5814  002F22  90D8               	bcf	status,0,c
  5815  002F24  3601               	rlcf	___fltol@f1,f,c
  5816  002F26  3602               	rlcf	___fltol@f1+1,f,c
  5817  002F28  3603               	rlcf	___fltol@f1+2,f,c
  5818  002F2A  3604               	rlcf	___fltol@f1+3,f,c
  5819  002F2C  060A               	decf	___fltol@exp1,f,c
  5820  002F2E                     l3605:
  5821  002F2E  500A               	movf	___fltol@exp1,w,c
  5822  002F30  A4D8               	btfss	status,2,c
  5823  002F32  D7F7               	goto	l3603
  5824  002F34                     u4030:
  5825  002F34  5009               	movf	___fltol@sign1,w,c
  5826  002F36  B4D8               	btfsc	status,2,c
  5827  002F38  D008               	goto	l3611
  5828  002F3A  1E04               	comf	___fltol@f1+3,f,c
  5829  002F3C  1E03               	comf	___fltol@f1+2,f,c
  5830  002F3E  1E02               	comf	___fltol@f1+1,f,c
  5831  002F40  6C01               	negf	___fltol@f1,c
  5832  002F42  0E00               	movlw	0
  5833  002F44  2202               	addwfc	___fltol@f1+1,f,c
  5834  002F46  2203               	addwfc	___fltol@f1+2,f,c
  5835  002F48  2204               	addwfc	___fltol@f1+3,f,c
  5836  002F4A                     l3611:
  5837  002F4A  C001  F001         	movff	___fltol@f1,?___fltol
  5838  002F4E  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  5839  002F52  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  5840  002F56  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  5841  002F5A  0012               	return		;funcret
  5842  002F5C                     __end_of___fltol:
  5843                           	opt callstack 0
  5844                           
  5845 ;; *************** function ___flsub *****************
  5846 ;; Defined at:
  5847 ;;		line 245 in file "D:\Microchip\pic\sources\c99\common\sprcadd.c"
  5848 ;; Parameters:    Size  Location     Type
  5849 ;;  b               4   81[COMRAM] long 
  5850 ;;  a               4   85[COMRAM] long 
  5851 ;; Auto vars:     Size  Location     Type
  5852 ;;		None
  5853 ;; Return value:  Size  Location     Type
  5854 ;;                  4   81[COMRAM] long 
  5855 ;; Registers used:
  5856 ;;		wreg, status,2, status,0, cstack
  5857 ;; Tracked objects:
  5858 ;;		On entry : 0/0
  5859 ;;		On exit  : 0/0
  5860 ;;		Unchanged: 0/0
  5861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5862 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5865 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5866 ;;Total ram usage:        8 bytes
  5867 ;; Hardware stack levels used:    1
  5868 ;; Hardware stack levels required when called:    1
  5869 ;; This function calls:
  5870 ;;		___fladd
  5871 ;; This function is called by:
  5872 ;;		_efgtoa
  5873 ;; This function uses a non-reentrant model
  5874 ;;
  5875                           
  5876                           	psect	text27
  5877  003692                     __ptext27:
  5878                           	opt callstack 0
  5879  003692                     ___flsub:
  5880                           	opt callstack 25
  5881                           
  5882                           ;incstack = 0
  5883  003692  0E00               	movlw	0
  5884  003694  1A56               	xorwf	___flsub@a,f,c
  5885  003696  0E00               	movlw	0
  5886  003698  1A57               	xorwf	___flsub@a+1,f,c
  5887  00369A  0E00               	movlw	0
  5888  00369C  1A58               	xorwf	___flsub@a+2,f,c
  5889  00369E  0E80               	movlw	128
  5890  0036A0  1A59               	xorwf	___flsub@a+3,f,c
  5891  0036A2  C052  F001         	movff	___flsub@b,___fladd@b
  5892  0036A6  C053  F002         	movff	___flsub@b+1,___fladd@b+1
  5893  0036AA  C054  F003         	movff	___flsub@b+2,___fladd@b+2
  5894  0036AE  C055  F004         	movff	___flsub@b+3,___fladd@b+3
  5895  0036B2  C056  F005         	movff	___flsub@a,___fladd@a
  5896  0036B6  C057  F006         	movff	___flsub@a+1,___fladd@a+1
  5897  0036BA  C058  F007         	movff	___flsub@a+2,___fladd@a+2
  5898  0036BE  C059  F008         	movff	___flsub@a+3,___fladd@a+3
  5899  0036C2  ECE2  F010         	call	___fladd	;wreg free
  5900  0036C6  C001  F052         	movff	?___fladd,?___flsub
  5901  0036CA  C002  F053         	movff	?___fladd+1,?___flsub+1
  5902  0036CE  C003  F054         	movff	?___fladd+2,?___flsub+2
  5903  0036D2  C004  F055         	movff	?___fladd+3,?___flsub+3
  5904  0036D6  0012               	return		;funcret
  5905  0036D8                     __end_of___flsub:
  5906                           	opt callstack 0
  5907                           
  5908 ;; *************** function ___fladd *****************
  5909 ;; Defined at:
  5910 ;;		line 10 in file "D:\Microchip\pic\sources\c99\common\sprcadd.c"
  5911 ;; Parameters:    Size  Location     Type
  5912 ;;  b               4    0[COMRAM] long 
  5913 ;;  a               4    4[COMRAM] long 
  5914 ;; Auto vars:     Size  Location     Type
  5915 ;;  grs             1   15[COMRAM] unsigned char 
  5916 ;;  bexp            1   14[COMRAM] unsigned char 
  5917 ;;  aexp            1   13[COMRAM] unsigned char 
  5918 ;;  signs           1   12[COMRAM] unsigned char 
  5919 ;; Return value:  Size  Location     Type
  5920 ;;                  4    0[COMRAM] unsigned char 
  5921 ;; Registers used:
  5922 ;;		wreg, status,2, status,0
  5923 ;; Tracked objects:
  5924 ;;		On entry : 0/0
  5925 ;;		On exit  : 0/0
  5926 ;;		Unchanged: 0/0
  5927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5928 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5929 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5930 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5931 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5932 ;;Total ram usage:       16 bytes
  5933 ;; Hardware stack levels used:    1
  5934 ;; This function calls:
  5935 ;;		Nothing
  5936 ;; This function is called by:
  5937 ;;		_efgtoa
  5938 ;;		___flsub
  5939 ;; This function uses a non-reentrant model
  5940 ;;
  5941                           
  5942                           	psect	text28
  5943  0021C4                     __ptext28:
  5944                           	opt callstack 0
  5945  0021C4                     ___fladd:
  5946                           	opt callstack 25
  5947                           
  5948                           ;incstack = 0
  5949  0021C4  5004               	movf	___fladd@b+3,w,c
  5950  0021C6  0B80               	andlw	128
  5951  0021C8  6E0D               	movwf	___fladd@signs,c
  5952  0021CA  5004               	movf	___fladd@b+3,w,c
  5953  0021CC  2404               	addwf	___fladd@b+3,w,c
  5954  0021CE  6E0F               	movwf	___fladd@bexp,c
  5955  0021D0  BE03               	btfsc	___fladd@b+2,7,c
  5956  0021D2  800F               	bsf	___fladd@bexp,0,c
  5957  0021D4  500F               	movf	___fladd@bexp,w,c
  5958  0021D6  B4D8               	btfsc	status,2,c
  5959  0021D8  D00D               	goto	l2879
  5960  0021DA  280F               	incf	___fladd@bexp,w,c
  5961  0021DC  A4D8               	btfss	status,2,c
  5962  0021DE  D008               	goto	l2875
  5963  0021E0  0E00               	movlw	0
  5964  0021E2  6E01               	movwf	___fladd@b,c
  5965  0021E4  0E00               	movlw	0
  5966  0021E6  6E02               	movwf	___fladd@b+1,c
  5967  0021E8  0E00               	movlw	0
  5968  0021EA  6E03               	movwf	___fladd@b+2,c
  5969  0021EC  0E00               	movlw	0
  5970  0021EE  6E04               	movwf	___fladd@b+3,c
  5971  0021F0                     l2875:
  5972  0021F0  8E03               	bsf	___fladd@b+2,7,c
  5973  0021F2  D006               	goto	L7
  5974  0021F4                     l2879:
  5975  0021F4  0E00               	movlw	0
  5976  0021F6  6E01               	movwf	___fladd@b,c
  5977  0021F8  0E00               	movlw	0
  5978  0021FA  6E02               	movwf	___fladd@b+1,c
  5979  0021FC  0E00               	movlw	0
  5980  0021FE  6E03               	movwf	___fladd@b+2,c
  5981  002200                     L7:
  5982  002200  0E00               	movlw	0
  5983  002202  6E04               	movwf	___fladd@b+3,c
  5984  002204  5008               	movf	___fladd@a+3,w,c
  5985  002206  0B80               	andlw	128
  5986  002208  6E0E               	movwf	___fladd@aexp,c
  5987  00220A  500D               	movf	___fladd@signs,w,c
  5988  00220C  180E               	xorwf	___fladd@aexp,w,c
  5989  00220E  A4D8               	btfss	status,2,c
  5990  002210  8C0D               	bsf	___fladd@signs,6,c
  5991  002212  5008               	movf	___fladd@a+3,w,c
  5992  002214  2408               	addwf	___fladd@a+3,w,c
  5993  002216  6E0E               	movwf	___fladd@aexp,c
  5994  002218  BE07               	btfsc	___fladd@a+2,7,c
  5995  00221A  800E               	bsf	___fladd@aexp,0,c
  5996  00221C  500E               	movf	___fladd@aexp,w,c
  5997  00221E  B4D8               	btfsc	status,2,c
  5998  002220  D00D               	goto	l2903
  5999  002222  280E               	incf	___fladd@aexp,w,c
  6000  002224  A4D8               	btfss	status,2,c
  6001  002226  D008               	goto	l2899
  6002  002228  0E00               	movlw	0
  6003  00222A  6E05               	movwf	___fladd@a,c
  6004  00222C  0E00               	movlw	0
  6005  00222E  6E06               	movwf	___fladd@a+1,c
  6006  002230  0E00               	movlw	0
  6007  002232  6E07               	movwf	___fladd@a+2,c
  6008  002234  0E00               	movlw	0
  6009  002236  6E08               	movwf	___fladd@a+3,c
  6010  002238                     l2899:
  6011  002238  8E07               	bsf	___fladd@a+2,7,c
  6012  00223A  D006               	goto	L8
  6013  00223C                     l2903:
  6014  00223C  0E00               	movlw	0
  6015  00223E  6E05               	movwf	___fladd@a,c
  6016  002240  0E00               	movlw	0
  6017  002242  6E06               	movwf	___fladd@a+1,c
  6018  002244  0E00               	movlw	0
  6019  002246  6E07               	movwf	___fladd@a+2,c
  6020  002248                     L8:
  6021  002248  0E00               	movlw	0
  6022  00224A  6E08               	movwf	___fladd@a+3,c
  6023  00224C  500F               	movf	___fladd@bexp,w,c
  6024  00224E  5C0E               	subwf	___fladd@aexp,w,c
  6025  002250  B0D8               	btfsc	status,0,c
  6026  002252  D022               	goto	l2941
  6027  002254  AC0D               	btfss	___fladd@signs,6,c
  6028  002256  D002               	goto	l2911
  6029  002258  0E80               	movlw	128
  6030  00225A  1A0D               	xorwf	___fladd@signs,f,c
  6031  00225C                     l2911:
  6032  00225C  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  6033  002260  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  6034  002264  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  6035  002268  C001  F010         	movff	___fladd@b,___fladd@grs
  6036  00226C  C005  F001         	movff	___fladd@a,___fladd@b
  6037  002270  C010  F005         	movff	___fladd@grs,___fladd@a
  6038  002274  C002  F010         	movff	___fladd@b+1,___fladd@grs
  6039  002278  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  6040  00227C  C010  F006         	movff	___fladd@grs,___fladd@a+1
  6041  002280  C003  F010         	movff	___fladd@b+2,___fladd@grs
  6042  002284  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  6043  002288  C010  F007         	movff	___fladd@grs,___fladd@a+2
  6044  00228C  C004  F010         	movff	___fladd@b+3,___fladd@grs
  6045  002290  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  6046  002294  C010  F008         	movff	___fladd@grs,___fladd@a+3
  6047  002298                     l2941:
  6048  002298  0E00               	movlw	0
  6049  00229A  6E10               	movwf	___fladd@grs,c
  6050  00229C  500F               	movf	___fladd@bexp,w,c
  6051  00229E  C00E  F009         	movff	___fladd@aexp,??___fladd
  6052  0022A2  6A0A               	clrf	(??___fladd+1)& (0+255),c
  6053  0022A4  5E09               	subwf	??___fladd,f,c
  6054  0022A6  0E00               	movlw	0
  6055  0022A8  5A0A               	subwfb	??___fladd+1,f,c
  6056  0022AA  BE0A               	btfsc	??___fladd+1,7,c
  6057  0022AC  D02C               	goto	l916
  6058  0022AE  500A               	movf	??___fladd+1,w,c
  6059  0022B0  E104               	bnz	u2770
  6060  0022B2  0E1A               	movlw	26
  6061  0022B4  5C09               	subwf	??___fladd,w,c
  6062  0022B6  A0D8               	btfss	status,0,c
  6063  0022B8  D026               	goto	l916
  6064  0022BA                     u2770:
  6065  0022BA  5001               	movf	___fladd@b,w,c
  6066  0022BC  1002               	iorwf	___fladd@b+1,w,c
  6067  0022BE  1003               	iorwf	___fladd@b+2,w,c
  6068  0022C0  1004               	iorwf	___fladd@b+3,w,c
  6069  0022C2  B4D8               	btfsc	status,2,c
  6070  0022C4  D002               	goto	u2780
  6071  0022C6  0E01               	movlw	1
  6072  0022C8  D001               	goto	u2790
  6073  0022CA                     u2780:
  6074  0022CA  0E00               	movlw	0
  6075  0022CC                     u2790:
  6076  0022CC  6E10               	movwf	___fladd@grs,c
  6077  0022CE  0E00               	movlw	0
  6078  0022D0  6E01               	movwf	___fladd@b,c
  6079  0022D2  0E00               	movlw	0
  6080  0022D4  6E02               	movwf	___fladd@b+1,c
  6081  0022D6  0E00               	movlw	0
  6082  0022D8  6E03               	movwf	___fladd@b+2,c
  6083  0022DA  0E00               	movlw	0
  6084  0022DC  6E04               	movwf	___fladd@b+3,c
  6085  0022DE  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  6086  0022E2  D015               	goto	u2820
  6087  0022E4                     l917:
  6088  0022E4  A010               	btfss	___fladd@grs,0,c
  6089  0022E6  D005               	goto	l2953
  6090  0022E8  90D8               	bcf	status,0,c
  6091  0022EA  3010               	rrcf	___fladd@grs,w,c
  6092  0022EC  0901               	iorlw	1
  6093  0022EE  6E10               	movwf	___fladd@grs,c
  6094  0022F0  D002               	goto	l2955
  6095  0022F2                     l2953:
  6096  0022F2  90D8               	bcf	status,0,c
  6097  0022F4  3210               	rrcf	___fladd@grs,f,c
  6098  0022F6                     l2955:
  6099  0022F6  B001               	btfsc	___fladd@b,0,c
  6100  0022F8  8E10               	bsf	___fladd@grs,7,c
  6101  0022FA  3404               	rlcf	___fladd@b+3,w,c
  6102  0022FC  3204               	rrcf	___fladd@b+3,f,c
  6103  0022FE  3203               	rrcf	___fladd@b+2,f,c
  6104  002300  3202               	rrcf	___fladd@b+1,f,c
  6105  002302  3201               	rrcf	___fladd@b,f,c
  6106  002304  2A0F               	incf	___fladd@bexp,f,c
  6107  002306                     l916:
  6108  002306  500E               	movf	___fladd@aexp,w,c
  6109  002308  5C0F               	subwf	___fladd@bexp,w,c
  6110  00230A  A0D8               	btfss	status,0,c
  6111  00230C  D7EB               	goto	l917
  6112  00230E                     u2820:
  6113  00230E  BC0D               	btfsc	___fladd@signs,6,c
  6114  002310  D028               	goto	l2987
  6115  002312  500F               	movf	___fladd@bexp,w,c
  6116  002314  A4D8               	btfss	status,2,c
  6117  002316  D009               	goto	l2969
  6118  002318  0E00               	movlw	0
  6119  00231A  6E01               	movwf	?___fladd,c
  6120  00231C  0E00               	movlw	0
  6121  00231E  6E02               	movwf	?___fladd+1,c
  6122  002320  0E00               	movlw	0
  6123  002322  6E03               	movwf	?___fladd+2,c
  6124  002324  0E00               	movlw	0
  6125  002326  6E04               	movwf	?___fladd+3,c
  6126  002328  0012               	return	
  6127  00232A                     l2969:
  6128  00232A  5005               	movf	___fladd@a,w,c
  6129  00232C  2601               	addwf	___fladd@b,f,c
  6130  00232E  5006               	movf	___fladd@a+1,w,c
  6131  002330  2202               	addwfc	___fladd@b+1,f,c
  6132  002332  5007               	movf	___fladd@a+2,w,c
  6133  002334  2203               	addwfc	___fladd@b+2,f,c
  6134  002336  5008               	movf	___fladd@a+3,w,c
  6135  002338  2204               	addwfc	___fladd@b+3,f,c
  6136  00233A  A004               	btfss	___fladd@b+3,0,c
  6137  00233C  D071               	goto	u2950
  6138  00233E  A010               	btfss	___fladd@grs,0,c
  6139  002340  D005               	goto	l2977
  6140  002342  90D8               	bcf	status,0,c
  6141  002344  3010               	rrcf	___fladd@grs,w,c
  6142  002346  0901               	iorlw	1
  6143  002348  6E10               	movwf	___fladd@grs,c
  6144  00234A  D002               	goto	l2979
  6145  00234C                     l2977:
  6146  00234C  90D8               	bcf	status,0,c
  6147  00234E  3210               	rrcf	___fladd@grs,f,c
  6148  002350                     l2979:
  6149  002350  B001               	btfsc	___fladd@b,0,c
  6150  002352  8E10               	bsf	___fladd@grs,7,c
  6151  002354  3404               	rlcf	___fladd@b+3,w,c
  6152  002356  3204               	rrcf	___fladd@b+3,f,c
  6153  002358  3203               	rrcf	___fladd@b+2,f,c
  6154  00235A  3202               	rrcf	___fladd@b+1,f,c
  6155  00235C  3201               	rrcf	___fladd@b,f,c
  6156  00235E  2A0F               	incf	___fladd@bexp,f,c
  6157  002360  D05F               	goto	u2950
  6158  002362                     l2987:
  6159  002362  5005               	movf	___fladd@a,w,c
  6160  002364  5C01               	subwf	___fladd@b,w,c
  6161  002366  5006               	movf	___fladd@a+1,w,c
  6162  002368  5802               	subwfb	___fladd@b+1,w,c
  6163  00236A  5007               	movf	___fladd@a+2,w,c
  6164  00236C  5803               	subwfb	___fladd@b+2,w,c
  6165  00236E  5004               	movf	___fladd@b+3,w,c
  6166  002370  0A80               	xorlw	128
  6167  002372  6E09               	movwf	??___fladd& (0+255),c
  6168  002374  5008               	movf	___fladd@a+3,w,c
  6169  002376  0A80               	xorlw	128
  6170  002378  5809               	subwfb	??___fladd& (0+255),w,c
  6171  00237A  B0D8               	btfsc	status,0,c
  6172  00237C  D025               	goto	l2997
  6173  00237E  5001               	movf	___fladd@b,w,c
  6174  002380  5C05               	subwf	___fladd@a,w,c
  6175  002382  6E09               	movwf	??___fladd& (0+255),c
  6176  002384  5002               	movf	___fladd@b+1,w,c
  6177  002386  5806               	subwfb	___fladd@a+1,w,c
  6178  002388  6E0A               	movwf	(??___fladd+1)& (0+255),c
  6179  00238A  5003               	movf	___fladd@b+2,w,c
  6180  00238C  5807               	subwfb	___fladd@a+2,w,c
  6181  00238E  6E0B               	movwf	(??___fladd+2)& (0+255),c
  6182  002390  5004               	movf	___fladd@b+3,w,c
  6183  002392  5808               	subwfb	___fladd@a+3,w,c
  6184  002394  6E0C               	movwf	(??___fladd+3)& (0+255),c
  6185  002396  0EFF               	movlw	255
  6186  002398  2409               	addwf	??___fladd,w,c
  6187  00239A  6E01               	movwf	___fladd@b,c
  6188  00239C  0EFF               	movlw	255
  6189  00239E  200A               	addwfc	??___fladd+1,w,c
  6190  0023A0  6E02               	movwf	___fladd@b+1,c
  6191  0023A2  0EFF               	movlw	255
  6192  0023A4  200B               	addwfc	??___fladd+2,w,c
  6193  0023A6  6E03               	movwf	___fladd@b+2,c
  6194  0023A8  0EFF               	movlw	255
  6195  0023AA  200C               	addwfc	??___fladd+3,w,c
  6196  0023AC  6E04               	movwf	___fladd@b+3,c
  6197  0023AE  0E80               	movlw	128
  6198  0023B0  1A0D               	xorwf	___fladd@signs,f,c
  6199  0023B2  6C10               	negf	___fladd@grs,c
  6200  0023B4  5010               	movf	___fladd@grs,w,c
  6201  0023B6  A4D8               	btfss	status,2,c
  6202  0023B8  D00F               	goto	l932
  6203  0023BA  0E01               	movlw	1
  6204  0023BC  2601               	addwf	___fladd@b,f,c
  6205  0023BE  0E00               	movlw	0
  6206  0023C0  2202               	addwfc	___fladd@b+1,f,c
  6207  0023C2  2203               	addwfc	___fladd@b+2,f,c
  6208  0023C4  2204               	addwfc	___fladd@b+3,f,c
  6209  0023C6  D008               	goto	l932
  6210  0023C8                     l2997:
  6211  0023C8  5005               	movf	___fladd@a,w,c
  6212  0023CA  5E01               	subwf	___fladd@b,f,c
  6213  0023CC  5006               	movf	___fladd@a+1,w,c
  6214  0023CE  5A02               	subwfb	___fladd@b+1,f,c
  6215  0023D0  5007               	movf	___fladd@a+2,w,c
  6216  0023D2  5A03               	subwfb	___fladd@b+2,f,c
  6217  0023D4  5008               	movf	___fladd@a+3,w,c
  6218  0023D6  5A04               	subwfb	___fladd@b+3,f,c
  6219  0023D8                     l932:
  6220  0023D8  5001               	movf	___fladd@b,w,c
  6221  0023DA  1002               	iorwf	___fladd@b+1,w,c
  6222  0023DC  1003               	iorwf	___fladd@b+2,w,c
  6223  0023DE  1004               	iorwf	___fladd@b+3,w,c
  6224  0023E0  A4D8               	btfss	status,2,c
  6225  0023E2  D01C               	goto	l3021
  6226  0023E4  5010               	movf	___fladd@grs,w,c
  6227  0023E6  A4D8               	btfss	status,2,c
  6228  0023E8  D019               	goto	l3021
  6229  0023EA  0E00               	movlw	0
  6230  0023EC  6E01               	movwf	?___fladd,c
  6231  0023EE  0E00               	movlw	0
  6232  0023F0  6E02               	movwf	?___fladd+1,c
  6233  0023F2  0E00               	movlw	0
  6234  0023F4  6E03               	movwf	?___fladd+2,c
  6235  0023F6  0E00               	movlw	0
  6236  0023F8  6E04               	movwf	?___fladd+3,c
  6237  0023FA  0012               	return	
  6238  0023FC                     l3005:
  6239  0023FC  90D8               	bcf	status,0,c
  6240  0023FE  3601               	rlcf	___fladd@b,f,c
  6241  002400  3602               	rlcf	___fladd@b+1,f,c
  6242  002402  3603               	rlcf	___fladd@b+2,f,c
  6243  002404  3604               	rlcf	___fladd@b+3,f,c
  6244  002406  BE10               	btfsc	___fladd@grs,7,c
  6245  002408  8001               	bsf	___fladd@b,0,c
  6246  00240A  A010               	btfss	___fladd@grs,0,c
  6247  00240C  D002               	goto	l3015
  6248  00240E  80D8               	bsf	status,0,c
  6249  002410  D001               	goto	L9
  6250  002412                     l3015:
  6251  002412  90D8               	bcf	status,0,c
  6252  002414                     L9:
  6253  002414  3610               	rlcf	___fladd@grs,f,c
  6254  002416  500F               	movf	___fladd@bexp,w,c
  6255  002418  A4D8               	btfss	status,2,c
  6256  00241A  060F               	decf	___fladd@bexp,f,c
  6257  00241C                     l3021:
  6258  00241C  AE03               	btfss	___fladd@b+2,7,c
  6259  00241E  D7EE               	goto	l3005
  6260  002420                     u2950:
  6261  002420  0E00               	movlw	0
  6262  002422  6E0E               	movwf	___fladd@aexp,c
  6263  002424  AE10               	btfss	___fladd@grs,7,c
  6264  002426  D00B               	goto	l941
  6265  002428  C010  F009         	movff	___fladd@grs,??___fladd
  6266  00242C  0E7F               	movlw	127
  6267  00242E  1609               	andwf	??___fladd,f,c
  6268  002430  B4D8               	btfsc	status,2,c
  6269  002432  D003               	goto	l942
  6270  002434                     u2970:
  6271  002434  0E01               	movlw	1
  6272  002436  6E0E               	movwf	___fladd@aexp,c
  6273  002438  D002               	goto	l941
  6274  00243A                     l942:
  6275  00243A  B001               	btfsc	___fladd@b,0,c
  6276  00243C  D7FB               	goto	u2970
  6277  00243E                     l941:
  6278  00243E  500E               	movf	___fladd@aexp,w,c
  6279  002440  B4D8               	btfsc	status,2,c
  6280  002442  D020               	goto	l3041
  6281  002444  0E01               	movlw	1
  6282  002446  2601               	addwf	___fladd@b,f,c
  6283  002448  0E00               	movlw	0
  6284  00244A  2202               	addwfc	___fladd@b+1,f,c
  6285  00244C  2203               	addwfc	___fladd@b+2,f,c
  6286  00244E  2204               	addwfc	___fladd@b+3,f,c
  6287  002450  A004               	btfss	___fladd@b+3,0,c
  6288  002452  D018               	goto	l3041
  6289  002454  C001  F009         	movff	___fladd@b,??___fladd
  6290  002458  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  6291  00245C  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  6292  002460  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  6293  002464  340C               	rlcf	??___fladd+3,w,c
  6294  002466  320C               	rrcf	??___fladd+3,f,c
  6295  002468  320B               	rrcf	??___fladd+2,f,c
  6296  00246A  320A               	rrcf	??___fladd+1,f,c
  6297  00246C  3209               	rrcf	??___fladd,f,c
  6298  00246E  C009  F001         	movff	??___fladd,___fladd@b
  6299  002472  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  6300  002476  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  6301  00247A  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  6302  00247E  280F               	incf	___fladd@bexp,w,c
  6303  002480  A4D8               	btfss	status,2,c
  6304  002482  2A0F               	incf	___fladd@bexp,f,c
  6305  002484                     l3041:
  6306  002484  280F               	incf	___fladd@bexp,w,c
  6307  002486  B4D8               	btfsc	status,2,c
  6308  002488  D003               	goto	u3030
  6309  00248A  500F               	movf	___fladd@bexp,w,c
  6310  00248C  A4D8               	btfss	status,2,c
  6311  00248E  D00D               	goto	l3049
  6312  002490                     u3030:
  6313  002490  0E00               	movlw	0
  6314  002492  6E01               	movwf	___fladd@b,c
  6315  002494  0E00               	movlw	0
  6316  002496  6E02               	movwf	___fladd@b+1,c
  6317  002498  0E00               	movlw	0
  6318  00249A  6E03               	movwf	___fladd@b+2,c
  6319  00249C  0E00               	movlw	0
  6320  00249E  6E04               	movwf	___fladd@b+3,c
  6321  0024A0  500F               	movf	___fladd@bexp,w,c
  6322  0024A2  A4D8               	btfss	status,2,c
  6323  0024A4  D002               	goto	l3049
  6324  0024A6  0E00               	movlw	0
  6325  0024A8  6E0D               	movwf	___fladd@signs,c
  6326  0024AA                     l3049:
  6327  0024AA  A00F               	btfss	___fladd@bexp,0,c
  6328  0024AC  D002               	goto	l3053
  6329  0024AE  8E03               	bsf	___fladd@b+2,7,c
  6330  0024B0  D001               	goto	l3055
  6331  0024B2                     l3053:
  6332  0024B2  9E03               	bcf	___fladd@b+2,7,c
  6333  0024B4                     l3055:
  6334  0024B4  90D8               	bcf	status,0,c
  6335  0024B6  300F               	rrcf	___fladd@bexp,w,c
  6336  0024B8  6E04               	movwf	___fladd@b+3,c
  6337  0024BA  BE0D               	btfsc	___fladd@signs,7,c
  6338  0024BC  8E04               	bsf	___fladd@b+3,7,c
  6339  0024BE  C001  F001         	movff	___fladd@b,?___fladd
  6340  0024C2  C002  F002         	movff	___fladd@b+1,?___fladd+1
  6341  0024C6  C003  F003         	movff	___fladd@b+2,?___fladd+2
  6342  0024CA  C004  F004         	movff	___fladd@b+3,?___fladd+3
  6343  0024CE  0012               	return		;funcret
  6344  0024D0                     __end_of___fladd:
  6345                           	opt callstack 0
  6346                           
  6347 ;; *************** function ___flneg *****************
  6348 ;; Defined at:
  6349 ;;		line 15 in file "D:\Microchip\pic\sources\c99\common\flneg.c"
  6350 ;; Parameters:    Size  Location     Type
  6351 ;;  f1              4    0[COMRAM] unsigned char 
  6352 ;; Auto vars:     Size  Location     Type
  6353 ;;		None
  6354 ;; Return value:  Size  Location     Type
  6355 ;;                  4    0[COMRAM] unsigned char 
  6356 ;; Registers used:
  6357 ;;		wreg, status,2, status,0
  6358 ;; Tracked objects:
  6359 ;;		On entry : 0/0
  6360 ;;		On exit  : 0/0
  6361 ;;		Unchanged: 0/0
  6362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6363 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6366 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6367 ;;Total ram usage:        4 bytes
  6368 ;; Hardware stack levels used:    1
  6369 ;; This function calls:
  6370 ;;		Nothing
  6371 ;; This function is called by:
  6372 ;;		_efgtoa
  6373 ;; This function uses a non-reentrant model
  6374 ;;
  6375                           
  6376                           	psect	text29
  6377  003858                     __ptext29:
  6378                           	opt callstack 0
  6379  003858                     ___flneg:
  6380                           	opt callstack 26
  6381                           
  6382                           ;incstack = 0
  6383  003858  5001               	movf	___flneg@f1,w,c
  6384  00385A  1002               	iorwf	___flneg@f1+1,w,c
  6385  00385C  1003               	iorwf	___flneg@f1+2,w,c
  6386  00385E  1004               	iorwf	___flneg@f1+3,w,c
  6387  003860  B4D8               	btfsc	status,2,c
  6388  003862  D008               	goto	l3567
  6389  003864  0E00               	movlw	0
  6390  003866  1A01               	xorwf	___flneg@f1,f,c
  6391  003868  0E00               	movlw	0
  6392  00386A  1A02               	xorwf	___flneg@f1+1,f,c
  6393  00386C  0E00               	movlw	0
  6394  00386E  1A03               	xorwf	___flneg@f1+2,f,c
  6395  003870  0E80               	movlw	128
  6396  003872  1A04               	xorwf	___flneg@f1+3,f,c
  6397  003874                     l3567:
  6398  003874  C001  F001         	movff	___flneg@f1,?___flneg
  6399  003878  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  6400  00387C  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  6401  003880  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  6402  003884  0012               	return		;funcret
  6403  003886                     __end_of___flneg:
  6404                           	opt callstack 0
  6405                           
  6406 ;; *************** function ___flmul *****************
  6407 ;; Defined at:
  6408 ;;		line 8 in file "D:\Microchip\pic\sources\c99\common\sprcmul.c"
  6409 ;; Parameters:    Size  Location     Type
  6410 ;;  b               4   56[COMRAM] unsigned char 
  6411 ;;  a               4   60[COMRAM] unsigned char 
  6412 ;; Auto vars:     Size  Location     Type
  6413 ;;  prod            4   75[COMRAM] struct .
  6414 ;;  grs             4   69[COMRAM] unsigned long 
  6415 ;;  temp            2   79[COMRAM] struct .
  6416 ;;  bexp            1   74[COMRAM] unsigned char 
  6417 ;;  aexp            1   73[COMRAM] unsigned char 
  6418 ;;  sign            1   68[COMRAM] unsigned char 
  6419 ;; Return value:  Size  Location     Type
  6420 ;;                  4   56[COMRAM] unsigned char 
  6421 ;; Registers used:
  6422 ;;		wreg, status,2, status,0, prodl, prodh
  6423 ;; Tracked objects:
  6424 ;;		On entry : 0/0
  6425 ;;		On exit  : 0/0
  6426 ;;		Unchanged: 0/0
  6427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6428 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6429 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6430 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6431 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6432 ;;Total ram usage:       25 bytes
  6433 ;; Hardware stack levels used:    1
  6434 ;; This function calls:
  6435 ;;		Nothing
  6436 ;; This function is called by:
  6437 ;;		_main
  6438 ;;		_efgtoa
  6439 ;; This function uses a non-reentrant model
  6440 ;;
  6441                           
  6442                           	psect	text30
  6443  001E72                     __ptext30:
  6444                           	opt callstack 0
  6445  001E72                     ___flmul:
  6446                           	opt callstack 26
  6447                           
  6448                           ;incstack = 0
  6449  001E72  503C               	movf	___flmul@b+3,w,c
  6450  001E74  0B80               	andlw	128
  6451  001E76  6E45               	movwf	___flmul@sign,c
  6452  001E78  503C               	movf	___flmul@b+3,w,c
  6453  001E7A  243C               	addwf	___flmul@b+3,w,c
  6454  001E7C  6E4B               	movwf	___flmul@bexp,c
  6455  001E7E  BE3B               	btfsc	___flmul@b+2,7,c
  6456  001E80  804B               	bsf	___flmul@bexp,0,c
  6457  001E82  504B               	movf	___flmul@bexp,w,c
  6458  001E84  B4D8               	btfsc	status,2,c
  6459  001E86  D00D               	goto	l3323
  6460  001E88  284B               	incf	___flmul@bexp,w,c
  6461  001E8A  A4D8               	btfss	status,2,c
  6462  001E8C  D008               	goto	l3321
  6463  001E8E  0E00               	movlw	0
  6464  001E90  6E39               	movwf	___flmul@b,c
  6465  001E92  0E00               	movlw	0
  6466  001E94  6E3A               	movwf	___flmul@b+1,c
  6467  001E96  0E00               	movlw	0
  6468  001E98  6E3B               	movwf	___flmul@b+2,c
  6469  001E9A  0E00               	movlw	0
  6470  001E9C  6E3C               	movwf	___flmul@b+3,c
  6471  001E9E                     l3321:
  6472  001E9E  8E3B               	bsf	___flmul@b+2,7,c
  6473  001EA0  D008               	goto	l3325
  6474  001EA2                     l3323:
  6475  001EA2  0E00               	movlw	0
  6476  001EA4  6E39               	movwf	___flmul@b,c
  6477  001EA6  0E00               	movlw	0
  6478  001EA8  6E3A               	movwf	___flmul@b+1,c
  6479  001EAA  0E00               	movlw	0
  6480  001EAC  6E3B               	movwf	___flmul@b+2,c
  6481  001EAE  0E00               	movlw	0
  6482  001EB0  6E3C               	movwf	___flmul@b+3,c
  6483  001EB2                     l3325:
  6484  001EB2  5040               	movf	___flmul@a+3,w,c
  6485  001EB4  0B80               	andlw	128
  6486  001EB6  1A45               	xorwf	___flmul@sign,f,c
  6487  001EB8  5040               	movf	___flmul@a+3,w,c
  6488  001EBA  2440               	addwf	___flmul@a+3,w,c
  6489  001EBC  6E4A               	movwf	___flmul@aexp,c
  6490  001EBE  BE3F               	btfsc	___flmul@a+2,7,c
  6491  001EC0  804A               	bsf	___flmul@aexp,0,c
  6492  001EC2  504A               	movf	___flmul@aexp,w,c
  6493  001EC4  B4D8               	btfsc	status,2,c
  6494  001EC6  D00D               	goto	l3341
  6495  001EC8  284A               	incf	___flmul@aexp,w,c
  6496  001ECA  A4D8               	btfss	status,2,c
  6497  001ECC  D008               	goto	l3339
  6498  001ECE  0E00               	movlw	0
  6499  001ED0  6E3D               	movwf	___flmul@a,c
  6500  001ED2  0E00               	movlw	0
  6501  001ED4  6E3E               	movwf	___flmul@a+1,c
  6502  001ED6  0E00               	movlw	0
  6503  001ED8  6E3F               	movwf	___flmul@a+2,c
  6504  001EDA  0E00               	movlw	0
  6505  001EDC  6E40               	movwf	___flmul@a+3,c
  6506  001EDE                     l3339:
  6507  001EDE  8E3F               	bsf	___flmul@a+2,7,c
  6508  001EE0  D008               	goto	l1001
  6509  001EE2                     l3341:
  6510  001EE2  0E00               	movlw	0
  6511  001EE4  6E3D               	movwf	___flmul@a,c
  6512  001EE6  0E00               	movlw	0
  6513  001EE8  6E3E               	movwf	___flmul@a+1,c
  6514  001EEA  0E00               	movlw	0
  6515  001EEC  6E3F               	movwf	___flmul@a+2,c
  6516  001EEE  0E00               	movlw	0
  6517  001EF0  6E40               	movwf	___flmul@a+3,c
  6518  001EF2                     l1001:
  6519  001EF2  504A               	movf	___flmul@aexp,w,c
  6520  001EF4  B4D8               	btfsc	status,2,c
  6521  001EF6  D003               	goto	u3650
  6522  001EF8  504B               	movf	___flmul@bexp,w,c
  6523  001EFA  A4D8               	btfss	status,2,c
  6524  001EFC  D009               	goto	l3349
  6525  001EFE                     u3650:
  6526  001EFE  0E00               	movlw	0
  6527  001F00  6E39               	movwf	?___flmul,c
  6528  001F02  0E00               	movlw	0
  6529  001F04  6E3A               	movwf	?___flmul+1,c
  6530  001F06  0E00               	movlw	0
  6531  001F08  6E3B               	movwf	?___flmul+2,c
  6532  001F0A  0E00               	movlw	0
  6533  001F0C  6E3C               	movwf	?___flmul+3,c
  6534  001F0E  0012               	return	
  6535  001F10                     l3349:
  6536  001F10  503F               	movf	___flmul@a+2,w,c
  6537  001F12  0239               	mulwf	___flmul@b,c
  6538  001F14  CFF3 F050          	movff	prodl,___flmul@temp
  6539  001F18  CFF4 F051          	movff	prodh,___flmul@temp+1
  6540  001F1C  5050               	movf	___flmul@temp,w,c
  6541  001F1E  6E46               	movwf	___flmul@grs,c
  6542  001F20  6A47               	clrf	___flmul@grs+1,c
  6543  001F22  6A48               	clrf	___flmul@grs+2,c
  6544  001F24  6A49               	clrf	___flmul@grs+3,c
  6545  001F26  5051               	movf	___flmul@temp+1,w,c
  6546  001F28  6E4C               	movwf	___flmul@prod,c
  6547  001F2A  6A4D               	clrf	___flmul@prod+1,c
  6548  001F2C  6A4E               	clrf	___flmul@prod+2,c
  6549  001F2E  6A4F               	clrf	___flmul@prod+3,c
  6550  001F30  503E               	movf	___flmul@a+1,w,c
  6551  001F32  023A               	mulwf	___flmul@b+1,c
  6552  001F34  CFF3 F050          	movff	prodl,___flmul@temp
  6553  001F38  CFF4 F051          	movff	prodh,___flmul@temp+1
  6554  001F3C  5050               	movf	___flmul@temp,w,c
  6555  001F3E  2646               	addwf	___flmul@grs,f,c
  6556  001F40  0E00               	movlw	0
  6557  001F42  2247               	addwfc	___flmul@grs+1,f,c
  6558  001F44  2248               	addwfc	___flmul@grs+2,f,c
  6559  001F46  2249               	addwfc	___flmul@grs+3,f,c
  6560  001F48  5051               	movf	___flmul@temp+1,w,c
  6561  001F4A  264C               	addwf	___flmul@prod,f,c
  6562  001F4C  0E00               	movlw	0
  6563  001F4E  224D               	addwfc	___flmul@prod+1,f,c
  6564  001F50  224E               	addwfc	___flmul@prod+2,f,c
  6565  001F52  224F               	addwfc	___flmul@prod+3,f,c
  6566  001F54  503D               	movf	___flmul@a,w,c
  6567  001F56  023B               	mulwf	___flmul@b+2,c
  6568  001F58  CFF3 F050          	movff	prodl,___flmul@temp
  6569  001F5C  CFF4 F051          	movff	prodh,___flmul@temp+1
  6570  001F60  5050               	movf	___flmul@temp,w,c
  6571  001F62  2646               	addwf	___flmul@grs,f,c
  6572  001F64  0E00               	movlw	0
  6573  001F66  2247               	addwfc	___flmul@grs+1,f,c
  6574  001F68  2248               	addwfc	___flmul@grs+2,f,c
  6575  001F6A  2249               	addwfc	___flmul@grs+3,f,c
  6576  001F6C  5051               	movf	___flmul@temp+1,w,c
  6577  001F6E  264C               	addwf	___flmul@prod,f,c
  6578  001F70  0E00               	movlw	0
  6579  001F72  224D               	addwfc	___flmul@prod+1,f,c
  6580  001F74  224E               	addwfc	___flmul@prod+2,f,c
  6581  001F76  224F               	addwfc	___flmul@prod+3,f,c
  6582  001F78  C048  F049         	movff	___flmul@grs+2,___flmul@grs+3
  6583  001F7C  C047  F048         	movff	___flmul@grs+1,___flmul@grs+2
  6584  001F80  C046  F047         	movff	___flmul@grs,___flmul@grs+1
  6585  001F84  6A46               	clrf	___flmul@grs,c
  6586  001F86  503D               	movf	___flmul@a,w,c
  6587  001F88  023A               	mulwf	___flmul@b+1,c
  6588  001F8A  CFF3 F050          	movff	prodl,___flmul@temp
  6589  001F8E  CFF4 F051          	movff	prodh,___flmul@temp+1
  6590  001F92  5050               	movf	___flmul@temp,w,c
  6591  001F94  2646               	addwf	___flmul@grs,f,c
  6592  001F96  5051               	movf	___flmul@temp+1,w,c
  6593  001F98  2247               	addwfc	___flmul@grs+1,f,c
  6594  001F9A  0E00               	movlw	0
  6595  001F9C  2248               	addwfc	___flmul@grs+2,f,c
  6596  001F9E  0E00               	movlw	0
  6597  001FA0  2249               	addwfc	___flmul@grs+3,f,c
  6598  001FA2  503E               	movf	___flmul@a+1,w,c
  6599  001FA4  0239               	mulwf	___flmul@b,c
  6600  001FA6  CFF3 F050          	movff	prodl,___flmul@temp
  6601  001FAA  CFF4 F051          	movff	prodh,___flmul@temp+1
  6602  001FAE  5050               	movf	___flmul@temp,w,c
  6603  001FB0  2646               	addwf	___flmul@grs,f,c
  6604  001FB2  5051               	movf	___flmul@temp+1,w,c
  6605  001FB4  2247               	addwfc	___flmul@grs+1,f,c
  6606  001FB6  0E00               	movlw	0
  6607  001FB8  2248               	addwfc	___flmul@grs+2,f,c
  6608  001FBA  0E00               	movlw	0
  6609  001FBC  2249               	addwfc	___flmul@grs+3,f,c
  6610  001FBE  C048  F049         	movff	___flmul@grs+2,___flmul@grs+3
  6611  001FC2  C047  F048         	movff	___flmul@grs+1,___flmul@grs+2
  6612  001FC6  C046  F047         	movff	___flmul@grs,___flmul@grs+1
  6613  001FCA  6A46               	clrf	___flmul@grs,c
  6614  001FCC  503D               	movf	___flmul@a,w,c
  6615  001FCE  0239               	mulwf	___flmul@b,c
  6616  001FD0  CFF3 F050          	movff	prodl,___flmul@temp
  6617  001FD4  CFF4 F051          	movff	prodh,___flmul@temp+1
  6618  001FD8  5050               	movf	___flmul@temp,w,c
  6619  001FDA  2646               	addwf	___flmul@grs,f,c
  6620  001FDC  5051               	movf	___flmul@temp+1,w,c
  6621  001FDE  2247               	addwfc	___flmul@grs+1,f,c
  6622  001FE0  0E00               	movlw	0
  6623  001FE2  2248               	addwfc	___flmul@grs+2,f,c
  6624  001FE4  0E00               	movlw	0
  6625  001FE6  2249               	addwfc	___flmul@grs+3,f,c
  6626  001FE8  503F               	movf	___flmul@a+2,w,c
  6627  001FEA  023A               	mulwf	___flmul@b+1,c
  6628  001FEC  CFF3 F050          	movff	prodl,___flmul@temp
  6629  001FF0  CFF4 F051          	movff	prodh,___flmul@temp+1
  6630  001FF4  5050               	movf	___flmul@temp,w,c
  6631  001FF6  264C               	addwf	___flmul@prod,f,c
  6632  001FF8  5051               	movf	___flmul@temp+1,w,c
  6633  001FFA  224D               	addwfc	___flmul@prod+1,f,c
  6634  001FFC  0E00               	movlw	0
  6635  001FFE  224E               	addwfc	___flmul@prod+2,f,c
  6636  002000  0E00               	movlw	0
  6637  002002  224F               	addwfc	___flmul@prod+3,f,c
  6638  002004  503E               	movf	___flmul@a+1,w,c
  6639  002006  023B               	mulwf	___flmul@b+2,c
  6640  002008  CFF3 F050          	movff	prodl,___flmul@temp
  6641  00200C  CFF4 F051          	movff	prodh,___flmul@temp+1
  6642  002010  5050               	movf	___flmul@temp,w,c
  6643  002012  264C               	addwf	___flmul@prod,f,c
  6644  002014  5051               	movf	___flmul@temp+1,w,c
  6645  002016  224D               	addwfc	___flmul@prod+1,f,c
  6646  002018  0E00               	movlw	0
  6647  00201A  224E               	addwfc	___flmul@prod+2,f,c
  6648  00201C  0E00               	movlw	0
  6649  00201E  224F               	addwfc	___flmul@prod+3,f,c
  6650  002020  503F               	movf	___flmul@a+2,w,c
  6651  002022  023B               	mulwf	___flmul@b+2,c
  6652  002024  CFF3 F050          	movff	prodl,___flmul@temp
  6653  002028  CFF4 F051          	movff	prodh,___flmul@temp+1
  6654  00202C  5050               	movf	___flmul@temp,w,c
  6655  00202E  6E41               	movwf	??___flmul& (0+255),c
  6656  002030  5051               	movf	___flmul@temp+1,w,c
  6657  002032  6E42               	movwf	(??___flmul+1)& (0+255),c
  6658  002034  6A43               	clrf	(??___flmul+2)& (0+255),c
  6659  002036  6A44               	clrf	(??___flmul+3)& (0+255),c
  6660  002038  C043  F044         	movff	??___flmul+2,??___flmul+3
  6661  00203C  C042  F043         	movff	??___flmul+1,??___flmul+2
  6662  002040  C041  F042         	movff	??___flmul,??___flmul+1
  6663  002044  6A41               	clrf	??___flmul,c
  6664  002046  5041               	movf	??___flmul,w,c
  6665  002048  264C               	addwf	___flmul@prod,f,c
  6666  00204A  5042               	movf	??___flmul+1,w,c
  6667  00204C  224D               	addwfc	___flmul@prod+1,f,c
  6668  00204E  5043               	movf	??___flmul+2,w,c
  6669  002050  224E               	addwfc	___flmul@prod+2,f,c
  6670  002052  5044               	movf	??___flmul+3,w,c
  6671  002054  224F               	addwfc	___flmul@prod+3,f,c
  6672  002056  C046  F041         	movff	___flmul@grs,??___flmul
  6673  00205A  C047  F042         	movff	___flmul@grs+1,??___flmul+1
  6674  00205E  C048  F043         	movff	___flmul@grs+2,??___flmul+2
  6675  002062  C049  F044         	movff	___flmul@grs+3,??___flmul+3
  6676  002066  0E19               	movlw	25
  6677  002068  D005               	goto	u3660
  6678  00206A                     u3665:
  6679  00206A  90D8               	bcf	status,0,c
  6680  00206C  3244               	rrcf	??___flmul+3,f,c
  6681  00206E  3243               	rrcf	??___flmul+2,f,c
  6682  002070  3242               	rrcf	??___flmul+1,f,c
  6683  002072  3241               	rrcf	??___flmul,f,c
  6684  002074                     u3660:
  6685  002074  2EE8               	decfsz	wreg,f,c
  6686  002076  D7F9               	goto	u3665
  6687  002078  5041               	movf	??___flmul,w,c
  6688  00207A  264C               	addwf	___flmul@prod,f,c
  6689  00207C  5042               	movf	??___flmul+1,w,c
  6690  00207E  224D               	addwfc	___flmul@prod+1,f,c
  6691  002080  5043               	movf	??___flmul+2,w,c
  6692  002082  224E               	addwfc	___flmul@prod+2,f,c
  6693  002084  5044               	movf	??___flmul+3,w,c
  6694  002086  224F               	addwfc	___flmul@prod+3,f,c
  6695  002088  C048  F049         	movff	___flmul@grs+2,___flmul@grs+3
  6696  00208C  C047  F048         	movff	___flmul@grs+1,___flmul@grs+2
  6697  002090  C046  F047         	movff	___flmul@grs,___flmul@grs+1
  6698  002094  6A46               	clrf	___flmul@grs,c
  6699  002096  504A               	movf	___flmul@aexp,w,c
  6700  002098  C04B  F041         	movff	___flmul@bexp,??___flmul
  6701  00209C  6A42               	clrf	(??___flmul+1)& (0+255),c
  6702  00209E  2641               	addwf	??___flmul,f,c
  6703  0020A0  0E00               	movlw	0
  6704  0020A2  2242               	addwfc	??___flmul+1,f,c
  6705  0020A4  0E82               	movlw	130
  6706  0020A6  2441               	addwf	??___flmul,w,c
  6707  0020A8  6E50               	movwf	___flmul@temp,c
  6708  0020AA  0EFF               	movlw	255
  6709  0020AC  2042               	addwfc	??___flmul+1,w,c
  6710  0020AE  6E51               	movwf	___flmul@temp+1,c
  6711  0020B0  D00F               	goto	l3397
  6712  0020B2                     l3391:
  6713  0020B2  90D8               	bcf	status,0,c
  6714  0020B4  364C               	rlcf	___flmul@prod,f,c
  6715  0020B6  364D               	rlcf	___flmul@prod+1,f,c
  6716  0020B8  364E               	rlcf	___flmul@prod+2,f,c
  6717  0020BA  364F               	rlcf	___flmul@prod+3,f,c
  6718  0020BC  BE49               	btfsc	___flmul@grs+3,7,c
  6719  0020BE  804C               	bsf	___flmul@prod,0,c
  6720  0020C0  90D8               	bcf	status,0,c
  6721  0020C2  3646               	rlcf	___flmul@grs,f,c
  6722  0020C4  3647               	rlcf	___flmul@grs+1,f,c
  6723  0020C6  3648               	rlcf	___flmul@grs+2,f,c
  6724  0020C8  3649               	rlcf	___flmul@grs+3,f,c
  6725  0020CA  0650               	decf	___flmul@temp,f,c
  6726  0020CC  A0D8               	btfss	status,0,c
  6727  0020CE  0651               	decf	___flmul@temp+1,f,c
  6728  0020D0                     l3397:
  6729  0020D0  AE4E               	btfss	___flmul@prod+2,7,c
  6730  0020D2  D7EF               	goto	l3391
  6731  0020D4  0E00               	movlw	0
  6732  0020D6  6E4A               	movwf	___flmul@aexp,c
  6733  0020D8  AE49               	btfss	___flmul@grs+3,7,c
  6734  0020DA  D017               	goto	l1010
  6735  0020DC  0EFF               	movlw	255
  6736  0020DE  1446               	andwf	___flmul@grs,w,c
  6737  0020E0  6E41               	movwf	??___flmul& (0+255),c
  6738  0020E2  0EFF               	movlw	255
  6739  0020E4  1447               	andwf	___flmul@grs+1,w,c
  6740  0020E6  6E42               	movwf	(??___flmul+1)& (0+255),c
  6741  0020E8  0EFF               	movlw	255
  6742  0020EA  1448               	andwf	___flmul@grs+2,w,c
  6743  0020EC  6E43               	movwf	(??___flmul+2)& (0+255),c
  6744  0020EE  0E7F               	movlw	127
  6745  0020F0  1449               	andwf	___flmul@grs+3,w,c
  6746  0020F2  6E44               	movwf	(??___flmul+3)& (0+255),c
  6747  0020F4  5041               	movf	??___flmul,w,c
  6748  0020F6  1042               	iorwf	??___flmul+1,w,c
  6749  0020F8  1043               	iorwf	??___flmul+2,w,c
  6750  0020FA  1044               	iorwf	??___flmul+3,w,c
  6751  0020FC  B4D8               	btfsc	status,2,c
  6752  0020FE  D003               	goto	l1011
  6753  002100                     u3700:
  6754  002100  0E01               	movlw	1
  6755  002102  6E4A               	movwf	___flmul@aexp,c
  6756  002104  D002               	goto	l1010
  6757  002106                     l1011:
  6758  002106  B04C               	btfsc	___flmul@prod,0,c
  6759  002108  D7FB               	goto	u3700
  6760  00210A                     l1010:
  6761  00210A  504A               	movf	___flmul@aexp,w,c
  6762  00210C  B4D8               	btfsc	status,2,c
  6763  00210E  D01F               	goto	l3417
  6764  002110  0E01               	movlw	1
  6765  002112  264C               	addwf	___flmul@prod,f,c
  6766  002114  0E00               	movlw	0
  6767  002116  224D               	addwfc	___flmul@prod+1,f,c
  6768  002118  224E               	addwfc	___flmul@prod+2,f,c
  6769  00211A  224F               	addwfc	___flmul@prod+3,f,c
  6770  00211C  A04F               	btfss	___flmul@prod+3,0,c
  6771  00211E  D017               	goto	l3417
  6772  002120  C04C  F041         	movff	___flmul@prod,??___flmul
  6773  002124  C04D  F042         	movff	___flmul@prod+1,??___flmul+1
  6774  002128  C04E  F043         	movff	___flmul@prod+2,??___flmul+2
  6775  00212C  C04F  F044         	movff	___flmul@prod+3,??___flmul+3
  6776  002130  3444               	rlcf	??___flmul+3,w,c
  6777  002132  3244               	rrcf	??___flmul+3,f,c
  6778  002134  3243               	rrcf	??___flmul+2,f,c
  6779  002136  3242               	rrcf	??___flmul+1,f,c
  6780  002138  3241               	rrcf	??___flmul,f,c
  6781  00213A  C041  F04C         	movff	??___flmul,___flmul@prod
  6782  00213E  C042  F04D         	movff	??___flmul+1,___flmul@prod+1
  6783  002142  C043  F04E         	movff	??___flmul+2,___flmul@prod+2
  6784  002146  C044  F04F         	movff	??___flmul+3,___flmul@prod+3
  6785  00214A  4A50               	infsnz	___flmul@temp,f,c
  6786  00214C  2A51               	incf	___flmul@temp+1,f,c
  6787  00214E                     l3417:
  6788  00214E  BE51               	btfsc	___flmul@temp+1,7,c
  6789  002150  D00D               	goto	l3421
  6790  002152  5051               	movf	___flmul@temp+1,w,c
  6791  002154  E103               	bnz	u3740
  6792  002156  2850               	incf	___flmul@temp,w,c
  6793  002158  A0D8               	btfss	status,0,c
  6794  00215A  D008               	goto	l3421
  6795  00215C                     u3740:
  6796  00215C  0E00               	movlw	0
  6797  00215E  6E4C               	movwf	___flmul@prod,c
  6798  002160  0E00               	movlw	0
  6799  002162  6E4D               	movwf	___flmul@prod+1,c
  6800  002164  0E80               	movlw	128
  6801  002166  6E4E               	movwf	___flmul@prod+2,c
  6802  002168  0E7F               	movlw	127
  6803  00216A  D020               	goto	L10
  6804  00216C                     l3421:
  6805  00216C  BE51               	btfsc	___flmul@temp+1,7,c
  6806  00216E  D005               	goto	u3750
  6807  002170  5051               	movf	___flmul@temp+1,w,c
  6808  002172  E10E               	bnz	l1018
  6809  002174  0450               	decf	___flmul@temp,w,c
  6810  002176  B0D8               	btfsc	status,0,c
  6811  002178  D00B               	goto	l1018
  6812  00217A                     u3750:
  6813  00217A  0E00               	movlw	0
  6814  00217C  6E4C               	movwf	___flmul@prod,c
  6815  00217E  0E00               	movlw	0
  6816  002180  6E4D               	movwf	___flmul@prod+1,c
  6817  002182  0E00               	movlw	0
  6818  002184  6E4E               	movwf	___flmul@prod+2,c
  6819  002186  0E00               	movlw	0
  6820  002188  6E4F               	movwf	___flmul@prod+3,c
  6821  00218A  0E00               	movlw	0
  6822  00218C  6E45               	movwf	___flmul@sign,c
  6823  00218E  D00F               	goto	l3433
  6824  002190                     l1018:
  6825  002190  C050  F04B         	movff	___flmul@temp,___flmul@bexp
  6826  002194  0EFF               	movlw	255
  6827  002196  164C               	andwf	___flmul@prod,f,c
  6828  002198  0EFF               	movlw	255
  6829  00219A  164D               	andwf	___flmul@prod+1,f,c
  6830  00219C  0E7F               	movlw	127
  6831  00219E  164E               	andwf	___flmul@prod+2,f,c
  6832  0021A0  0E00               	movlw	0
  6833  0021A2  164F               	andwf	___flmul@prod+3,f,c
  6834  0021A4  B04B               	btfsc	___flmul@bexp,0,c
  6835  0021A6  8E4E               	bsf	___flmul@prod+2,7,c
  6836  0021A8  90D8               	bcf	status,0,c
  6837  0021AA  304B               	rrcf	___flmul@bexp,w,c
  6838  0021AC                     L10:
  6839  0021AC  6E4F               	movwf	___flmul@prod+3,c
  6840  0021AE                     l3433:
  6841  0021AE  5045               	movf	___flmul@sign,w,c
  6842  0021B0  124F               	iorwf	___flmul@prod+3,f,c
  6843  0021B2  C04C  F039         	movff	___flmul@prod,?___flmul
  6844  0021B6  C04D  F03A         	movff	___flmul@prod+1,?___flmul+1
  6845  0021BA  C04E  F03B         	movff	___flmul@prod+2,?___flmul+2
  6846  0021BE  C04F  F03C         	movff	___flmul@prod+3,?___flmul+3
  6847  0021C2  0012               	return		;funcret
  6848  0021C4                     __end_of___flmul:
  6849                           	opt callstack 0
  6850                           
  6851 ;; *************** function ___flge *****************
  6852 ;; Defined at:
  6853 ;;		line 4 in file "D:\Microchip\pic\sources\c99\common\flge.c"
  6854 ;; Parameters:    Size  Location     Type
  6855 ;;  ff1             4   81[COMRAM] unsigned char 
  6856 ;;  ff2             4   85[COMRAM] unsigned char 
  6857 ;; Auto vars:     Size  Location     Type
  6858 ;;		None
  6859 ;; Return value:  Size  Location     Type
  6860 ;;		None               void
  6861 ;; Registers used:
  6862 ;;		wreg, status,2, status,0
  6863 ;; Tracked objects:
  6864 ;;		On entry : 0/0
  6865 ;;		On exit  : 0/0
  6866 ;;		Unchanged: 0/0
  6867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6868 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6870 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6871 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6872 ;;Total ram usage:       12 bytes
  6873 ;; Hardware stack levels used:    1
  6874 ;; This function calls:
  6875 ;;		Nothing
  6876 ;; This function is called by:
  6877 ;;		_main
  6878 ;;		_efgtoa
  6879 ;; This function uses a non-reentrant model
  6880 ;;
  6881                           
  6882                           	psect	text31
  6883  002D06                     __ptext31:
  6884                           	opt callstack 0
  6885  002D06                     ___flge:
  6886                           	opt callstack 26
  6887                           
  6888                           ;incstack = 0
  6889  002D06  0E00               	movlw	0
  6890  002D08  1452               	andwf	___flge@ff1,w,c
  6891  002D0A  6E5A               	movwf	??___flge& (0+255),c
  6892  002D0C  0E00               	movlw	0
  6893  002D0E  1453               	andwf	___flge@ff1+1,w,c
  6894  002D10  6E5B               	movwf	(??___flge+1)& (0+255),c
  6895  002D12  0E80               	movlw	128
  6896  002D14  1454               	andwf	___flge@ff1+2,w,c
  6897  002D16  6E5C               	movwf	(??___flge+2)& (0+255),c
  6898  002D18  0E7F               	movlw	127
  6899  002D1A  1455               	andwf	___flge@ff1+3,w,c
  6900  002D1C  6E5D               	movwf	(??___flge+3)& (0+255),c
  6901  002D1E  505A               	movf	??___flge,w,c
  6902  002D20  105B               	iorwf	??___flge+1,w,c
  6903  002D22  105C               	iorwf	??___flge+2,w,c
  6904  002D24  105D               	iorwf	??___flge+3,w,c
  6905  002D26  A4D8               	btfss	status,2,c
  6906  002D28  D008               	goto	l3545
  6907  002D2A  0E00               	movlw	0
  6908  002D2C  6E52               	movwf	___flge@ff1,c
  6909  002D2E  0E00               	movlw	0
  6910  002D30  6E53               	movwf	___flge@ff1+1,c
  6911  002D32  0E00               	movlw	0
  6912  002D34  6E54               	movwf	___flge@ff1+2,c
  6913  002D36  0E00               	movlw	0
  6914  002D38  6E55               	movwf	___flge@ff1+3,c
  6915  002D3A                     l3545:
  6916  002D3A  0E00               	movlw	0
  6917  002D3C  1456               	andwf	___flge@ff2,w,c
  6918  002D3E  6E5A               	movwf	??___flge& (0+255),c
  6919  002D40  0E00               	movlw	0
  6920  002D42  1457               	andwf	___flge@ff2+1,w,c
  6921  002D44  6E5B               	movwf	(??___flge+1)& (0+255),c
  6922  002D46  0E80               	movlw	128
  6923  002D48  1458               	andwf	___flge@ff2+2,w,c
  6924  002D4A  6E5C               	movwf	(??___flge+2)& (0+255),c
  6925  002D4C  0E7F               	movlw	127
  6926  002D4E  1459               	andwf	___flge@ff2+3,w,c
  6927  002D50  6E5D               	movwf	(??___flge+3)& (0+255),c
  6928  002D52  505A               	movf	??___flge,w,c
  6929  002D54  105B               	iorwf	??___flge+1,w,c
  6930  002D56  105C               	iorwf	??___flge+2,w,c
  6931  002D58  105D               	iorwf	??___flge+3,w,c
  6932  002D5A  A4D8               	btfss	status,2,c
  6933  002D5C  D008               	goto	l3549
  6934  002D5E  0E00               	movlw	0
  6935  002D60  6E56               	movwf	___flge@ff2,c
  6936  002D62  0E00               	movlw	0
  6937  002D64  6E57               	movwf	___flge@ff2+1,c
  6938  002D66  0E00               	movlw	0
  6939  002D68  6E58               	movwf	___flge@ff2+2,c
  6940  002D6A  0E00               	movlw	0
  6941  002D6C  6E59               	movwf	___flge@ff2+3,c
  6942  002D6E                     l3549:
  6943  002D6E  AE55               	btfss	___flge@ff1+3,7,c
  6944  002D70  D009               	goto	l3553
  6945  002D72  6C52               	negf	___flge@ff1,c
  6946  002D74  1E53               	comf	___flge@ff1+1,f,c
  6947  002D76  B0D8               	btfsc	status,0,c
  6948  002D78  2A53               	incf	___flge@ff1+1,f,c
  6949  002D7A  1E54               	comf	___flge@ff1+2,f,c
  6950  002D7C  B0D8               	btfsc	status,0,c
  6951  002D7E  2A54               	incf	___flge@ff1+2,f,c
  6952  002D80  0E80               	movlw	128
  6953  002D82  5655               	subfwb	___flge@ff1+3,f,c
  6954  002D84                     l3553:
  6955  002D84  AE59               	btfss	___flge@ff2+3,7,c
  6956  002D86  D009               	goto	l652
  6957  002D88  6C56               	negf	___flge@ff2,c
  6958  002D8A  1E57               	comf	___flge@ff2+1,f,c
  6959  002D8C  B0D8               	btfsc	status,0,c
  6960  002D8E  2A57               	incf	___flge@ff2+1,f,c
  6961  002D90  1E58               	comf	___flge@ff2+2,f,c
  6962  002D92  B0D8               	btfsc	status,0,c
  6963  002D94  2A58               	incf	___flge@ff2+2,f,c
  6964  002D96  0E80               	movlw	128
  6965  002D98  5659               	subfwb	___flge@ff2+3,f,c
  6966  002D9A                     l652:
  6967  002D9A  0E00               	movlw	0
  6968  002D9C  1A52               	xorwf	___flge@ff1,f,c
  6969  002D9E  0E00               	movlw	0
  6970  002DA0  1A53               	xorwf	___flge@ff1+1,f,c
  6971  002DA2  0E00               	movlw	0
  6972  002DA4  1A54               	xorwf	___flge@ff1+2,f,c
  6973  002DA6  0E80               	movlw	128
  6974  002DA8  1A55               	xorwf	___flge@ff1+3,f,c
  6975  002DAA  0E00               	movlw	0
  6976  002DAC  1A56               	xorwf	___flge@ff2,f,c
  6977  002DAE  0E00               	movlw	0
  6978  002DB0  1A57               	xorwf	___flge@ff2+1,f,c
  6979  002DB2  0E00               	movlw	0
  6980  002DB4  1A58               	xorwf	___flge@ff2+2,f,c
  6981  002DB6  0E80               	movlw	128
  6982  002DB8  1A59               	xorwf	___flge@ff2+3,f,c
  6983  002DBA  5056               	movf	___flge@ff2,w,c
  6984  002DBC  5C52               	subwf	___flge@ff1,w,c
  6985  002DBE  5057               	movf	___flge@ff2+1,w,c
  6986  002DC0  5853               	subwfb	___flge@ff1+1,w,c
  6987  002DC2  5058               	movf	___flge@ff2+2,w,c
  6988  002DC4  5854               	subwfb	___flge@ff1+2,w,c
  6989  002DC6  5059               	movf	___flge@ff2+3,w,c
  6990  002DC8  5855               	subwfb	___flge@ff1+3,w,c
  6991  002DCA  B0D8               	btfsc	status,0,c
  6992  002DCC  D002               	goto	l3559
  6993  002DCE  90D8               	bcf	status,0,c
  6994  002DD0  0012               	return	
  6995  002DD2                     l3559:
  6996  002DD2  80D8               	bsf	status,0,c
  6997  002DD4  0012               	return		;funcret
  6998  002DD6                     __end_of___flge:
  6999                           	opt callstack 0
  7000                           
  7001 ;; *************** function ___fleq *****************
  7002 ;; Defined at:
  7003 ;;		line 4 in file "D:\Microchip\pic\sources\c99\common\fleq.c"
  7004 ;; Parameters:    Size  Location     Type
  7005 ;;  ff1             4    0[COMRAM] unsigned char 
  7006 ;;  ff2             4    4[COMRAM] unsigned char 
  7007 ;; Auto vars:     Size  Location     Type
  7008 ;;		None
  7009 ;; Return value:  Size  Location     Type
  7010 ;;		None               void
  7011 ;; Registers used:
  7012 ;;		wreg, status,2, status,0
  7013 ;; Tracked objects:
  7014 ;;		On entry : 0/0
  7015 ;;		On exit  : 0/0
  7016 ;;		Unchanged: 0/0
  7017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7018 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7020 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7021 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7022 ;;Total ram usage:       12 bytes
  7023 ;; Hardware stack levels used:    1
  7024 ;; This function calls:
  7025 ;;		Nothing
  7026 ;; This function is called by:
  7027 ;;		_efgtoa
  7028 ;; This function uses a non-reentrant model
  7029 ;;
  7030                           
  7031                           	psect	text32
  7032  003134                     __ptext32:
  7033                           	opt callstack 0
  7034  003134                     ___fleq:
  7035                           	opt callstack 26
  7036                           
  7037                           ;incstack = 0
  7038  003134  0E00               	movlw	0
  7039  003136  1401               	andwf	___fleq@ff1,w,c
  7040  003138  6E09               	movwf	??___fleq& (0+255),c
  7041  00313A  0E00               	movlw	0
  7042  00313C  1402               	andwf	___fleq@ff1+1,w,c
  7043  00313E  6E0A               	movwf	(??___fleq+1)& (0+255),c
  7044  003140  0E80               	movlw	128
  7045  003142  1403               	andwf	___fleq@ff1+2,w,c
  7046  003144  6E0B               	movwf	(??___fleq+2)& (0+255),c
  7047  003146  0E7F               	movlw	127
  7048  003148  1404               	andwf	___fleq@ff1+3,w,c
  7049  00314A  6E0C               	movwf	(??___fleq+3)& (0+255),c
  7050  00314C  5009               	movf	??___fleq,w,c
  7051  00314E  100A               	iorwf	??___fleq+1,w,c
  7052  003150  100B               	iorwf	??___fleq+2,w,c
  7053  003152  100C               	iorwf	??___fleq+3,w,c
  7054  003154  A4D8               	btfss	status,2,c
  7055  003156  D008               	goto	l3529
  7056  003158  0E00               	movlw	0
  7057  00315A  6E01               	movwf	___fleq@ff1,c
  7058  00315C  0E00               	movlw	0
  7059  00315E  6E02               	movwf	___fleq@ff1+1,c
  7060  003160  0E00               	movlw	0
  7061  003162  6E03               	movwf	___fleq@ff1+2,c
  7062  003164  0E00               	movlw	0
  7063  003166  6E04               	movwf	___fleq@ff1+3,c
  7064  003168                     l3529:
  7065  003168  0E00               	movlw	0
  7066  00316A  1405               	andwf	___fleq@ff2,w,c
  7067  00316C  6E09               	movwf	??___fleq& (0+255),c
  7068  00316E  0E00               	movlw	0
  7069  003170  1406               	andwf	___fleq@ff2+1,w,c
  7070  003172  6E0A               	movwf	(??___fleq+1)& (0+255),c
  7071  003174  0E80               	movlw	128
  7072  003176  1407               	andwf	___fleq@ff2+2,w,c
  7073  003178  6E0B               	movwf	(??___fleq+2)& (0+255),c
  7074  00317A  0E7F               	movlw	127
  7075  00317C  1408               	andwf	___fleq@ff2+3,w,c
  7076  00317E  6E0C               	movwf	(??___fleq+3)& (0+255),c
  7077  003180  5009               	movf	??___fleq,w,c
  7078  003182  100A               	iorwf	??___fleq+1,w,c
  7079  003184  100B               	iorwf	??___fleq+2,w,c
  7080  003186  100C               	iorwf	??___fleq+3,w,c
  7081  003188  A4D8               	btfss	status,2,c
  7082  00318A  D008               	goto	l3533
  7083  00318C  0E00               	movlw	0
  7084  00318E  6E05               	movwf	___fleq@ff2,c
  7085  003190  0E00               	movlw	0
  7086  003192  6E06               	movwf	___fleq@ff2+1,c
  7087  003194  0E00               	movlw	0
  7088  003196  6E07               	movwf	___fleq@ff2+2,c
  7089  003198  0E00               	movlw	0
  7090  00319A  6E08               	movwf	___fleq@ff2+3,c
  7091  00319C                     l3533:
  7092  00319C  5005               	movf	___fleq@ff2,w,c
  7093  00319E  1801               	xorwf	___fleq@ff1,w,c
  7094  0031A0  E10A               	bnz	u3910
  7095  0031A2  5006               	movf	___fleq@ff2+1,w,c
  7096  0031A4  1802               	xorwf	___fleq@ff1+1,w,c
  7097  0031A6  E107               	bnz	u3910
  7098  0031A8  5007               	movf	___fleq@ff2+2,w,c
  7099  0031AA  1803               	xorwf	___fleq@ff1+2,w,c
  7100  0031AC  E104               	bnz	u3910
  7101  0031AE  5008               	movf	___fleq@ff2+3,w,c
  7102  0031B0  1804               	xorwf	___fleq@ff1+3,w,c
  7103  0031B2  B4D8               	btfsc	status,2,c
  7104  0031B4  D002               	goto	l3537
  7105  0031B6                     u3910:
  7106  0031B6  90D8               	bcf	status,0,c
  7107  0031B8  0012               	return	
  7108  0031BA                     l3537:
  7109  0031BA  80D8               	bsf	status,0,c
  7110  0031BC  0012               	return		;funcret
  7111  0031BE                     __end_of___fleq:
  7112                           	opt callstack 0
  7113                           
  7114 ;; *************** function ___fldiv *****************
  7115 ;; Defined at:
  7116 ;;		line 11 in file "D:\Microchip\pic\sources\c99\common\sprcdiv.c"
  7117 ;; Parameters:    Size  Location     Type
  7118 ;;  b               4   20[COMRAM] unsigned char 
  7119 ;;  a               4   24[COMRAM] unsigned char 
  7120 ;; Auto vars:     Size  Location     Type
  7121 ;;  grs             4   39[COMRAM] unsigned long 
  7122 ;;  rem             4   32[COMRAM] unsigned long 
  7123 ;;  new_exp         2   37[COMRAM] short 
  7124 ;;  aexp            1   44[COMRAM] unsigned char 
  7125 ;;  bexp            1   43[COMRAM] unsigned char 
  7126 ;;  sign            1   36[COMRAM] unsigned char 
  7127 ;; Return value:  Size  Location     Type
  7128 ;;                  4   20[COMRAM] unsigned char 
  7129 ;; Registers used:
  7130 ;;		wreg, status,2, status,0
  7131 ;; Tracked objects:
  7132 ;;		On entry : 0/0
  7133 ;;		On exit  : 0/0
  7134 ;;		Unchanged: 0/0
  7135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7136 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7137 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7138 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7139 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7140 ;;Total ram usage:       25 bytes
  7141 ;; Hardware stack levels used:    1
  7142 ;; This function calls:
  7143 ;;		Nothing
  7144 ;; This function is called by:
  7145 ;;		_read_adc_voltage
  7146 ;;		_efgtoa
  7147 ;; This function uses a non-reentrant model
  7148 ;;
  7149                           
  7150                           	psect	text33
  7151  0024D0                     __ptext33:
  7152                           	opt callstack 0
  7153  0024D0                     ___fldiv:
  7154                           	opt callstack 26
  7155                           
  7156                           ;incstack = 0
  7157  0024D0  5018               	movf	___fldiv@b+3,w,c
  7158  0024D2  0B80               	andlw	128
  7159  0024D4  6E25               	movwf	___fldiv@sign,c
  7160  0024D6  5018               	movf	___fldiv@b+3,w,c
  7161  0024D8  2418               	addwf	___fldiv@b+3,w,c
  7162  0024DA  6E2C               	movwf	___fldiv@bexp,c
  7163  0024DC  BE17               	btfsc	___fldiv@b+2,7,c
  7164  0024DE  802C               	bsf	___fldiv@bexp,0,c
  7165  0024E0  502C               	movf	___fldiv@bexp,w,c
  7166  0024E2  B4D8               	btfsc	status,2,c
  7167  0024E4  D00D               	goto	l3187
  7168  0024E6  282C               	incf	___fldiv@bexp,w,c
  7169  0024E8  A4D8               	btfss	status,2,c
  7170  0024EA  D008               	goto	l3183
  7171  0024EC  0E00               	movlw	0
  7172  0024EE  6E15               	movwf	___fldiv@b,c
  7173  0024F0  0E00               	movlw	0
  7174  0024F2  6E16               	movwf	___fldiv@b+1,c
  7175  0024F4  0E00               	movlw	0
  7176  0024F6  6E17               	movwf	___fldiv@b+2,c
  7177  0024F8  0E00               	movlw	0
  7178  0024FA  6E18               	movwf	___fldiv@b+3,c
  7179  0024FC                     l3183:
  7180  0024FC  8E17               	bsf	___fldiv@b+2,7,c
  7181  0024FE  D006               	goto	L11
  7182  002500                     l3187:
  7183  002500  0E00               	movlw	0
  7184  002502  6E15               	movwf	___fldiv@b,c
  7185  002504  0E00               	movlw	0
  7186  002506  6E16               	movwf	___fldiv@b+1,c
  7187  002508  0E00               	movlw	0
  7188  00250A  6E17               	movwf	___fldiv@b+2,c
  7189  00250C                     L11:
  7190  00250C  0E00               	movlw	0
  7191  00250E  6E18               	movwf	___fldiv@b+3,c
  7192  002510  501C               	movf	___fldiv@a+3,w,c
  7193  002512  0B80               	andlw	128
  7194  002514  1A25               	xorwf	___fldiv@sign,f,c
  7195  002516  501C               	movf	___fldiv@a+3,w,c
  7196  002518  241C               	addwf	___fldiv@a+3,w,c
  7197  00251A  6E2D               	movwf	___fldiv@aexp,c
  7198  00251C  BE1B               	btfsc	___fldiv@a+2,7,c
  7199  00251E  802D               	bsf	___fldiv@aexp,0,c
  7200  002520  502D               	movf	___fldiv@aexp,w,c
  7201  002522  B4D8               	btfsc	status,2,c
  7202  002524  D00D               	goto	l3207
  7203  002526  282D               	incf	___fldiv@aexp,w,c
  7204  002528  A4D8               	btfss	status,2,c
  7205  00252A  D008               	goto	l3203
  7206  00252C  0E00               	movlw	0
  7207  00252E  6E19               	movwf	___fldiv@a,c
  7208  002530  0E00               	movlw	0
  7209  002532  6E1A               	movwf	___fldiv@a+1,c
  7210  002534  0E00               	movlw	0
  7211  002536  6E1B               	movwf	___fldiv@a+2,c
  7212  002538  0E00               	movlw	0
  7213  00253A  6E1C               	movwf	___fldiv@a+3,c
  7214  00253C                     l3203:
  7215  00253C  8E1B               	bsf	___fldiv@a+2,7,c
  7216  00253E  D006               	goto	L12
  7217  002540                     l3207:
  7218  002540  0E00               	movlw	0
  7219  002542  6E19               	movwf	___fldiv@a,c
  7220  002544  0E00               	movlw	0
  7221  002546  6E1A               	movwf	___fldiv@a+1,c
  7222  002548  0E00               	movlw	0
  7223  00254A  6E1B               	movwf	___fldiv@a+2,c
  7224  00254C                     L12:
  7225  00254C  0E00               	movlw	0
  7226  00254E  6E1C               	movwf	___fldiv@a+3,c
  7227  002550  5019               	movf	___fldiv@a,w,c
  7228  002552  101A               	iorwf	___fldiv@a+1,w,c
  7229  002554  101B               	iorwf	___fldiv@a+2,w,c
  7230  002556  101C               	iorwf	___fldiv@a+3,w,c
  7231  002558  A4D8               	btfss	status,2,c
  7232  00255A  D017               	goto	l3221
  7233  00255C  0E00               	movlw	0
  7234  00255E  6E15               	movwf	___fldiv@b,c
  7235  002560  0E00               	movlw	0
  7236  002562  6E16               	movwf	___fldiv@b+1,c
  7237  002564  0E00               	movlw	0
  7238  002566  6E17               	movwf	___fldiv@b+2,c
  7239  002568  0E00               	movlw	0
  7240  00256A  6E18               	movwf	___fldiv@b+3,c
  7241  00256C  0E80               	movlw	128
  7242  00256E  1217               	iorwf	___fldiv@b+2,f,c
  7243  002570  0E7F               	movlw	127
  7244  002572  1218               	iorwf	___fldiv@b+3,f,c
  7245  002574                     l3215:
  7246  002574  5025               	movf	___fldiv@sign,w,c
  7247  002576  1218               	iorwf	___fldiv@b+3,f,c
  7248  002578  C015  F015         	movff	___fldiv@b,?___fldiv
  7249  00257C  C016  F016         	movff	___fldiv@b+1,?___fldiv+1
  7250  002580  C017  F017         	movff	___fldiv@b+2,?___fldiv+2
  7251  002584  C018  F018         	movff	___fldiv@b+3,?___fldiv+3
  7252  002588  0012               	return	
  7253  00258A                     l3221:
  7254  00258A  502C               	movf	___fldiv@bexp,w,c
  7255  00258C  A4D8               	btfss	status,2,c
  7256  00258E  D009               	goto	l3229
  7257  002590  0E00               	movlw	0
  7258  002592  6E15               	movwf	?___fldiv,c
  7259  002594  0E00               	movlw	0
  7260  002596  6E16               	movwf	?___fldiv+1,c
  7261  002598  0E00               	movlw	0
  7262  00259A  6E17               	movwf	?___fldiv+2,c
  7263  00259C  0E00               	movlw	0
  7264  00259E  6E18               	movwf	?___fldiv+3,c
  7265  0025A0  0012               	return	
  7266  0025A2                     l3229:
  7267  0025A2  502D               	movf	___fldiv@aexp,w,c
  7268  0025A4  C02C  F01D         	movff	___fldiv@bexp,??___fldiv
  7269  0025A8  6A1E               	clrf	(??___fldiv+1)& (0+255),c
  7270  0025AA  5E1D               	subwf	??___fldiv,f,c
  7271  0025AC  0E00               	movlw	0
  7272  0025AE  5A1E               	subwfb	??___fldiv+1,f,c
  7273  0025B0  0E7F               	movlw	127
  7274  0025B2  241D               	addwf	??___fldiv,w,c
  7275  0025B4  6E26               	movwf	___fldiv@new_exp,c
  7276  0025B6  0E00               	movlw	0
  7277  0025B8  201E               	addwfc	??___fldiv+1,w,c
  7278  0025BA  6E27               	movwf	___fldiv@new_exp+1,c
  7279  0025BC  C015  F021         	movff	___fldiv@b,___fldiv@rem
  7280  0025C0  C016  F022         	movff	___fldiv@b+1,___fldiv@rem+1
  7281  0025C4  C017  F023         	movff	___fldiv@b+2,___fldiv@rem+2
  7282  0025C8  C018  F024         	movff	___fldiv@b+3,___fldiv@rem+3
  7283  0025CC  0E00               	movlw	0
  7284  0025CE  6E15               	movwf	___fldiv@b,c
  7285  0025D0  0E00               	movlw	0
  7286  0025D2  6E16               	movwf	___fldiv@b+1,c
  7287  0025D4  0E00               	movlw	0
  7288  0025D6  6E17               	movwf	___fldiv@b+2,c
  7289  0025D8  0E00               	movlw	0
  7290  0025DA  6E18               	movwf	___fldiv@b+3,c
  7291  0025DC  0E00               	movlw	0
  7292  0025DE  6E28               	movwf	___fldiv@grs,c
  7293  0025E0  0E00               	movlw	0
  7294  0025E2  6E29               	movwf	___fldiv@grs+1,c
  7295  0025E4  0E00               	movlw	0
  7296  0025E6  6E2A               	movwf	___fldiv@grs+2,c
  7297  0025E8  0E00               	movlw	0
  7298  0025EA  6E2B               	movwf	___fldiv@grs+3,c
  7299  0025EC  0E00               	movlw	0
  7300  0025EE  6E2D               	movwf	___fldiv@aexp,c
  7301  0025F0  D028               	goto	l971
  7302  0025F2                     l3239:
  7303  0025F2  502D               	movf	___fldiv@aexp,w,c
  7304  0025F4  B4D8               	btfsc	status,2,c
  7305  0025F6  D011               	goto	l3247
  7306  0025F8  90D8               	bcf	status,0,c
  7307  0025FA  3621               	rlcf	___fldiv@rem,f,c
  7308  0025FC  3622               	rlcf	___fldiv@rem+1,f,c
  7309  0025FE  3623               	rlcf	___fldiv@rem+2,f,c
  7310  002600  3624               	rlcf	___fldiv@rem+3,f,c
  7311  002602  90D8               	bcf	status,0,c
  7312  002604  3615               	rlcf	___fldiv@b,f,c
  7313  002606  3616               	rlcf	___fldiv@b+1,f,c
  7314  002608  3617               	rlcf	___fldiv@b+2,f,c
  7315  00260A  3618               	rlcf	___fldiv@b+3,f,c
  7316  00260C  BE2B               	btfsc	___fldiv@grs+3,7,c
  7317  00260E  8015               	bsf	___fldiv@b,0,c
  7318  002610  90D8               	bcf	status,0,c
  7319  002612  3628               	rlcf	___fldiv@grs,f,c
  7320  002614  3629               	rlcf	___fldiv@grs+1,f,c
  7321  002616  362A               	rlcf	___fldiv@grs+2,f,c
  7322  002618  362B               	rlcf	___fldiv@grs+3,f,c
  7323  00261A                     l3247:
  7324  00261A  5019               	movf	___fldiv@a,w,c
  7325  00261C  5C21               	subwf	___fldiv@rem,w,c
  7326  00261E  501A               	movf	___fldiv@a+1,w,c
  7327  002620  5822               	subwfb	___fldiv@rem+1,w,c
  7328  002622  501B               	movf	___fldiv@a+2,w,c
  7329  002624  5823               	subwfb	___fldiv@rem+2,w,c
  7330  002626  501C               	movf	___fldiv@a+3,w,c
  7331  002628  5824               	subwfb	___fldiv@rem+3,w,c
  7332  00262A  A0D8               	btfss	status,0,c
  7333  00262C  D009               	goto	l3253
  7334  00262E  8C2B               	bsf	___fldiv@grs+3,6,c
  7335  002630  5019               	movf	___fldiv@a,w,c
  7336  002632  5E21               	subwf	___fldiv@rem,f,c
  7337  002634  501A               	movf	___fldiv@a+1,w,c
  7338  002636  5A22               	subwfb	___fldiv@rem+1,f,c
  7339  002638  501B               	movf	___fldiv@a+2,w,c
  7340  00263A  5A23               	subwfb	___fldiv@rem+2,f,c
  7341  00263C  501C               	movf	___fldiv@a+3,w,c
  7342  00263E  5A24               	subwfb	___fldiv@rem+3,f,c
  7343  002640                     l3253:
  7344  002640  2A2D               	incf	___fldiv@aexp,f,c
  7345  002642                     l971:
  7346  002642  0E19               	movlw	25
  7347  002644  642D               	cpfsgt	___fldiv@aexp,c
  7348  002646  D7D5               	goto	l3239
  7349  002648  5021               	movf	___fldiv@rem,w,c
  7350  00264A  1022               	iorwf	___fldiv@rem+1,w,c
  7351  00264C  1023               	iorwf	___fldiv@rem+2,w,c
  7352  00264E  1024               	iorwf	___fldiv@rem+3,w,c
  7353  002650  B4D8               	btfsc	status,2,c
  7354  002652  D011               	goto	l3265
  7355  002654  8028               	bsf	___fldiv@grs,0,c
  7356  002656  D00F               	goto	l3265
  7357  002658                     l3259:
  7358  002658  90D8               	bcf	status,0,c
  7359  00265A  3615               	rlcf	___fldiv@b,f,c
  7360  00265C  3616               	rlcf	___fldiv@b+1,f,c
  7361  00265E  3617               	rlcf	___fldiv@b+2,f,c
  7362  002660  3618               	rlcf	___fldiv@b+3,f,c
  7363  002662  BE2B               	btfsc	___fldiv@grs+3,7,c
  7364  002664  8015               	bsf	___fldiv@b,0,c
  7365  002666  90D8               	bcf	status,0,c
  7366  002668  3628               	rlcf	___fldiv@grs,f,c
  7367  00266A  3629               	rlcf	___fldiv@grs+1,f,c
  7368  00266C  362A               	rlcf	___fldiv@grs+2,f,c
  7369  00266E  362B               	rlcf	___fldiv@grs+3,f,c
  7370  002670  0626               	decf	___fldiv@new_exp,f,c
  7371  002672  A0D8               	btfss	status,0,c
  7372  002674  0627               	decf	___fldiv@new_exp+1,f,c
  7373  002676                     l3265:
  7374  002676  AE17               	btfss	___fldiv@b+2,7,c
  7375  002678  D7EF               	goto	l3259
  7376  00267A  0E00               	movlw	0
  7377  00267C  6E2D               	movwf	___fldiv@aexp,c
  7378  00267E  AE2B               	btfss	___fldiv@grs+3,7,c
  7379  002680  D017               	goto	l982
  7380  002682  0EFF               	movlw	255
  7381  002684  1428               	andwf	___fldiv@grs,w,c
  7382  002686  6E1D               	movwf	??___fldiv& (0+255),c
  7383  002688  0EFF               	movlw	255
  7384  00268A  1429               	andwf	___fldiv@grs+1,w,c
  7385  00268C  6E1E               	movwf	(??___fldiv+1)& (0+255),c
  7386  00268E  0EFF               	movlw	255
  7387  002690  142A               	andwf	___fldiv@grs+2,w,c
  7388  002692  6E1F               	movwf	(??___fldiv+2)& (0+255),c
  7389  002694  0E7F               	movlw	127
  7390  002696  142B               	andwf	___fldiv@grs+3,w,c
  7391  002698  6E20               	movwf	(??___fldiv+3)& (0+255),c
  7392  00269A  501D               	movf	??___fldiv,w,c
  7393  00269C  101E               	iorwf	??___fldiv+1,w,c
  7394  00269E  101F               	iorwf	??___fldiv+2,w,c
  7395  0026A0  1020               	iorwf	??___fldiv+3,w,c
  7396  0026A2  B4D8               	btfsc	status,2,c
  7397  0026A4  D003               	goto	l983
  7398  0026A6                     u3510:
  7399  0026A6  0E01               	movlw	1
  7400  0026A8  6E2D               	movwf	___fldiv@aexp,c
  7401  0026AA  D002               	goto	l982
  7402  0026AC                     l983:
  7403  0026AC  B015               	btfsc	___fldiv@b,0,c
  7404  0026AE  D7FB               	goto	u3510
  7405  0026B0                     l982:
  7406  0026B0  502D               	movf	___fldiv@aexp,w,c
  7407  0026B2  B4D8               	btfsc	status,2,c
  7408  0026B4  D01F               	goto	l3285
  7409  0026B6  0E01               	movlw	1
  7410  0026B8  2615               	addwf	___fldiv@b,f,c
  7411  0026BA  0E00               	movlw	0
  7412  0026BC  2216               	addwfc	___fldiv@b+1,f,c
  7413  0026BE  2217               	addwfc	___fldiv@b+2,f,c
  7414  0026C0  2218               	addwfc	___fldiv@b+3,f,c
  7415  0026C2  A018               	btfss	___fldiv@b+3,0,c
  7416  0026C4  D017               	goto	l3285
  7417  0026C6  C015  F01D         	movff	___fldiv@b,??___fldiv
  7418  0026CA  C016  F01E         	movff	___fldiv@b+1,??___fldiv+1
  7419  0026CE  C017  F01F         	movff	___fldiv@b+2,??___fldiv+2
  7420  0026D2  C018  F020         	movff	___fldiv@b+3,??___fldiv+3
  7421  0026D6  3420               	rlcf	??___fldiv+3,w,c
  7422  0026D8  3220               	rrcf	??___fldiv+3,f,c
  7423  0026DA  321F               	rrcf	??___fldiv+2,f,c
  7424  0026DC  321E               	rrcf	??___fldiv+1,f,c
  7425  0026DE  321D               	rrcf	??___fldiv,f,c
  7426  0026E0  C01D  F015         	movff	??___fldiv,___fldiv@b
  7427  0026E4  C01E  F016         	movff	??___fldiv+1,___fldiv@b+1
  7428  0026E8  C01F  F017         	movff	??___fldiv+2,___fldiv@b+2
  7429  0026EC  C020  F018         	movff	??___fldiv+3,___fldiv@b+3
  7430  0026F0  4A26               	infsnz	___fldiv@new_exp,f,c
  7431  0026F2  2A27               	incf	___fldiv@new_exp+1,f,c
  7432  0026F4                     l3285:
  7433  0026F4  BE27               	btfsc	___fldiv@new_exp+1,7,c
  7434  0026F6  D010               	goto	l3289
  7435  0026F8  5027               	movf	___fldiv@new_exp+1,w,c
  7436  0026FA  E103               	bnz	u3550
  7437  0026FC  2826               	incf	___fldiv@new_exp,w,c
  7438  0026FE  A0D8               	btfss	status,0,c
  7439  002700  D00B               	goto	l3289
  7440  002702                     u3550:
  7441  002702  0E00               	movlw	0
  7442  002704  6E27               	movwf	___fldiv@new_exp+1,c
  7443  002706  6826               	setf	___fldiv@new_exp,c
  7444  002708  0E00               	movlw	0
  7445  00270A  6E15               	movwf	___fldiv@b,c
  7446  00270C  0E00               	movlw	0
  7447  00270E  6E16               	movwf	___fldiv@b+1,c
  7448  002710  0E00               	movlw	0
  7449  002712  6E17               	movwf	___fldiv@b+2,c
  7450  002714  0E00               	movlw	0
  7451  002716  6E18               	movwf	___fldiv@b+3,c
  7452  002718                     l3289:
  7453  002718  BE27               	btfsc	___fldiv@new_exp+1,7,c
  7454  00271A  D005               	goto	u3560
  7455  00271C  5027               	movf	___fldiv@new_exp+1,w,c
  7456  00271E  E111               	bnz	l3293
  7457  002720  0426               	decf	___fldiv@new_exp,w,c
  7458  002722  B0D8               	btfsc	status,0,c
  7459  002724  D00E               	goto	l3293
  7460  002726                     u3560:
  7461  002726  0E00               	movlw	0
  7462  002728  6E27               	movwf	___fldiv@new_exp+1,c
  7463  00272A  0E00               	movlw	0
  7464  00272C  6E26               	movwf	___fldiv@new_exp,c
  7465  00272E  0E00               	movlw	0
  7466  002730  6E15               	movwf	___fldiv@b,c
  7467  002732  0E00               	movlw	0
  7468  002734  6E16               	movwf	___fldiv@b+1,c
  7469  002736  0E00               	movlw	0
  7470  002738  6E17               	movwf	___fldiv@b+2,c
  7471  00273A  0E00               	movlw	0
  7472  00273C  6E18               	movwf	___fldiv@b+3,c
  7473  00273E  0E00               	movlw	0
  7474  002740  6E25               	movwf	___fldiv@sign,c
  7475  002742                     l3293:
  7476  002742  C026  F02C         	movff	___fldiv@new_exp,___fldiv@bexp
  7477  002746  A02C               	btfss	___fldiv@bexp,0,c
  7478  002748  D002               	goto	l3299
  7479  00274A  8E17               	bsf	___fldiv@b+2,7,c
  7480  00274C  D001               	goto	l3301
  7481  00274E                     l3299:
  7482  00274E  9E17               	bcf	___fldiv@b+2,7,c
  7483  002750                     l3301:
  7484  002750  90D8               	bcf	status,0,c
  7485  002752  302C               	rrcf	___fldiv@bexp,w,c
  7486  002754  6E18               	movwf	___fldiv@b+3,c
  7487  002756  D70E               	goto	l3215
  7488  002758                     __end_of___fldiv:
  7489                           	opt callstack 0
  7490                           
  7491 ;; *************** function ___awmod *****************
  7492 ;; Defined at:
  7493 ;;		line 7 in file "D:\Microchip\pic\sources\c99\common\awmod.c"
  7494 ;; Parameters:    Size  Location     Type
  7495 ;;  dividend        2    0[COMRAM] int 
  7496 ;;  divisor         2    2[COMRAM] int 
  7497 ;; Auto vars:     Size  Location     Type
  7498 ;;  sign            1    5[COMRAM] unsigned char 
  7499 ;;  counter         1    4[COMRAM] unsigned char 
  7500 ;; Return value:  Size  Location     Type
  7501 ;;                  2    0[COMRAM] int 
  7502 ;; Registers used:
  7503 ;;		wreg, status,2, status,0
  7504 ;; Tracked objects:
  7505 ;;		On entry : 0/0
  7506 ;;		On exit  : 0/0
  7507 ;;		Unchanged: 0/0
  7508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7509 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7510 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7512 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7513 ;;Total ram usage:        6 bytes
  7514 ;; Hardware stack levels used:    1
  7515 ;; This function calls:
  7516 ;;		Nothing
  7517 ;; This function is called by:
  7518 ;;		_efgtoa
  7519 ;; This function uses a non-reentrant model
  7520 ;;
  7521                           
  7522                           	psect	text34
  7523  0032C4                     __ptext34:
  7524                           	opt callstack 0
  7525  0032C4                     ___awmod:
  7526                           	opt callstack 26
  7527                           
  7528                           ;incstack = 0
  7529  0032C4  0E00               	movlw	0
  7530  0032C6  6E06               	movwf	___awmod@sign,c
  7531  0032C8  AE02               	btfss	___awmod@dividend+1,7,c
  7532  0032CA  D006               	goto	l3497
  7533  0032CC  6C01               	negf	___awmod@dividend,c
  7534  0032CE  1E02               	comf	___awmod@dividend+1,f,c
  7535  0032D0  B0D8               	btfsc	status,0,c
  7536  0032D2  2A02               	incf	___awmod@dividend+1,f,c
  7537  0032D4  0E01               	movlw	1
  7538  0032D6  6E06               	movwf	___awmod@sign,c
  7539  0032D8                     l3497:
  7540  0032D8  AE04               	btfss	___awmod@divisor+1,7,c
  7541  0032DA  D004               	goto	l3501
  7542  0032DC  6C03               	negf	___awmod@divisor,c
  7543  0032DE  1E04               	comf	___awmod@divisor+1,f,c
  7544  0032E0  B0D8               	btfsc	status,0,c
  7545  0032E2  2A04               	incf	___awmod@divisor+1,f,c
  7546  0032E4                     l3501:
  7547  0032E4  5003               	movf	___awmod@divisor,w,c
  7548  0032E6  1004               	iorwf	___awmod@divisor+1,w,c
  7549  0032E8  B4D8               	btfsc	status,2,c
  7550  0032EA  D018               	goto	l3517
  7551  0032EC  0E01               	movlw	1
  7552  0032EE  6E05               	movwf	___awmod@counter,c
  7553  0032F0  D004               	goto	l3507
  7554  0032F2                     l3505:
  7555  0032F2  90D8               	bcf	status,0,c
  7556  0032F4  3603               	rlcf	___awmod@divisor,f,c
  7557  0032F6  3604               	rlcf	___awmod@divisor+1,f,c
  7558  0032F8  2A05               	incf	___awmod@counter,f,c
  7559  0032FA                     l3507:
  7560  0032FA  AE04               	btfss	___awmod@divisor+1,7,c
  7561  0032FC  D7FA               	goto	l3505
  7562  0032FE                     u3860:
  7563  0032FE  5003               	movf	___awmod@divisor,w,c
  7564  003300  5C01               	subwf	___awmod@dividend,w,c
  7565  003302  5004               	movf	___awmod@divisor+1,w,c
  7566  003304  5802               	subwfb	___awmod@dividend+1,w,c
  7567  003306  A0D8               	btfss	status,0,c
  7568  003308  D004               	goto	l3513
  7569  00330A  5003               	movf	___awmod@divisor,w,c
  7570  00330C  5E01               	subwf	___awmod@dividend,f,c
  7571  00330E  5004               	movf	___awmod@divisor+1,w,c
  7572  003310  5A02               	subwfb	___awmod@dividend+1,f,c
  7573  003312                     l3513:
  7574  003312  90D8               	bcf	status,0,c
  7575  003314  3204               	rrcf	___awmod@divisor+1,f,c
  7576  003316  3203               	rrcf	___awmod@divisor,f,c
  7577  003318  2E05               	decfsz	___awmod@counter,f,c
  7578  00331A  D7F1               	goto	u3860
  7579  00331C                     l3517:
  7580  00331C  5006               	movf	___awmod@sign,w,c
  7581  00331E  B4D8               	btfsc	status,2,c
  7582  003320  D004               	goto	l3521
  7583  003322  6C01               	negf	___awmod@dividend,c
  7584  003324  1E02               	comf	___awmod@dividend+1,f,c
  7585  003326  B0D8               	btfsc	status,0,c
  7586  003328  2A02               	incf	___awmod@dividend+1,f,c
  7587  00332A                     l3521:
  7588  00332A  C001  F001         	movff	___awmod@dividend,?___awmod
  7589  00332E  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  7590  003332  0012               	return		;funcret
  7591  003334                     __end_of___awmod:
  7592                           	opt callstack 0
  7593                           
  7594 ;; *************** function ___awdiv *****************
  7595 ;; Defined at:
  7596 ;;		line 7 in file "D:\Microchip\pic\sources\c99\common\awdiv.c"
  7597 ;; Parameters:    Size  Location     Type
  7598 ;;  dividend        2    0[COMRAM] int 
  7599 ;;  divisor         2    2[COMRAM] int 
  7600 ;; Auto vars:     Size  Location     Type
  7601 ;;  quotient        2    6[COMRAM] int 
  7602 ;;  sign            1    5[COMRAM] unsigned char 
  7603 ;;  counter         1    4[COMRAM] unsigned char 
  7604 ;; Return value:  Size  Location     Type
  7605 ;;                  2    0[COMRAM] int 
  7606 ;; Registers used:
  7607 ;;		wreg, status,2, status,0
  7608 ;; Tracked objects:
  7609 ;;		On entry : 0/0
  7610 ;;		On exit  : 0/0
  7611 ;;		Unchanged: 0/0
  7612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7613 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7614 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7616 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7617 ;;Total ram usage:        8 bytes
  7618 ;; Hardware stack levels used:    1
  7619 ;; This function calls:
  7620 ;;		Nothing
  7621 ;; This function is called by:
  7622 ;;		_efgtoa
  7623 ;; This function uses a non-reentrant model
  7624 ;;
  7625                           
  7626                           	psect	text35
  7627  0031BE                     __ptext35:
  7628                           	opt callstack 0
  7629  0031BE                     ___awdiv:
  7630                           	opt callstack 26
  7631                           
  7632                           ;incstack = 0
  7633  0031BE  0E00               	movlw	0
  7634  0031C0  6E06               	movwf	___awdiv@sign,c
  7635  0031C2  AE04               	btfss	___awdiv@divisor+1,7,c
  7636  0031C4  D006               	goto	l3453
  7637  0031C6  6C03               	negf	___awdiv@divisor,c
  7638  0031C8  1E04               	comf	___awdiv@divisor+1,f,c
  7639  0031CA  B0D8               	btfsc	status,0,c
  7640  0031CC  2A04               	incf	___awdiv@divisor+1,f,c
  7641  0031CE  0E01               	movlw	1
  7642  0031D0  6E06               	movwf	___awdiv@sign,c
  7643  0031D2                     l3453:
  7644  0031D2  AE02               	btfss	___awdiv@dividend+1,7,c
  7645  0031D4  D006               	goto	l3459
  7646  0031D6  6C01               	negf	___awdiv@dividend,c
  7647  0031D8  1E02               	comf	___awdiv@dividend+1,f,c
  7648  0031DA  B0D8               	btfsc	status,0,c
  7649  0031DC  2A02               	incf	___awdiv@dividend+1,f,c
  7650  0031DE  0E01               	movlw	1
  7651  0031E0  1A06               	xorwf	___awdiv@sign,f,c
  7652  0031E2                     l3459:
  7653  0031E2  0E00               	movlw	0
  7654  0031E4  6E08               	movwf	___awdiv@quotient+1,c
  7655  0031E6  0E00               	movlw	0
  7656  0031E8  6E07               	movwf	___awdiv@quotient,c
  7657  0031EA  5003               	movf	___awdiv@divisor,w,c
  7658  0031EC  1004               	iorwf	___awdiv@divisor+1,w,c
  7659  0031EE  B4D8               	btfsc	status,2,c
  7660  0031F0  D01C               	goto	l3481
  7661  0031F2  0E01               	movlw	1
  7662  0031F4  6E05               	movwf	___awdiv@counter,c
  7663  0031F6  D004               	goto	l3467
  7664  0031F8                     l3465:
  7665  0031F8  90D8               	bcf	status,0,c
  7666  0031FA  3603               	rlcf	___awdiv@divisor,f,c
  7667  0031FC  3604               	rlcf	___awdiv@divisor+1,f,c
  7668  0031FE  2A05               	incf	___awdiv@counter,f,c
  7669  003200                     l3467:
  7670  003200  AE04               	btfss	___awdiv@divisor+1,7,c
  7671  003202  D7FA               	goto	l3465
  7672  003204                     u3800:
  7673  003204  90D8               	bcf	status,0,c
  7674  003206  3607               	rlcf	___awdiv@quotient,f,c
  7675  003208  3608               	rlcf	___awdiv@quotient+1,f,c
  7676  00320A  5003               	movf	___awdiv@divisor,w,c
  7677  00320C  5C01               	subwf	___awdiv@dividend,w,c
  7678  00320E  5004               	movf	___awdiv@divisor+1,w,c
  7679  003210  5802               	subwfb	___awdiv@dividend+1,w,c
  7680  003212  A0D8               	btfss	status,0,c
  7681  003214  D005               	goto	l3477
  7682  003216  5003               	movf	___awdiv@divisor,w,c
  7683  003218  5E01               	subwf	___awdiv@dividend,f,c
  7684  00321A  5004               	movf	___awdiv@divisor+1,w,c
  7685  00321C  5A02               	subwfb	___awdiv@dividend+1,f,c
  7686  00321E  8007               	bsf	___awdiv@quotient,0,c
  7687  003220                     l3477:
  7688  003220  90D8               	bcf	status,0,c
  7689  003222  3204               	rrcf	___awdiv@divisor+1,f,c
  7690  003224  3203               	rrcf	___awdiv@divisor,f,c
  7691  003226  2E05               	decfsz	___awdiv@counter,f,c
  7692  003228  D7ED               	goto	u3800
  7693  00322A                     l3481:
  7694  00322A  5006               	movf	___awdiv@sign,w,c
  7695  00322C  B4D8               	btfsc	status,2,c
  7696  00322E  D004               	goto	l3485
  7697  003230  6C07               	negf	___awdiv@quotient,c
  7698  003232  1E08               	comf	___awdiv@quotient+1,f,c
  7699  003234  B0D8               	btfsc	status,0,c
  7700  003236  2A08               	incf	___awdiv@quotient+1,f,c
  7701  003238                     l3485:
  7702  003238  C007  F001         	movff	___awdiv@quotient,?___awdiv
  7703  00323C  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  7704  003240  0012               	return		;funcret
  7705  003242                     __end_of___awdiv:
  7706                           	opt callstack 0
  7707                           
  7708 ;; *************** function _atoi *****************
  7709 ;; Defined at:
  7710 ;;		line 4 in file "D:\Microchip\pic\sources\c99\common\atoi.c"
  7711 ;; Parameters:    Size  Location     Type
  7712 ;;  s               2    7[COMRAM] PTR const unsigned char 
  7713 ;;		 -> STR_8(43), STR_7(7), STR_6(12), STR_5(11), 
  7714 ;;		 -> STR_2(6), STR_1(13), 
  7715 ;; Auto vars:     Size  Location     Type
  7716 ;;  n               2   20[COMRAM] int 
  7717 ;;  neg             2   13[COMRAM] int 
  7718 ;; Return value:  Size  Location     Type
  7719 ;;                  2    7[COMRAM] int 
  7720 ;; Registers used:
  7721 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7722 ;; Tracked objects:
  7723 ;;		On entry : 0/0
  7724 ;;		On exit  : 0/0
  7725 ;;		Unchanged: 0/0
  7726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7727 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7728 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7729 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7730 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7731 ;;Total ram usage:       15 bytes
  7732 ;; Hardware stack levels used:    1
  7733 ;; Hardware stack levels required when called:    1
  7734 ;; This function calls:
  7735 ;;		___wmul
  7736 ;;		_isdigit
  7737 ;;		_isspace
  7738 ;; This function is called by:
  7739 ;;		_vfpfcnvrt
  7740 ;; This function uses a non-reentrant model
  7741 ;;
  7742                           
  7743                           	psect	text36
  7744  002BC6                     __ptext36:
  7745                           	opt callstack 0
  7746  002BC6                     _atoi:
  7747                           	opt callstack 26
  7748                           
  7749                           ;incstack = 0
  7750  002BC6  0E00               	movlw	0
  7751  002BC8  6E16               	movwf	atoi@n+1,c
  7752  002BCA  0E00               	movlw	0
  7753  002BCC  6E15               	movwf	atoi@n,c
  7754  002BCE  0E00               	movlw	0
  7755  002BD0  6E0F               	movwf	atoi@neg+1,c
  7756  002BD2  0E00               	movlw	0
  7757  002BD4  6E0E               	movwf	atoi@neg,c
  7758  002BD6  D002               	goto	l3945
  7759  002BD8                     l3943:
  7760  002BD8  4A08               	infsnz	atoi@s,f,c
  7761  002BDA  2A09               	incf	atoi@s+1,f,c
  7762  002BDC                     l3945:
  7763  002BDC  0E01               	movlw	1
  7764  002BDE  6E14               	movwf	_atoi$1157,c
  7765  002BE0  C008  FFF6         	movff	atoi@s,tblptrl
  7766  002BE4  C009  FFF7         	movff	atoi@s+1,tblptrh
  7767  002BE8                     	if	0	;tblptru may be non-zero
  7768  002BE8                     	endif
  7769  002BE8                     	if	0	;tblptru may be non-zero
  7770  002BE8                     	endif
  7771  002BE8  0008               	tblrd		*
  7772  002BEA  50F5               	movf	tablat,w,c
  7773  002BEC  0A20               	xorlw	32
  7774  002BEE  B4D8               	btfsc	status,2,c
  7775  002BF0  D018               	goto	l3953
  7776  002BF2  0EF7               	movlw	247
  7777  002BF4  6E0A               	movwf	??_atoi& (0+255),c
  7778  002BF6  0EFF               	movlw	255
  7779  002BF8  6E0B               	movwf	(??_atoi+1)& (0+255),c
  7780  002BFA  C008  FFF6         	movff	atoi@s,tblptrl
  7781  002BFE  C009  FFF7         	movff	atoi@s+1,tblptrh
  7782  002C02                     	if	0	;tblptru may be non-zero
  7783  002C02                     	endif
  7784  002C02                     	if	0	;tblptru may be non-zero
  7785  002C02                     	endif
  7786  002C02  0008               	tblrd		*
  7787  002C04  50F5               	movf	tablat,w,c
  7788  002C06  6E0C               	movwf	(??_atoi+2)& (0+255),c
  7789  002C08  6A0D               	clrf	(??_atoi+3)& (0+255),c
  7790  002C0A  500A               	movf	??_atoi,w,c
  7791  002C0C  260C               	addwf	??_atoi+2,f,c
  7792  002C0E  500B               	movf	??_atoi+1,w,c
  7793  002C10  220D               	addwfc	??_atoi+3,f,c
  7794  002C12  500D               	movf	??_atoi+3,w,c
  7795  002C14  E104               	bnz	u4620
  7796  002C16  0E05               	movlw	5
  7797  002C18  5C0C               	subwf	??_atoi+2,w,c
  7798  002C1A  A0D8               	btfss	status,0,c
  7799  002C1C  D002               	goto	l3953
  7800  002C1E                     u4620:
  7801  002C1E  0E00               	movlw	0
  7802  002C20  6E14               	movwf	_atoi$1157,c
  7803  002C22                     l3953:
  7804  002C22  C014  F010         	movff	_atoi$1157,_atoi$1156
  7805  002C26  6A11               	clrf	_atoi$1156+1,c
  7806  002C28  5010               	movf	_atoi$1156,w,c
  7807  002C2A  1011               	iorwf	_atoi$1156+1,w,c
  7808  002C2C  B4D8               	btfsc	status,2,c
  7809  002C2E  D008               	goto	l3963
  7810  002C30  D7D3               	goto	l3943
  7811  002C32                     l3959:
  7812  002C32  0E00               	movlw	0
  7813  002C34  6E0F               	movwf	atoi@neg+1,c
  7814  002C36  0E01               	movlw	1
  7815  002C38  6E0E               	movwf	atoi@neg,c
  7816  002C3A                     l3961:
  7817  002C3A  4A08               	infsnz	atoi@s,f,c
  7818  002C3C  2A09               	incf	atoi@s+1,f,c
  7819  002C3E  D02E               	goto	l3969
  7820  002C40                     l3963:
  7821  002C40  C008  FFF6         	movff	atoi@s,tblptrl
  7822  002C44  C009  FFF7         	movff	atoi@s+1,tblptrh
  7823  002C48                     	if	0	;tblptru may be non-zero
  7824  002C48                     	endif
  7825  002C48                     	if	0	;tblptru may be non-zero
  7826  002C48                     	endif
  7827  002C48  0008               	tblrd		*
  7828  002C4A  50F5               	movf	tablat,w,c
  7829  002C4C  6E0A               	movwf	??_atoi& (0+255),c
  7830  002C4E  6A0B               	clrf	(??_atoi+1)& (0+255),c
  7831                           
  7832                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7833                           ; Switch size 1, requested type "simple"
  7834                           ; Number of cases is 1, Range of values is 0 to 0
  7835                           ; switch strategies available:
  7836                           ; Name         Instructions Cycles
  7837                           ; simple_byte            4     3 (average)
  7838                           ;	Chosen strategy is simple_byte
  7839  002C50  500B               	movf	??_atoi+1,w,c
  7840  002C52  0A00               	xorlw	0	; case 0
  7841  002C54  A4D8               	btfss	status,2,c
  7842  002C56  D022               	goto	l3969
  7843                           
  7844                           ; Switch size 1, requested type "simple"
  7845                           ; Number of cases is 2, Range of values is 43 to 45
  7846                           ; switch strategies available:
  7847                           ; Name         Instructions Cycles
  7848                           ; simple_byte            7     4 (average)
  7849                           ;	Chosen strategy is simple_byte
  7850  002C58  500A               	movf	??_atoi,w,c
  7851  002C5A  0A2B               	xorlw	43	; case 43
  7852  002C5C  B4D8               	btfsc	status,2,c
  7853  002C5E  D7ED               	goto	l3961
  7854  002C60  0A06               	xorlw	6	; case 45
  7855  002C62  B4D8               	btfsc	status,2,c
  7856  002C64  D7E6               	goto	l3959
  7857  002C66  D01A               	goto	l3969
  7858  002C68                     l3965:
  7859  002C68  C015  F001         	movff	atoi@n,___wmul@multiplier
  7860  002C6C  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  7861  002C70  0E00               	movlw	0
  7862  002C72  6E04               	movwf	___wmul@multiplicand+1,c
  7863  002C74  0E0A               	movlw	10
  7864  002C76  6E03               	movwf	___wmul@multiplicand,c
  7865  002C78  EC6F  F01C         	call	___wmul	;wreg free
  7866  002C7C  C008  FFF6         	movff	atoi@s,tblptrl
  7867  002C80  C009  FFF7         	movff	atoi@s+1,tblptrh
  7868  002C84                     	if	0	;tblptru may be non-zero
  7869  002C84                     	endif
  7870  002C84                     	if	0	;tblptru may be non-zero
  7871  002C84                     	endif
  7872  002C84  0008               	tblrd		*
  7873  002C86  50F5               	movf	tablat,w,c
  7874  002C88  5E01               	subwf	?___wmul,f,c
  7875  002C8A  0E00               	movlw	0
  7876  002C8C  5A02               	subwfb	?___wmul+1,f,c
  7877  002C8E  0E30               	movlw	48
  7878  002C90  2401               	addwf	?___wmul,w,c
  7879  002C92  6E15               	movwf	atoi@n,c
  7880  002C94  0E00               	movlw	0
  7881  002C96  2002               	addwfc	?___wmul+1,w,c
  7882  002C98  6E16               	movwf	atoi@n+1,c
  7883  002C9A  D7CF               	goto	l3961
  7884  002C9C                     l3969:
  7885  002C9C  0ED0               	movlw	208
  7886  002C9E  6E0A               	movwf	??_atoi& (0+255),c
  7887  002CA0  0EFF               	movlw	255
  7888  002CA2  6E0B               	movwf	(??_atoi+1)& (0+255),c
  7889  002CA4  C008  FFF6         	movff	atoi@s,tblptrl
  7890  002CA8  C009  FFF7         	movff	atoi@s+1,tblptrh
  7891  002CAC                     	if	0	;tblptru may be non-zero
  7892  002CAC                     	endif
  7893  002CAC                     	if	0	;tblptru may be non-zero
  7894  002CAC                     	endif
  7895  002CAC  0008               	tblrd		*
  7896  002CAE  50F5               	movf	tablat,w,c
  7897  002CB0  6E0C               	movwf	(??_atoi+2)& (0+255),c
  7898  002CB2  6A0D               	clrf	(??_atoi+3)& (0+255),c
  7899  002CB4  500A               	movf	??_atoi,w,c
  7900  002CB6  260C               	addwf	??_atoi+2,f,c
  7901  002CB8  500B               	movf	??_atoi+1,w,c
  7902  002CBA  220D               	addwfc	??_atoi+3,f,c
  7903  002CBC  500D               	movf	??_atoi+3,w,c
  7904  002CBE  E106               	bnz	u4640
  7905  002CC0  0E0A               	movlw	10
  7906  002CC2  5C0C               	subwf	??_atoi+2,w,c
  7907  002CC4  B0D8               	btfsc	status,0,c
  7908  002CC6  D002               	goto	u4640
  7909  002CC8  0E01               	movlw	1
  7910  002CCA  D001               	goto	u4650
  7911  002CCC                     u4640:
  7912  002CCC  0E00               	movlw	0
  7913  002CCE                     u4650:
  7914  002CCE  6E12               	movwf	_atoi$1158,c
  7915  002CD0  6A13               	clrf	_atoi$1158+1,c
  7916  002CD2  5012               	movf	_atoi$1158,w,c
  7917  002CD4  1013               	iorwf	_atoi$1158+1,w,c
  7918  002CD6  A4D8               	btfss	status,2,c
  7919  002CD8  D7C7               	goto	l3965
  7920  002CDA  500E               	movf	atoi@neg,w,c
  7921  002CDC  100F               	iorwf	atoi@neg+1,w,c
  7922  002CDE  A4D8               	btfss	status,2,c
  7923  002CE0  D00D               	goto	l1097
  7924  002CE2  C015  F00A         	movff	atoi@n,??_atoi
  7925  002CE6  C016  F00B         	movff	atoi@n+1,??_atoi+1
  7926  002CEA  1E0A               	comf	??_atoi,f,c
  7927  002CEC  1E0B               	comf	??_atoi+1,f,c
  7928  002CEE  4A0A               	infsnz	??_atoi,f,c
  7929  002CF0  2A0B               	incf	??_atoi+1,f,c
  7930  002CF2  C00A  F008         	movff	??_atoi,?_atoi
  7931  002CF6  C00B  F009         	movff	??_atoi+1,?_atoi+1
  7932  002CFA  0012               	return	
  7933  002CFC                     l1097:
  7934  002CFC  C015  F008         	movff	atoi@n,?_atoi
  7935  002D00  C016  F009         	movff	atoi@n+1,?_atoi+1
  7936  002D04  0012               	return		;funcret
  7937  002D06                     __end_of_atoi:
  7938                           	opt callstack 0
  7939                           
  7940 ;; *************** function _isspace *****************
  7941 ;; Defined at:
  7942 ;;		line 5 in file "D:\Microchip\pic\sources\c99\common\isspace.c"
  7943 ;; Parameters:    Size  Location     Type
  7944 ;;  c               2    0[COMRAM] int 
  7945 ;; Auto vars:     Size  Location     Type
  7946 ;;		None
  7947 ;; Return value:  Size  Location     Type
  7948 ;;                  2    0[COMRAM] int 
  7949 ;; Registers used:
  7950 ;;		wreg, status,2, status,0
  7951 ;; Tracked objects:
  7952 ;;		On entry : 0/0
  7953 ;;		On exit  : 0/0
  7954 ;;		Unchanged: 0/0
  7955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7956 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7957 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7958 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7959 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7960 ;;Total ram usage:        7 bytes
  7961 ;; Hardware stack levels used:    1
  7962 ;; This function calls:
  7963 ;;		Nothing
  7964 ;; This function is called by:
  7965 ;;		_atoi
  7966 ;; This function uses a non-reentrant model
  7967 ;;
  7968                           
  7969                           	psect	text37
  7970  003716                     __ptext37:
  7971                           	opt callstack 0
  7972  003716                     _isspace:
  7973                           	opt callstack 26
  7974                           
  7975                           ;incstack = 0
  7976  003716  0E01               	movlw	1
  7977  003718  6E07               	movwf	_isspace$1187,c
  7978  00371A  0E20               	movlw	32
  7979  00371C  1801               	xorwf	isspace@c,w,c
  7980  00371E  1002               	iorwf	isspace@c+1,w,c
  7981  003720  B4D8               	btfsc	status,2,c
  7982  003722  D014               	goto	l3623
  7983  003724  0EF7               	movlw	247
  7984  003726  6E03               	movwf	??_isspace& (0+255),c
  7985  003728  0EFF               	movlw	255
  7986  00372A  6E04               	movwf	(??_isspace+1)& (0+255),c
  7987  00372C  C001  F005         	movff	isspace@c,??_isspace+2
  7988  003730  C002  F006         	movff	isspace@c+1,??_isspace+3
  7989  003734  5003               	movf	??_isspace,w,c
  7990  003736  2605               	addwf	??_isspace+2,f,c
  7991  003738  5004               	movf	??_isspace+1,w,c
  7992  00373A  2206               	addwfc	??_isspace+3,f,c
  7993  00373C  5006               	movf	??_isspace+3,w,c
  7994  00373E  E104               	bnz	u4060
  7995  003740  0E05               	movlw	5
  7996  003742  5C05               	subwf	??_isspace+2,w,c
  7997  003744  A0D8               	btfss	status,0,c
  7998  003746  D002               	goto	l3623
  7999  003748                     u4060:
  8000  003748  0E00               	movlw	0
  8001  00374A  6E07               	movwf	_isspace$1187,c
  8002  00374C                     l3623:
  8003  00374C  C007  F001         	movff	_isspace$1187,?_isspace
  8004  003750  6A02               	clrf	?_isspace+1,c
  8005  003752  0012               	return		;funcret
  8006  003754                     __end_of_isspace:
  8007                           	opt callstack 0
  8008                           
  8009 ;; *************** function _isdigit *****************
  8010 ;; Defined at:
  8011 ;;		line 5 in file "D:\Microchip\pic\sources\c99\common\isdigit.c"
  8012 ;; Parameters:    Size  Location     Type
  8013 ;;  c               2    0[COMRAM] int 
  8014 ;; Auto vars:     Size  Location     Type
  8015 ;;		None
  8016 ;; Return value:  Size  Location     Type
  8017 ;;                  2    0[COMRAM] int 
  8018 ;; Registers used:
  8019 ;;		wreg, status,2, status,0
  8020 ;; Tracked objects:
  8021 ;;		On entry : 0/0
  8022 ;;		On exit  : 0/0
  8023 ;;		Unchanged: 0/0
  8024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8025 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8027 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8028 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8029 ;;Total ram usage:        6 bytes
  8030 ;; Hardware stack levels used:    1
  8031 ;; This function calls:
  8032 ;;		Nothing
  8033 ;; This function is called by:
  8034 ;;		_vfpfcnvrt
  8035 ;;		_atoi
  8036 ;; This function uses a non-reentrant model
  8037 ;;
  8038                           
  8039                           	psect	text38
  8040  003828                     __ptext38:
  8041                           	opt callstack 0
  8042  003828                     _isdigit:
  8043                           	opt callstack 27
  8044                           
  8045                           ;incstack = 0
  8046  003828  0ED0               	movlw	208
  8047  00382A  6E03               	movwf	??_isdigit& (0+255),c
  8048  00382C  0EFF               	movlw	255
  8049  00382E  6E04               	movwf	(??_isdigit+1)& (0+255),c
  8050  003830  C001  F005         	movff	isdigit@c,??_isdigit+2
  8051  003834  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  8052  003838  5003               	movf	??_isdigit,w,c
  8053  00383A  2605               	addwf	??_isdigit+2,f,c
  8054  00383C  5004               	movf	??_isdigit+1,w,c
  8055  00383E  2206               	addwfc	??_isdigit+3,f,c
  8056  003840  5006               	movf	??_isdigit+3,w,c
  8057  003842  E106               	bnz	u3330
  8058  003844  0E0A               	movlw	10
  8059  003846  5C05               	subwf	??_isdigit+2,w,c
  8060  003848  B0D8               	btfsc	status,0,c
  8061  00384A  D002               	goto	u3330
  8062  00384C  0E01               	movlw	1
  8063  00384E  D001               	goto	u3340
  8064  003850                     u3330:
  8065  003850  0E00               	movlw	0
  8066  003852                     u3340:
  8067  003852  6E01               	movwf	?_isdigit,c
  8068  003854  6A02               	clrf	?_isdigit+1,c
  8069  003856  0012               	return		;funcret
  8070  003858                     __end_of_isdigit:
  8071                           	opt callstack 0
  8072                           
  8073 ;; *************** function ___wmul *****************
  8074 ;; Defined at:
  8075 ;;		line 15 in file "D:\Microchip\pic\sources\c99\common\Umul16.c"
  8076 ;; Parameters:    Size  Location     Type
  8077 ;;  multiplier      2    0[COMRAM] unsigned int 
  8078 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8079 ;; Auto vars:     Size  Location     Type
  8080 ;;  product         2    4[COMRAM] unsigned int 
  8081 ;; Return value:  Size  Location     Type
  8082 ;;                  2    0[COMRAM] unsigned int 
  8083 ;; Registers used:
  8084 ;;		wreg, status,2, status,0, prodl, prodh
  8085 ;; Tracked objects:
  8086 ;;		On entry : 0/0
  8087 ;;		On exit  : 0/0
  8088 ;;		Unchanged: 0/0
  8089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8090 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8091 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8093 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8094 ;;Total ram usage:        6 bytes
  8095 ;; Hardware stack levels used:    1
  8096 ;; This function calls:
  8097 ;;		Nothing
  8098 ;; This function is called by:
  8099 ;;		_read_adc_voltage
  8100 ;;		_atoi
  8101 ;; This function uses a non-reentrant model
  8102 ;;
  8103                           
  8104                           	psect	text39
  8105  0038DE                     __ptext39:
  8106                           	opt callstack 0
  8107  0038DE                     ___wmul:
  8108                           	opt callstack 26
  8109                           
  8110                           ;incstack = 0
  8111  0038DE  5001               	movf	___wmul@multiplier,w,c
  8112  0038E0  0203               	mulwf	___wmul@multiplicand,c
  8113  0038E2  CFF3 F005          	movff	prodl,___wmul@product
  8114  0038E6  CFF4 F006          	movff	prodh,___wmul@product+1
  8115  0038EA  5001               	movf	___wmul@multiplier,w,c
  8116  0038EC  0204               	mulwf	___wmul@multiplicand+1,c
  8117  0038EE  50F3               	movf	prodl,w,c
  8118  0038F0  2606               	addwf	___wmul@product+1,f,c
  8119  0038F2  5002               	movf	___wmul@multiplier+1,w,c
  8120  0038F4  0203               	mulwf	___wmul@multiplicand,c
  8121  0038F6  50F3               	movf	prodl,w,c
  8122  0038F8  2606               	addwf	___wmul@product+1,f,c
  8123  0038FA  C005  F001         	movff	___wmul@product,?___wmul
  8124  0038FE  C006  F002         	movff	___wmul@product+1,?___wmul+1
  8125  003902  0012               	return		;funcret
  8126  003904                     __end_of___wmul:
  8127                           	opt callstack 0
  8128                           
  8129 ;; *************** function _lcd_puts *****************
  8130 ;; Defined at:
  8131 ;;		line 94 in file "lcd_x8.c"
  8132 ;; Parameters:    Size  Location     Type
  8133 ;;  s               2   18[COMRAM] PTR unsigned char 
  8134 ;;		 -> J(64), F(64), 
  8135 ;; Auto vars:     Size  Location     Type
  8136 ;;		None
  8137 ;; Return value:  Size  Location     Type
  8138 ;;                  1    wreg      void 
  8139 ;; Registers used:
  8140 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8141 ;; Tracked objects:
  8142 ;;		On entry : 0/0
  8143 ;;		On exit  : 0/0
  8144 ;;		Unchanged: 0/0
  8145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8146 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8149 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8150 ;;Total ram usage:        2 bytes
  8151 ;; Hardware stack levels used:    1
  8152 ;; Hardware stack levels required when called:    5
  8153 ;; This function calls:
  8154 ;;		_lcd_putc
  8155 ;; This function is called by:
  8156 ;;		_display
  8157 ;; This function uses a non-reentrant model
  8158 ;;
  8159                           
  8160                           	psect	text40
  8161  00392A                     __ptext40:
  8162                           	opt callstack 0
  8163  00392A                     _lcd_puts:
  8164                           	opt callstack 24
  8165                           
  8166                           ;lcd_x8.c: 95:     while (*s) {
  8167                           
  8168                           ;incstack = 0
  8169  00392A  D009               	goto	l4171
  8170  00392C                     l4167:
  8171                           
  8172                           ;lcd_x8.c: 96:         lcd_putc(*s);
  8173  00392C  C013  FFD9         	movff	lcd_puts@s,fsr2l
  8174  003930  C014  FFDA         	movff	lcd_puts@s+1,fsr2h
  8175  003934  50DF               	movf	indf2,w,c
  8176  003936  ECCF  F019         	call	_lcd_putc
  8177                           
  8178                           ;lcd_x8.c: 97:         s++;
  8179  00393A  4A13               	infsnz	lcd_puts@s,f,c
  8180  00393C  2A14               	incf	lcd_puts@s+1,f,c
  8181  00393E                     l4171:
  8182                           
  8183                           ;lcd_x8.c: 95:     while (*s) {
  8184  00393E  C013  FFD9         	movff	lcd_puts@s,fsr2l
  8185  003942  C014  FFDA         	movff	lcd_puts@s+1,fsr2h
  8186  003946  50DF               	movf	indf2,w,c
  8187  003948  B4D8               	btfsc	status,2,c
  8188  00394A  0012               	return	
  8189  00394C  D7EF               	goto	l4167
  8190  00394E                     __end_of_lcd_puts:
  8191                           	opt callstack 0
  8192                           
  8193 ;; *************** function _lcd_putc *****************
  8194 ;; Defined at:
  8195 ;;		line 80 in file "lcd_x8.c"
  8196 ;; Parameters:    Size  Location     Type
  8197 ;;  c               1    wreg     unsigned char 
  8198 ;; Auto vars:     Size  Location     Type
  8199 ;;  c               1   17[COMRAM] unsigned char 
  8200 ;; Return value:  Size  Location     Type
  8201 ;;                  1    wreg      void 
  8202 ;; Registers used:
  8203 ;;		wreg, status,2, status,0, cstack
  8204 ;; Tracked objects:
  8205 ;;		On entry : 0/0
  8206 ;;		On exit  : 0/0
  8207 ;;		Unchanged: 0/0
  8208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8210 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8211 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8212 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8213 ;;Total ram usage:        3 bytes
  8214 ;; Hardware stack levels used:    1
  8215 ;; Hardware stack levels required when called:    4
  8216 ;; This function calls:
  8217 ;;		_delay_ms
  8218 ;;		_lcd_gotoxy
  8219 ;;		_lcd_send_byte
  8220 ;; This function is called by:
  8221 ;;		_lcd_puts
  8222 ;;		_main
  8223 ;; This function uses a non-reentrant model
  8224 ;;
  8225                           
  8226                           	psect	text41
  8227  00339E                     __ptext41:
  8228                           	opt callstack 0
  8229  00339E                     _lcd_putc:
  8230                           	opt callstack 26
  8231                           
  8232                           ;incstack = 0
  8233                           ;lcd_putc@c stored from wreg
  8234  00339E  6E12               	movwf	lcd_putc@c,c
  8235                           
  8236                           ;lcd_x8.c: 81:     switch (c) {
  8237  0033A0  D01E               	goto	l4151
  8238  0033A2                     l4141:
  8239  0033A2  0E01               	movlw	1
  8240  0033A4  6E09               	movwf	lcd_send_byte@n,c
  8241  0033A6  0E00               	movlw	0
  8242  0033A8  ECAA  F01B         	call	_lcd_send_byte
  8243                           
  8244                           ;lcd_x8.c: 83:             delay_ms(2);
  8245  0033AC  0E00               	movlw	0
  8246  0033AE  6E02               	movwf	delay_ms@n+1,c
  8247  0033B0  0E02               	movlw	2
  8248  0033B2  6E01               	movwf	delay_ms@n,c
  8249  0033B4  EC82  F01C         	call	_delay_ms	;wreg free
  8250                           
  8251                           ;lcd_x8.c: 84:             break;
  8252  0033B8  0012               	return	
  8253  0033BA                     l4143:
  8254  0033BA  0E02               	movlw	2
  8255  0033BC  6E0B               	movwf	lcd_gotoxy@y,c
  8256  0033BE  0E01               	movlw	1
  8257  0033C0  ECD5  F01A         	call	_lcd_gotoxy
  8258                           
  8259                           ;lcd_x8.c: 86:             break;
  8260  0033C4  0012               	return	
  8261  0033C6                     l4145:
  8262  0033C6  0E10               	movlw	16
  8263  0033C8  6E09               	movwf	lcd_send_byte@n,c
  8264  0033CA  0E00               	movlw	0
  8265  0033CC  ECAA  F01B         	call	_lcd_send_byte
  8266                           
  8267                           ;lcd_x8.c: 88:             break;
  8268  0033D0  0012               	return	
  8269  0033D2                     l4147:
  8270  0033D2  C012  F009         	movff	lcd_putc@c,lcd_send_byte@n
  8271  0033D6  0E01               	movlw	1
  8272  0033D8  ECAA  F01B         	call	_lcd_send_byte
  8273                           
  8274                           ;lcd_x8.c: 90:             break;
  8275  0033DC  0012               	return	
  8276  0033DE                     l4151:
  8277  0033DE  5012               	movf	lcd_putc@c,w,c
  8278  0033E0  6E10               	movwf	??_lcd_putc& (0+255),c
  8279  0033E2  6A11               	clrf	(??_lcd_putc+1)& (0+255),c
  8280                           
  8281                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8282                           ; Switch size 1, requested type "simple"
  8283                           ; Number of cases is 1, Range of values is 0 to 0
  8284                           ; switch strategies available:
  8285                           ; Name         Instructions Cycles
  8286                           ; simple_byte            4     3 (average)
  8287                           ;	Chosen strategy is simple_byte
  8288  0033E4  5011               	movf	??_lcd_putc+1,w,c
  8289  0033E6  0A00               	xorlw	0	; case 0
  8290  0033E8  A4D8               	btfss	status,2,c
  8291  0033EA  D7F3               	goto	l4147
  8292                           
  8293                           ; Switch size 1, requested type "simple"
  8294                           ; Number of cases is 3, Range of values is 8 to 12
  8295                           ; switch strategies available:
  8296                           ; Name         Instructions Cycles
  8297                           ; simple_byte           10     6 (average)
  8298                           ;	Chosen strategy is simple_byte
  8299  0033EC  5010               	movf	??_lcd_putc,w,c
  8300  0033EE  0A08               	xorlw	8	; case 8
  8301  0033F0  B4D8               	btfsc	status,2,c
  8302  0033F2  D7E9               	goto	l4145
  8303  0033F4  0A02               	xorlw	2	; case 10
  8304  0033F6  B4D8               	btfsc	status,2,c
  8305  0033F8  D7E0               	goto	l4143
  8306  0033FA  0A06               	xorlw	6	; case 12
  8307  0033FC  B4D8               	btfsc	status,2,c
  8308  0033FE  D7D1               	goto	l4141
  8309  003400  D7E8               	goto	l4147
  8310  003402                     __end_of_lcd_putc:
  8311                           	opt callstack 0
  8312                           
  8313 ;; *************** function _lcd_gotoxy *****************
  8314 ;; Defined at:
  8315 ;;		line 63 in file "lcd_x8.c"
  8316 ;; Parameters:    Size  Location     Type
  8317 ;;  x               1    wreg     unsigned char 
  8318 ;;  y               1   10[COMRAM] unsigned char 
  8319 ;; Auto vars:     Size  Location     Type
  8320 ;;  x               1   13[COMRAM] unsigned char 
  8321 ;;  address         1   14[COMRAM] unsigned char 
  8322 ;; Return value:  Size  Location     Type
  8323 ;;                  1    wreg      void 
  8324 ;; Registers used:
  8325 ;;		wreg, status,2, status,0, cstack
  8326 ;; Tracked objects:
  8327 ;;		On entry : 0/0
  8328 ;;		On exit  : 0/0
  8329 ;;		Unchanged: 0/0
  8330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8331 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8332 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8333 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8334 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8335 ;;Total ram usage:        5 bytes
  8336 ;; Hardware stack levels used:    1
  8337 ;; Hardware stack levels required when called:    3
  8338 ;; This function calls:
  8339 ;;		_lcd_send_byte
  8340 ;; This function is called by:
  8341 ;;		_lcd_putc
  8342 ;;		_display
  8343 ;; This function uses a non-reentrant model
  8344 ;;
  8345                           
  8346                           	psect	text42
  8347  0035AA                     __ptext42:
  8348                           	opt callstack 0
  8349  0035AA                     _lcd_gotoxy:
  8350                           	opt callstack 26
  8351                           
  8352                           ;incstack = 0
  8353                           ;lcd_gotoxy@x stored from wreg
  8354  0035AA  6E0E               	movwf	lcd_gotoxy@x,c
  8355                           
  8356                           ;lcd_x8.c: 64:     unsigned char address;;lcd_x8.c: 66:     switch (y) {
  8357  0035AC  D009               	goto	l4021
  8358  0035AE                     l4011:
  8359  0035AE  0E80               	movlw	128
  8360  0035B0  D005               	goto	L15
  8361  0035B2                     l4013:
  8362  0035B2  0EC0               	movlw	192
  8363  0035B4  D003               	goto	L15
  8364  0035B6                     l4015:
  8365  0035B6  0E90               	movlw	144
  8366  0035B8  D001               	goto	L15
  8367  0035BA                     l4017:
  8368  0035BA  0ED0               	movlw	208
  8369  0035BC                     L15:
  8370  0035BC  6E0F               	movwf	lcd_gotoxy@address,c
  8371                           
  8372                           ;lcd_x8.c: 74:             break;
  8373  0035BE  D014               	goto	l4023
  8374  0035C0                     l4021:
  8375  0035C0  500B               	movf	lcd_gotoxy@y,w,c
  8376  0035C2  6E0C               	movwf	??_lcd_gotoxy& (0+255),c
  8377  0035C4  6A0D               	clrf	(??_lcd_gotoxy+1)& (0+255),c
  8378                           
  8379                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8380                           ; Switch size 1, requested type "simple"
  8381                           ; Number of cases is 1, Range of values is 0 to 0
  8382                           ; switch strategies available:
  8383                           ; Name         Instructions Cycles
  8384                           ; simple_byte            4     3 (average)
  8385                           ;	Chosen strategy is simple_byte
  8386  0035C6  500D               	movf	??_lcd_gotoxy+1,w,c
  8387  0035C8  0A00               	xorlw	0	; case 0
  8388  0035CA  A4D8               	btfss	status,2,c
  8389  0035CC  D00D               	goto	l4023
  8390                           
  8391                           ; Switch size 1, requested type "simple"
  8392                           ; Number of cases is 4, Range of values is 1 to 4
  8393                           ; switch strategies available:
  8394                           ; Name         Instructions Cycles
  8395                           ; simple_byte           13     7 (average)
  8396                           ;	Chosen strategy is simple_byte
  8397  0035CE  500C               	movf	??_lcd_gotoxy,w,c
  8398  0035D0  0A01               	xorlw	1	; case 1
  8399  0035D2  B4D8               	btfsc	status,2,c
  8400  0035D4  D7EC               	goto	l4011
  8401  0035D6  0A03               	xorlw	3	; case 2
  8402  0035D8  B4D8               	btfsc	status,2,c
  8403  0035DA  D7EB               	goto	l4013
  8404  0035DC  0A01               	xorlw	1	; case 3
  8405  0035DE  B4D8               	btfsc	status,2,c
  8406  0035E0  D7EA               	goto	l4015
  8407  0035E2  0A07               	xorlw	7	; case 4
  8408  0035E4  B4D8               	btfsc	status,2,c
  8409  0035E6  D7E9               	goto	l4017
  8410  0035E8                     l4023:
  8411                           
  8412                           ;lcd_x8.c: 76:     address += x - 1;
  8413  0035E8  040E               	decf	lcd_gotoxy@x,w,c
  8414  0035EA  260F               	addwf	lcd_gotoxy@address,f,c
  8415                           
  8416                           ;lcd_x8.c: 77:     lcd_send_byte(0, (unsigned char) (0x80 | address));
  8417  0035EC  500F               	movf	lcd_gotoxy@address,w,c
  8418  0035EE  0980               	iorlw	128
  8419  0035F0  6E09               	movwf	lcd_send_byte@n,c
  8420  0035F2  0E00               	movlw	0
  8421  0035F4  ECAA  F01B         	call	_lcd_send_byte
  8422  0035F8  0012               	return		;funcret
  8423  0035FA                     __end_of_lcd_gotoxy:
  8424                           	opt callstack 0
  8425                           
  8426 ;; *************** function _lcd_send_byte *****************
  8427 ;; Defined at:
  8428 ;;		line 33 in file "lcd_x8.c"
  8429 ;; Parameters:    Size  Location     Type
  8430 ;;  cm_data         1    wreg     unsigned char 
  8431 ;;  n               1    8[COMRAM] unsigned char 
  8432 ;; Auto vars:     Size  Location     Type
  8433 ;;  cm_data         1    9[COMRAM] unsigned char 
  8434 ;; Return value:  Size  Location     Type
  8435 ;;                  1    wreg      void 
  8436 ;; Registers used:
  8437 ;;		wreg, status,2, status,0, cstack
  8438 ;; Tracked objects:
  8439 ;;		On entry : 0/0
  8440 ;;		On exit  : 0/0
  8441 ;;		Unchanged: 0/0
  8442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8443 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8444 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8446 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8447 ;;Total ram usage:        2 bytes
  8448 ;; Hardware stack levels used:    1
  8449 ;; Hardware stack levels required when called:    2
  8450 ;; This function calls:
  8451 ;;		_delay_cycles
  8452 ;;		_lcd_send_nibble
  8453 ;; This function is called by:
  8454 ;;		_lcd_init
  8455 ;;		_lcd_gotoxy
  8456 ;;		_lcd_putc
  8457 ;;		_main
  8458 ;;		_Lcd_Shift_Right
  8459 ;;		_Lcd_Shift_Left
  8460 ;; This function uses a non-reentrant model
  8461 ;;
  8462                           
  8463                           	psect	text43
  8464  003754                     __ptext43:
  8465                           	opt callstack 0
  8466  003754                     _lcd_send_byte:
  8467                           	opt callstack 28
  8468                           
  8469                           ;incstack = 0
  8470                           ;lcd_send_byte@cm_data stored from wreg
  8471  003754  6E0A               	movwf	lcd_send_byte@cm_data,c
  8472                           
  8473                           ;lcd_x8.c: 35:     lcd.rs = cm_data;
  8474  003756  B00A               	btfsc	lcd_send_byte@cm_data,0,c
  8475  003758  D002               	bra	u4075
  8476  00375A  9283               	bcf	3971,1,c
  8477  00375C  D001               	bra	u4076
  8478  00375E                     u4075:
  8479  00375E  8283               	bsf	3971,1,c
  8480  003760                     u4076:
  8481                           
  8482                           ;lcd_x8.c: 36:     delay_cycles(1);
  8483  003760  0E01               	movlw	1
  8484  003762  EC43  F01C         	call	_delay_cycles
  8485                           
  8486                           ;lcd_x8.c: 37:     delay_cycles(1);
  8487  003766  0E01               	movlw	1
  8488  003768  EC43  F01C         	call	_delay_cycles
  8489                           
  8490                           ;lcd_x8.c: 38:     lcd.enable = 0;
  8491  00376C  9683               	bcf	3971,3,c
  8492                           
  8493                           ;lcd_x8.c: 39:     lcd_send_nibble(n >> 4);
  8494  00376E  3809               	swapf	lcd_send_byte@n,w,c
  8495  003770  0B0F               	andlw	15
  8496  003772  ECA7  F01C         	call	_lcd_send_nibble
  8497                           
  8498                           ;lcd_x8.c: 40:     lcd_send_nibble(n & 0x0f);
  8499  003776  5009               	movf	lcd_send_byte@n,w,c
  8500  003778  0B0F               	andlw	15
  8501  00377A  ECA7  F01C         	call	_lcd_send_nibble
  8502                           
  8503                           ;lcd_x8.c: 41:     if (cm_data) _delaywdt((unsigned long)((200)*(4000000UL/4000000.0)));
  8504  00377E  500A               	movf	lcd_send_byte@cm_data,w,c
  8505  003780  B4D8               	btfsc	status,2,c
  8506  003782  0012               	return	
  8507  003784  0E32               	movlw	50
  8508  003786                     u5147:
  8509  003786  0004               	clrwdt	
  8510  003788  2EE8               	decfsz	wreg,f,c
  8511  00378A  D7FD               	bra	u5147
  8512  00378C  0012               	return		;funcret
  8513  00378E                     __end_of_lcd_send_byte:
  8514                           	opt callstack 0
  8515                           
  8516 ;; *************** function _lcd_send_nibble *****************
  8517 ;; Defined at:
  8518 ;;		line 23 in file "lcd_x8.c"
  8519 ;; Parameters:    Size  Location     Type
  8520 ;;  n               1    wreg     unsigned char 
  8521 ;; Auto vars:     Size  Location     Type
  8522 ;;  n               1    7[COMRAM] unsigned char 
  8523 ;; Return value:  Size  Location     Type
  8524 ;;                  1    wreg      void 
  8525 ;; Registers used:
  8526 ;;		wreg, status,2, status,0, cstack
  8527 ;; Tracked objects:
  8528 ;;		On entry : 0/0
  8529 ;;		On exit  : 0/0
  8530 ;;		Unchanged: 0/0
  8531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8533 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8534 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8535 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8536 ;;Total ram usage:        2 bytes
  8537 ;; Hardware stack levels used:    1
  8538 ;; Hardware stack levels required when called:    1
  8539 ;; This function calls:
  8540 ;;		_delay_cycles
  8541 ;; This function is called by:
  8542 ;;		_lcd_send_byte
  8543 ;;		_lcd_init
  8544 ;; This function uses a non-reentrant model
  8545 ;;
  8546                           
  8547                           	psect	text44
  8548  00394E                     __ptext44:
  8549                           	opt callstack 0
  8550  00394E                     _lcd_send_nibble:
  8551                           	opt callstack 28
  8552                           
  8553                           ;incstack = 0
  8554                           ;lcd_send_nibble@n stored from wreg
  8555  00394E  6E08               	movwf	lcd_send_nibble@n,c
  8556                           
  8557                           ;lcd_x8.c: 25:     lcd.data = n;
  8558  003950  C008  F007         	movff	lcd_send_nibble@n,??_lcd_send_nibble
  8559  003954  3A07               	swapf	??_lcd_send_nibble,f,c
  8560  003956  5083               	movf	3971,w,c
  8561  003958  1807               	xorwf	??_lcd_send_nibble,w,c
  8562  00395A  0B0F               	andlw	-241
  8563  00395C  1807               	xorwf	??_lcd_send_nibble,w,c
  8564  00395E  6E83               	movwf	3971,c
  8565                           
  8566                           ;lcd_x8.c: 27:     delay_cycles(1);
  8567  003960  0E01               	movlw	1
  8568  003962  EC43  F01C         	call	_delay_cycles
  8569                           
  8570                           ;lcd_x8.c: 28:     lcd.enable = 1;
  8571  003966  8683               	bsf	3971,3,c
  8572                           
  8573                           ;lcd_x8.c: 29:     _delaywdt((unsigned long)((2)*(4000000UL/4000000.0)));
  8574  003968  0004               	clrwdt	
  8575  00396A  F000               	nop		;2 cycle nop
  8576                           
  8577                           ;lcd_x8.c: 30:     lcd.enable = 0;
  8578  00396C  9683               	bcf	3971,3,c
  8579  00396E  0012               	return		;funcret
  8580  003970                     __end_of_lcd_send_nibble:
  8581                           	opt callstack 0
  8582                           
  8583 ;; *************** function _delay_cycles *****************
  8584 ;; Defined at:
  8585 ;;		line 15 in file "lcd_x8.c"
  8586 ;; Parameters:    Size  Location     Type
  8587 ;;  n               1    wreg     unsigned char 
  8588 ;; Auto vars:     Size  Location     Type
  8589 ;;  n               1    3[COMRAM] unsigned char 
  8590 ;;  x               2    4[COMRAM] int 
  8591 ;; Return value:  Size  Location     Type
  8592 ;;                  1    wreg      void 
  8593 ;; Registers used:
  8594 ;;		wreg, status,2, status,0
  8595 ;; Tracked objects:
  8596 ;;		On entry : 0/0
  8597 ;;		On exit  : 0/0
  8598 ;;		Unchanged: 0/0
  8599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8601 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8602 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8603 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8604 ;;Total ram usage:        6 bytes
  8605 ;; Hardware stack levels used:    1
  8606 ;; This function calls:
  8607 ;;		Nothing
  8608 ;; This function is called by:
  8609 ;;		_lcd_send_nibble
  8610 ;;		_lcd_send_byte
  8611 ;; This function uses a non-reentrant model
  8612 ;;
  8613                           
  8614                           	psect	text45
  8615  003886                     __ptext45:
  8616                           	opt callstack 0
  8617  003886                     _delay_cycles:
  8618                           	opt callstack 28
  8619                           
  8620                           ;incstack = 0
  8621                           ;delay_cycles@n stored from wreg
  8622  003886  6E04               	movwf	delay_cycles@n,c
  8623                           
  8624                           ;lcd_x8.c: 16:     int x;;lcd_x8.c: 17:     for (x = 0; x <= n; x++) {
  8625  003888  0E00               	movlw	0
  8626  00388A  6E06               	movwf	delay_cycles@x+1,c
  8627  00388C  0E00               	movlw	0
  8628  00388E  6E05               	movwf	delay_cycles@x,c
  8629  003890  D003               	goto	l2839
  8630  003892                     l12:
  8631  003892  0004               	clrwdt		;# 
  8632                           
  8633                           ;lcd_x8.c: 19:     }
  8634  003894  4A05               	infsnz	delay_cycles@x,f,c
  8635  003896  2A06               	incf	delay_cycles@x+1,f,c
  8636  003898                     l2839:
  8637  003898  5004               	movf	delay_cycles@n,w,c
  8638  00389A  6E01               	movwf	??_delay_cycles& (0+255),c
  8639  00389C  6A02               	clrf	(??_delay_cycles+1)& (0+255),c
  8640  00389E  5005               	movf	delay_cycles@x,w,c
  8641  0038A0  5C01               	subwf	??_delay_cycles,w,c
  8642  0038A2  5002               	movf	??_delay_cycles+1,w,c
  8643  0038A4  0A80               	xorlw	128
  8644  0038A6  6E03               	movwf	(??_delay_cycles+2)& (0+255),c
  8645  0038A8  5006               	movf	delay_cycles@x+1,w,c
  8646  0038AA  0A80               	xorlw	128
  8647  0038AC  5803               	subwfb	(??_delay_cycles+2)& (0+255),w,c
  8648  0038AE  A0D8               	btfss	status,0,c
  8649  0038B0  0012               	return	
  8650  0038B2  D7EF               	goto	l12
  8651  0038B4                     __end_of_delay_cycles:
  8652                           	opt callstack 0
  8653                           
  8654 ;; *************** function _delay_ms *****************
  8655 ;; Defined at:
  8656 ;;		line 118 in file "test.c"
  8657 ;; Parameters:    Size  Location     Type
  8658 ;;  n               2    0[COMRAM] unsigned int 
  8659 ;; Auto vars:     Size  Location     Type
  8660 ;;  i               2    2[COMRAM] int 
  8661 ;; Return value:  Size  Location     Type
  8662 ;;                  1    wreg      void 
  8663 ;; Registers used:
  8664 ;;		wreg, status,2, status,0
  8665 ;; Tracked objects:
  8666 ;;		On entry : 0/0
  8667 ;;		On exit  : 0/0
  8668 ;;		Unchanged: 0/0
  8669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8670 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8671 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8673 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8674 ;;Total ram usage:        4 bytes
  8675 ;; Hardware stack levels used:    1
  8676 ;; This function calls:
  8677 ;;		Nothing
  8678 ;; This function is called by:
  8679 ;;		_lcd_init
  8680 ;;		_lcd_putc
  8681 ;;		_main
  8682 ;; This function uses a non-reentrant model
  8683 ;;
  8684                           
  8685                           	psect	text46
  8686  003904                     __ptext46:
  8687                           	opt callstack 0
  8688  003904                     _delay_ms:
  8689                           	opt callstack 29
  8690                           
  8691                           ;test.c: 118: void delay_ms(unsigned int n);test.c: 119: {;test.c: 120:     int i;;test.
      +                          c: 121:     for (i=0; i < n; i++){
  8692                           
  8693                           ;incstack = 0
  8694  003904  0E00               	movlw	0
  8695  003906  6E04               	movwf	delay_ms@i+1,c
  8696  003908  0E00               	movlw	0
  8697  00390A  6E03               	movwf	delay_ms@i,c
  8698  00390C  D007               	goto	l169
  8699  00390E                     l4005:
  8700                           
  8701                           ;test.c: 122:          _delaywdt((unsigned long)((1)*(4000000UL/4000.0))) ;
  8702  00390E  0EC8               	movlw	200
  8703  003910                     u5157:
  8704  003910  0004               	clrwdt	
  8705  003912  0004               	clrwdt	
  8706  003914  2EE8               	decfsz	wreg,f,c
  8707  003916  D7FC               	bra	u5157
  8708                           
  8709                           ;test.c: 123:     }
  8710  003918  4A03               	infsnz	delay_ms@i,f,c
  8711  00391A  2A04               	incf	delay_ms@i+1,f,c
  8712  00391C                     l169:
  8713  00391C  5001               	movf	delay_ms@n,w,c
  8714  00391E  5C03               	subwf	delay_ms@i,w,c
  8715  003920  5002               	movf	delay_ms@n+1,w,c
  8716  003922  5804               	subwfb	delay_ms@i+1,w,c
  8717  003924  B0D8               	btfsc	status,0,c
  8718  003926  0012               	return	
  8719  003928  D7F2               	goto	l4005
  8720  00392A                     __end_of_delay_ms:
  8721                           	opt callstack 0
  8722                           
  8723                           	psect	rparam
  8724  0000                     tosu	equ	0xFFF
  8725                           tosh	equ	0xFFE
  8726                           tosl	equ	0xFFD
  8727                           stkptr	equ	0xFFC
  8728                           pclatu	equ	0xFFB
  8729                           pclath	equ	0xFFA
  8730                           pcl	equ	0xFF9
  8731                           tblptru	equ	0xFF8
  8732                           tblptrh	equ	0xFF7
  8733                           tblptrl	equ	0xFF6
  8734                           tablat	equ	0xFF5
  8735                           prodh	equ	0xFF4
  8736                           prodl	equ	0xFF3
  8737                           indf0	equ	0xFEF
  8738                           postinc0	equ	0xFEE
  8739                           postdec0	equ	0xFED
  8740                           preinc0	equ	0xFEC
  8741                           plusw0	equ	0xFEB
  8742                           fsr0h	equ	0xFEA
  8743                           fsr0l	equ	0xFE9
  8744                           wreg	equ	0xFE8
  8745                           indf1	equ	0xFE7
  8746                           postinc1	equ	0xFE6
  8747                           postdec1	equ	0xFE5
  8748                           preinc1	equ	0xFE4
  8749                           plusw1	equ	0xFE3
  8750                           fsr1h	equ	0xFE2
  8751                           fsr1l	equ	0xFE1
  8752                           bsr	equ	0xFE0
  8753                           indf2	equ	0xFDF
  8754                           postinc2	equ	0xFDE
  8755                           postdec2	equ	0xFDD
  8756                           preinc2	equ	0xFDC
  8757                           plusw2	equ	0xFDB
  8758                           fsr2h	equ	0xFDA
  8759                           fsr2l	equ	0xFD9
  8760                           status	equ	0xFD8


Data Sizes:
    Strings     111
    Constant    0
    Data        4
    BSS         228
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    123     127
    BANK0           128     88     108
    BANK1           256     64     208
    BANK2           256      0      64
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_19(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_19(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_14(CODE[4]), STR_13(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_14(CODE[4]), STR_13(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 43
		 -> STR_8(CODE[43]), STR_7(CODE[7]), STR_6(CODE[12]), STR_5(CODE[11]), 
		 -> STR_2(CODE[6]), STR_1(CODE[13]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 64
		 -> main@Buffer(BANK1[64]), J(BANK2[64]), F(BANK1[64]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 64
		 -> main@Buffer(BANK1[64]), J(BANK2[64]), F(BANK1[64]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1200_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 64
		 -> main@Buffer(BANK1[64]), J(BANK2[64]), F(BANK1[64]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 64
		 -> main@Buffer(BANK1[64]), J(BANK2[64]), F(BANK1[64]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 43
		 -> STR_8(CODE[43]), STR_7(CODE[7]), STR_6(CODE[12]), STR_5(CODE[11]), 
		 -> STR_2(CODE[6]), STR_1(CODE[13]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 43
		 -> STR_8(CODE[43]), STR_7(CODE[7]), STR_6(CODE[12]), STR_5(CODE[11]), 
		 -> STR_2(CODE[6]), STR_1(CODE[13]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 43
		 -> STR_8(CODE[43]), STR_7(CODE[7]), STR_6(CODE[12]), STR_5(CODE[11]), 
		 -> STR_2(CODE[6]), STR_1(CODE[13]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    send_string_no_lib@p	PTR unsigned char  size(2) Largest target is 64
		 -> main@Buffer(BANK1[64]), STR_4(CODE[1]), STR_3(CODE[1]), 

    lcd_puts@s	PTR unsigned char  size(2) Largest target is 64
		 -> J(BANK2[64]), F(BANK1[64]), 


Critical Paths under _main in COMRAM

    _send_string_no_lib->_send_byte_no_lib
    _read_adc_voltage->___fldiv
    ___xxtofl->___wmul
    _lcd_init->_lcd_send_byte
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->_read_adc_voltage
    ___flge->___flmul
    ___fldiv->___xxtofl
    _atoi->_isspace
    _lcd_puts->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_send_byte
    _lcd_send_byte->_lcd_send_nibble
    _lcd_send_nibble->_delay_cycles

Critical Paths under _main in BANK0

    _main->_sprintf
    _display->_sprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                64    64      0   74328
                                              0 BANK1     64    64      0
                             ___flge
                            ___flmul
                           _delay_ms
                            _display
                          _initPorts
                    _init_adc_no_lib
                           _lcd_init
                           _lcd_putc
                      _lcd_send_byte
                   _read_adc_voltage
                 _send_string_no_lib
                        _setupSerial
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _setupSerial                                          1     1      0       2
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _send_string_no_lib                                   2     0      2     447
                                              1 COMRAM     2     0      2
                   _send_byte_no_lib
 ---------------------------------------------------------------------------------
 (2) _send_byte_no_lib                                     1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _read_adc_voltage                                    11     7      4    3133
                                             45 COMRAM    11     7      4
                            ___fldiv
                             ___wmul
                           ___xxtofl
                _read_adc_raw_no_lib
 ---------------------------------------------------------------------------------
 (2) _read_adc_raw_no_lib                                  7     5      2      45
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              6 COMRAM    14    10      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0    1266
                                             10 COMRAM     1     1      0
                           _delay_ms
                      _lcd_send_byte
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (1) _init_adc_no_lib                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initPorts                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display                                              0     0      0   33048
                         _lcd_gotoxy
                           _lcd_puts
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8   29505
                                             70 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   28386
                                            115 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           50    44      6   28006
                                            105 COMRAM    10     4      6
                                             56 BANK0     14    14      0
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   22149
                                             93 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3165
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             45 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2889
                                             81 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2504
                                             56 COMRAM    25    17      8
                   _read_adc_voltage (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     942
                                             81 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2159
                                             20 COMRAM    25    17      8
                             ___wmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1456
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     463
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _lcd_puts                                             2     0      2    2434
                                             18 COMRAM     2     0      2
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (1) _lcd_putc                                             3     3      0    2237
                                             15 COMRAM     3     3      0
                           _delay_ms
                         _lcd_gotoxy
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (2) _lcd_gotoxy                                           5     4      1    1109
                                             10 COMRAM     5     4      1
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (1) _lcd_send_byte                                        2     1      1     810
                                              8 COMRAM     2     1      1
                       _delay_cycles
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (2) _lcd_send_nibble                                      2     2      0      68
                                              6 COMRAM     2     2      0
                       _delay_cycles
 ---------------------------------------------------------------------------------
 (3) _delay_cycles                                         6     6      0      46
                                              0 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             4     2      2     274
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___flge
     ___flmul (ARG)
       _read_adc_voltage (ARG)
         ___fldiv
           ___wmul (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
         ___wmul
         ___xxtofl
           ___wmul (ARG)
         _read_adc_raw_no_lib
   ___flmul
     _read_adc_voltage (ARG)
       ___fldiv
         ___wmul (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       ___wmul
       ___xxtofl
         ___wmul (ARG)
       _read_adc_raw_no_lib
   _delay_ms
   _display
     _lcd_gotoxy
       _lcd_send_byte
         _delay_cycles
         _lcd_send_nibble
           _delay_cycles
     _lcd_puts
       _lcd_putc
         _delay_ms
         _lcd_gotoxy
           _lcd_send_byte
             _delay_cycles
             _lcd_send_nibble
               _delay_cycles
         _lcd_send_byte
           _delay_cycles
           _lcd_send_nibble
             _delay_cycles
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
               ___wmul (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
             ___fleq
             ___flge
               ___flmul (ARG)
                 _read_adc_voltage (ARG)
                   ___fldiv
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                   ___wmul
                   ___xxtofl
                     ___wmul (ARG)
                   _read_adc_raw_no_lib
             ___flmul
               _read_adc_voltage (ARG)
                 ___fldiv
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                 ___wmul
                 ___xxtofl
                   ___wmul (ARG)
                 _read_adc_raw_no_lib
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
                 _read_adc_voltage (ARG)
                   ___fldiv
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                   ___wmul
                   ___xxtofl
                     ___wmul (ARG)
                   _read_adc_raw_no_lib
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper
   _initPorts
   _init_adc_no_lib
   _lcd_init
     _delay_ms
     _lcd_send_byte
       _delay_cycles
       _lcd_send_nibble
         _delay_cycles
     _lcd_send_nibble
       _delay_cycles
   _lcd_putc
     _delay_ms
     _lcd_gotoxy
       _lcd_send_byte
         _delay_cycles
         _lcd_send_nibble
           _delay_cycles
     _lcd_send_byte
       _delay_cycles
       _lcd_send_nibble
         _delay_cycles
   _lcd_send_byte
     _delay_cycles
     _lcd_send_nibble
       _delay_cycles
   _read_adc_voltage
     ___fldiv
       ___wmul (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
     ___wmul
     ___xxtofl
       ___wmul (ARG)
     _read_adc_raw_no_lib
   _send_string_no_lib
     _send_byte_no_lib
   _setupSerial
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
             ___wmul (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
           ___fleq
           ___flge
             ___flmul (ARG)
               _read_adc_voltage (ARG)
                 ___fldiv
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                 ___wmul
                 ___xxtofl
                   ___wmul (ARG)
                 _read_adc_raw_no_lib
           ___flmul
             _read_adc_voltage (ARG)
               ___fldiv
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
               ___wmul
               ___xxtofl
                 ___wmul (ARG)
               _read_adc_raw_no_lib
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
               _read_adc_voltage (ARG)
                 ___fldiv
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                 ___wmul
                 ___xxtofl
                   ___wmul (ARG)
                 _read_adc_raw_no_lib
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
               ___wmul (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
         _isdigit
         _isupper
         _strncmp
         _tolower
           _isupper

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      40       9       25.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     40      D0       7       81.3%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     58      6C       5       84.4%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     7B      7F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1FB      34        0.0%
DATA                 0      0     1FB       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Jul 23 04:28:47 2022

           ?_read_adc_voltage 002E                             _F 0150                             _J 0200  
                ___fldiv@aexp 002D                  ___fldiv@bexp 002C                  ___fldiv@sign 0025  
          ??_read_adc_voltage 0032                            l12 3892                            l93 3996  
                          l94 3994                            _SP 00E0                ?_lcd_send_byte 0009  
                ___awdiv@sign 0006           ___wmul@multiplicand 0003                   __CFG_BORV$3 000000  
                __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000  
                __CFG_CP3$OFF 000000                   __CFG_OSC$XT 000000                   __CFG_LVP$ON 000000  
                 __CFG_WDT$ON 000000                           l200 36F2                           l201 36F0  
                         l314 1690                           l247 30CC                           l169 391C  
                         l177 2954                           l178 29BC                           l288 13AE  
                         l652 2D9A                           l932 23D8                           l916 2306  
                         l941 243E                           l917 22E4                           l942 243A  
                         l971 2642                           l982 26B0                           l983 26AC  
                __CFG_CPB$OFF 000000                  __CFG_CPD$OFF 000000                           _lcd 000F83  
                         _pad 309E                  ___awmod@sign 0006     read_adc_voltage@raw_value 0036  
                         wreg 000FE8                  ___flmul@aexp 004A                  ___flmul@bexp 004B  
                ___flmul@sign 0045                  ___flmul@temp 0050                  ___flmul@prod 004C  
                 lcd_gotoxy@x 000E                   lcd_gotoxy@y 000B                  ___fltol@exp1 000A  
                        l1001 1EF2                          l1010 210A                          l1011 2106  
                        l1018 2190                          l1042 2AC4                          l1109 286E  
                        l1049 2B42                          l3005 23FC                          l3021 241C  
                        l3015 2412                          l1097 2CFC                          l3041 2484  
                        l3105 2E4E                          l3121 3514                          l4011 35AE  
                        l3203 253C                          l3115 2E98                          l4005 390E  
                        l4013 35B2                          l4021 35C0                          l3301 2750  
                        l3221 258A                          l3053 24B2                          l3109 2E58  
                        l1189 3688                          l4015 35B6                          l4023 35E8  
                        l3215 2574                          l3207 2540                          l3055 24B4  
                        l4017 35BA                          l3321 1E9E                          l3049 24AA  
                        l3153 28CE                          l4121 1E1C                          l3323 1EA2  
                        l3139 27D0                          l3083 30C4                          l4115 1DE0  
                        l4051 1ABA                          l4131 1E3E                          l4211 2AF2  
                        l4141 33A2                          l3501 32E4                          l3253 2640  
                        l3229 25A2                          l3421 216C                          l3341 1EE2  
                        l3325 1EB2                          l3157 28FC                          l3149 2890  
                        l3093 311A                          l3085 30D6                          l4125 1E26  
                        l4213 2AF8                          l4205 2AD4                          l4143 33BA  
                        l4151 33DE                          l3247 261A                          l3239 25F2  
                        l3183 24FC                          l3079 30B6                          l4071 1BB0  
                        l4047 1A8E                          l4223 2B68                          l4215 2B04  
                        l4145 33C6                          l3521 332A                          l3513 3312  
                        l3505 32F2                          l3265 2676                          l3433 21AE  
                        l3417 214E                          l3089 30EE                          l4049 1AAC  
                        l4161 34C2                          l4241 2BB4                          l4225 2B74  
                        l4217 2B2A                          l4147 33D2                          l4171 393E  
                        l3507 32FA                          l3259 2658                          l3187 2500  
                        l3339 1EDE                          l3611 2F4A                          l3603 2F22  
                        l4067 1B84                          l4163 34E8                          l3453 31D2  
                        l3517 331C                          l3293 2742                          l3285 26F4  
                        l3533 319C                          l3349 1F10                          l3605 2F2E  
                        l3701 1220                          l4069 1BA2                          l4167 392C  
                        l3623 374C                          l3391 20B2                          l2911 225C  
                        l2903 223C                          l4095 1CE6                          l4087 1C8A  
                        l4255 360E                          l3465 31F8                          l3481 322A  
                        l3289 2718                          l3537 31BA                          l3529 3168  
                        l3553 2D84                          l3545 2D3A                          l3721 1306  
                        l4361 29BE                          l3467 3200                          l3459 31E2  
                        l3299 274E                          l2827 3016                          l2843 3798  
                        l2851 38BE                          l3715 127E                          l4099 1D10  
                        l4371 2A46                          l3485 3238                          l3477 3220  
                        l3549 2D6E                          l3397 20D0                          l2941 2298  
                        l2853 38C2                          l3813 1688                          l3805 1630  
                        l3741 13B8                          l3725 1342                          l3709 123A  
                        l3653 10BC                          l4269 3626                          ?_pad 0011  
                        l2839 3898                          l3559 2DD2                          l3567 3874  
                        l2847 37AE                          l3903 1926                          l3815 16AA  
                        l3719 12B8                          l4295 345A                          l3497 32D8  
                        l2953 22F2                          l3593 2F0A                          l3577 2EC0  
                        l3913 1952                          l3737 1396                          l3665 10EA  
                        l3673 1100                          l4369 2A30                          l2955 22F6  
                        l2875 21F0                          l3827 172C                          l3755 1406  
                        l3747 13BE                          l3683 116C                          l3691 11B4  
                        l4299 3484                          l3597 2F1A                          l3773 144C  
                        l3757 140A                          l3685 1184                          l3943 2BD8  
                        l2879 21F4                          l3839 175C                          l3847 177C  
                        l3855 17A0                          l3863 1838                          l3783 1486  
                        l3791 157C                          l3767 1428                          l3687 118E  
                        l3961 2C3A                          l3953 2C22                          l3945 2BDC  
                        l2977 234C                          l2969 232A                          l3929 19B2  
                        l3777 145C                          l3963 2C40                          l2979 2350  
                        l2987 2362                          l2899 2238                          l3891 18C6  
                        l3875 187A                          l3965 2C68                          l2997 23C8  
                        l3893 18D0                          l3959 2C32                          l3799 15F2  
                        l3991 2F94                          l3969 2C9C                          l3989 2F86  
                        STR_1 102C                          STR_2 1057                          STR_3 1044  
                        STR_4 1044                          STR_5 1045                          STR_6 1039  
                        STR_7 1050                          STR_8 1001                          STR_9 105D  
                        _LATA 000F89                          u3030 2490                          u3110 2E14  
                        _LATB 000F8A                          _LATC 000F8B                          u3200 366E  
                        _LATD 000F8C                          _LATE 000F8D                          u3210 3670  
                        u3115 2E0A                          u3300 28AE                          u4030 2F34  
                        u3230 279E                          u4110 10DA                          u3160 2E90  
                        u3240 27BE                          u2600 300E                          u3305 28A4  
                        u3330 3850                          u3170 2E92                          u3155 2E72  
                        u3235 2794                          u3340 3852                          u4060 3748  
                        u2620 3056                          u3180 354E                          u4140 1142  
                        u5100 34A6                          u3510 26A6                          u4230 136A  
                        u4150 1144                          u5030 2B7E                          u3280 284E  
                        u3265 27E8                          u3266 27EE                          u4330 1424  
                        u4075 375E                          u3267 27FC                          u3187 3544  
                        u5107 349C                          u4076 3760                          u3700 2100  
                        u2820 230E                          u2660 3820                          u4500 185C  
                        u4260 13A4                          u4180 11F6                          u3285 2844  
                        u3550 2702                          u2670 3822                          u4190 11F8  
                        u3800 3204                          u3560 2726                          u3650 1EFE  
                        u2770 22BA                          u4290 13D6                          u5090 347C  
                        u5147 3786                          u4620 2C1E                          u3740 215C  
                        u3660 2074                          u2780 22CA                          u5157 3910  
                        u3910 31B6                          u3750 217A                          u2950 2420  
                        u2790 22CC                          u4640 2CCC                          u4560 193C  
                        u4720 2FDA                          u3665 206A                          u5097 3472  
                        u4650 2CCE                          u2970 2434                          u3860 32FE  
                        u4580 199C                          u4900 1D94                          u4820 1BE8  
                        u4590 199E                          u4830 1BEA                          u4840 1BF8  
                        u4770 1AF2                          u3980 2EAE                          u4780 1AF4  
                        u3990 2EDE                          u4790 1B02                          u4890 1D92  
                        u3995 2ED4              ?_lcd_send_nibble 0001                          _dbuf 0100  
                        _atoi 2BC6                          _main 290E              _send_byte_no_lib 3990  
                        _prec 007C                          _nout 00E4                          pad@i 0018  
                        pad@p 0015                          fsr1h 000FE2                          fsr2h 000FDA  
                        indf1 000FE7                          indf2 000FDF                          fsr1l 000FE1  
                        pad@w 001A                          fsr2l 000FD9                 ___fpclassifyf 2DD6  
                        prodh 000FF4                          prodl 000FF3                          start 0300  
               __CFG_IESO$OFF 000000               ___fldiv@new_exp 0026                  _tolower$1272 000D  
               __CFG_MCLRE$ON 000000                  ___param_bank 000000                         ??_pad 0017  
        __end_of_delay_cycles 38B4                 ___fltol@sign1 0009                         ?_atoi 0008  
             __end_of___fladd 24D0                         ?_main 0001               __end_of___fldiv 2758  
             __end_of___awdiv 3242               __end_of___flneg 3886                         STR_10 1065  
                       STR_13 1061                         STR_14 1069                         STR_17 106D  
                       STR_19 106D               __end_of___awmod 3334               __end_of___flmul 21C4  
             __end_of___flsub 36D8               __end_of___fltol 2F5C               ___awdiv@divisor 0003  
             ___awdiv@counter 0005                         _RCREG 000FAE                         _RCSTA 000FAB  
                vfpfcnvrt@fmt 006C                         _SPBRG 000FAF       read_adc_voltage@channel 0038  
                       _TRISA 000F92                         _TRISB 000F93                         _TRISC 000F94  
                       _TRISD 000F95                         _TRISE 000F96                         _TXREG 000FAD  
                       _TXSTA 000FAC                 __CFG_PWRT$OFF 000000                 __CFG_WRT0$OFF 000000  
               __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000  
              __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000  
              __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000                 __CFG_WRTB$OFF 000000  
             __end_of_display 339E                 __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000  
              __CFG_EBTRB$OFF 000000                         _flags 007E                         _fputc 2FFE  
                       _fputs 378E               __end_of_isdigit 3858               _init_adc_no_lib 39A0  
                       atoi@n 0015                         pad@fp 0011                         atoi@s 0008  
                       _width 00E6                         _putch 39B0               __end_of_isspace 3754  
             __end_of_isupper 3828                         tablat 000FF5                         status 000FD8  
     read_adc_voltage@voltage 0032               __end_of_sprintf 35AA                ?___fpclassifyf 0001  
             __end_of_tolower 3692               __end_of_strncmp 2FFE                __CFG_PBADEN$ON 000000  
             __initialization 3402                  __end_of_atoi 2D06                  __end_of_main 2A86  
             ??_lcd_send_byte 000A                        ??_atoi 000A                        ??_main 007C  
               __activetblptr 000002                        _ADCON0 000FC2                        _ADCON1 000FC1  
                      _ADCON2 000FC0                        ?_fputc 0001                        ?_fputs 000A  
                      _ADRESH 000FC4                        _ADRESL 000FC3              ___awdiv@dividend 0001  
                      ?_putch 0001                        _INTCON 000FF2                        _SPBRGH 000FB0  
            __end_of___xxtofl 2BC6              __end_of_delay_ms 392A                __CFG_XINST$OFF 000000  
                vfprintf@cfmt 007A              __end_of_lcd_init 3646                        ___flge 2D06  
            __end_of_lcd_putc 3402                        ___fleq 3134              __end_of_lcd_puts 394E  
                   ??___fladd 0009                        ___wmul 38DE                     ??___fldiv 001D  
                   ??___awdiv 0005                     ??___flneg 0005                __CFG_STVREN$ON 000000  
                   ??___awmod 0005                     ??___flmul 0041                     ??___flsub 005A  
                   ??___fltol 0005                        _efgtoa 1072                        _floorf 2758  
                      clear_0 3428                        clear_1 3434                        clear_2 3440  
            ___awdiv@quotient 0007               ___awmod@divisor 0003               ___awmod@counter 0005  
                      pad@buf 0013                        _strcpy 3504                        _strlen 38B4  
                   ??_display 007C       __end_of_init_adc_no_lib 39AC                        fputc@c 0001  
                      fputs@c 000E                        fputs@i 000F                        fputs@s 000A  
                   ??_isdigit 0003               ___fpclassifyf@e 0009               ___fpclassifyf@u 000B  
             ___fpclassifyf@x 0001                  __mediumconst 0000                     ??_isspace 0003  
         send_string_no_lib@p 0002                        tblptrh 000FF7                     ??_isupper 0003  
                      tblptrl 000FF6                        tblptru 000FF8                        putch@c 0001  
          _send_string_no_lib 3458              __end_of_vfprintf 3504                  ?_setupSerial 0001  
                   ??_sprintf 007C                     ??_tolower 0009                     ??_strncmp 0007  
                  ___flge@ff1 0052                    ___flge@ff2 0056               ??___fpclassifyf 0005  
                ___xxtofl@arg 0011                  ___xxtofl@exp 0010                  ___xxtofl@val 0007  
                  ___fleq@ff1 0001                    ___fleq@ff2 0005                    __accesstop 0080  
     __end_of__initialization 344E                    ___flneg@f1 0001           ?_send_string_no_lib 0002  
               ___rparam_used 000001                    ___fltol@f1 0001                __pcstackCOMRAM 0001  
       __size_of_delay_cycles 002E                  __pidataBANK0 39AC                 __end_of_fputc 309E  
               __end_of_fputs 37C6                 __end_of_putch 39B2          ??_send_string_no_lib 0004  
    __end_of_send_byte_no_lib 39A0     __size_of_read_adc_voltage 0082             lcd_gotoxy@address 000F  
                     ??_fputc 0005                       ??_fputs 000E                       ??_putch 0001  
                  __pbssBANK0 00D8                    __pbssBANK1 0100                    __pbssBANK2 0200  
 __end_of_read_adc_raw_no_lib 3716                  _delay_cycles 3886            __size_of_initPorts 0032  
                  _efgtoa$660 0088                    _efgtoa$654 0084                    _efgtoa$655 0086  
                  _efgtoa$664 008A                    _efgtoa$665 008C                    _efgtoa$666 008E  
              lcd_send_byte@n 0009                       ?___flge 0052                       ?___fleq 0001  
                     ?___wmul 0001                       ?_efgtoa 005E              lcd_send_nibble@n 0008  
                     ?_floorf 002E                       ?_strcpy 0001                       ?_strlen 0001  
            ?_init_adc_no_lib 0001                     ?___xxtofl 0007                     ?_delay_ms 0001  
          __size_of_vfpfcnvrt 0482                    _lcd_gotoxy 35AA                     ?_lcd_init 0001  
                   ?_lcd_putc 0001                     ?_lcd_puts 0013                       __Hparam 0000  
                     __Lparam 0000      __size_of_lcd_send_nibble 0022               __size_of___flge 00D0  
             __size_of___fleq 008A                       ___fladd 21C4                       ___fldiv 24D0  
                     ___awdiv 31BE                       ___flneg 3858                       ___awmod 32C4  
                     ___flmul 1E72                       ___flsub 3692                       ___fltol 2EA2  
             __size_of___wmul 0026                     ?_vfprintf 0074                  __psmallconst 1000  
             __size_of_efgtoa 097E               __size_of_floorf 01B6                       __pcinit 3402  
                     __ramtop 1000                       __ptext0 290E                       __ptext1 3970  
                     __ptext2 3458                       __ptext3 3990                       __ptext4 3242  
                     __ptext5 36D8                       __ptext6 2A86                       __ptext7 35FA  
                     __ptext8 39A0                       __ptext9 37C6                       _display 3334  
             __size_of_strcpy 0054               __size_of_strlen 002A             __end_of_initPorts 37F8  
                __size_of_pad 0096                       _isdigit 3828                    ??___xxtofl 000B  
            ___awmod@dividend 0001                       _isspace 3716                    ??_delay_ms 0003  
                     _isupper 37F8                       efgtoa@c 0064                       efgtoa@d 0098  
                     efgtoa@e 00B0                       efgtoa@f 0060                       efgtoa@g 00AC  
                     efgtoa@h 00A2                       efgtoa@i 00AA                       efgtoa@l 00A6  
                     efgtoa@m 0094                       efgtoa@n 00B2                       efgtoa@p 009C  
                     efgtoa@t 0090                       efgtoa@u 00B4                       efgtoa@w 009F  
                     atoi@neg 000E                       _sprintf 3558                       _tolower 3646  
                  ??_lcd_init 000B                       _strncmp 2F5C                    ??_lcd_putc 0010  
                  ??_lcd_puts 0015          end_of_initialization 344E                       floorf@e 003C  
                     floorf@m 0038                       floorf@u 003E                       floorf@x 002E  
        __size_of_setupSerial 0020                       fputc@fp 0003                 __Lmediumconst 0000  
                     fputs@fp 000C          lcd_send_byte@cm_data 000A             __end_of_vfpfcnvrt 1E72  
                  efgtoa@mode 00A1                    efgtoa@sign 009A                     _RCSTAbits 000FAB  
                     postdec1 000FE5                       postdec2 000FDD                       postinc0 000FEE  
                     postinc1 000FE6                       postinc2 000FDE                    ??_vfprintf 007A  
       __end_of_lcd_send_byte 378E                       strcpy@d 0009                       strlen@a 0003  
                     strcpy@s 0007                       strlen@s 0001                     _PORTEbits 000F84  
                 ___fladd@grs 0010                 ___xxtofl@sign 000F              _read_adc_voltage 3242  
                 ?_lcd_gotoxy 000B                   ___fldiv@grs 0028                    main@Buffer 0190  
                 ___fldiv@rem 0021               _LCD_INIT_STRING 00E8                   ___flmul@grs 0046  
                   _TXSTAbits 000FAC             send_byte_no_lib@c 0001                __end_of___flge 2DD6  
              __end_of___fleq 31BE                   vfpfcnvrt@ap 006E                   vfpfcnvrt@ct 00C2  
                 vfpfcnvrt@fp 006A                __end_of___wmul 3904                   _BAUDCONbits 000FB8  
              __end_of_efgtoa 19F0                 delay_cycles@n 0004                 delay_cycles@x 0005  
           ??_lcd_send_nibble 0007                __end_of_floorf 290E                    floorf@F524 00D8  
           ?_send_byte_no_lib 0001                __end_of_strcpy 3558                __end_of_strlen 38DE  
         start_initialization 3402            ??_send_byte_no_lib 0001                   __end_of_pad 3134  
       __end_of___fpclassifyf 2EA2                   vfprintf@fmt 0076                      ??___flge 005A  
                    ??___fleq 0009           __size_of_lcd_gotoxy 0050                      ??___wmul 0005  
                    ??_efgtoa 0065                   __pdataBANK0 00E8  read_adc_raw_no_lib@raw_value 0005  
                    ??_floorf 0032              __CFG_LPT1OSC$OFF 000000   __size_of_send_string_no_lib 0056  
                    ??_strcpy 0005                      ??_strlen 0003                     ___fladd@a 0005  
                   ___fladd@b 0001                     ___fldiv@a 0019                     ___fldiv@b 0015  
                   ___flmul@a 003D                     ___flmul@b 0039                   __pbssCOMRAM 007C  
                   ___flsub@a 0056                     ___flsub@b 0052                 __pcstackBANK0 0080  
               __pcstackBANK1 0190             __size_of___xxtofl 0140             __size_of_delay_ms 0026  
           __size_of_lcd_init 004C             __size_of_lcd_putc 0064             __size_of_lcd_puts 0024  
                   _atoi$1156 0010                     _atoi$1157 0014                     _atoi$1158 0012  
           __CFG_CCP2MX$PORTC 000000  __size_of_read_adc_raw_no_lib 003E                      ?___fladd 0001  
                    ?___fldiv 0015                      ?___awdiv 0001                      ?___flneg 0001  
                    ?___awmod 0001                      ?___flmul 0039                      ?___flsub 0052  
                    ?___fltol 0001             __size_of_vfprintf 0056                      ?_display 0001  
                 __smallconst 1000                      ?_isdigit 0001                      ?_isspace 0001  
                    ?_isupper 0001                     _initPorts 37C6                      ?_sprintf 00C6  
                    ?_tolower 0007                __size_of_fputc 00A0                __size_of_fputs 0038  
                    ?_strncmp 0001                __size_of_putch 0002      __size_of_init_adc_no_lib 000C  
              ___wmul@product 0005                     delay_ms@i 0003                     delay_ms@n 0001  
                    _PIR1bits 000F9E      __end_of_read_adc_voltage 32C4              __CFG_WDTPS$32768 000000  
  read_adc_raw_no_lib@channel 0007                     _vfpfcnvrt 19F0                    _ADCON0bits 000FC2  
           ___wmul@multiplier 0001                     lcd_init@i 000B                     lcd_putc@c 0012  
                   lcd_puts@s 0013                  ??_lcd_gotoxy 000C                  _isspace$1187 0007  
                  ?_initPorts 0001                 ??_setupSerial 0001                    vfpfcnvrt@c 00C5  
                  vfpfcnvrt@f 00BE                     copy_data0 3416               _lcd_send_nibble 394E  
                    __Hrparam 0000                    vfprintf@ap 0078                      __Lrparam 0000  
                  vfprintf@fp 0074            __CFG_BOREN$SBORDIS 000000            __end_of_lcd_gotoxy 35FA  
            __size_of___fladd 030C              __size_of___fldiv 0288              __size_of___awdiv 0084  
            __size_of___flneg 002E              __size_of___awmod 0070              __size_of___flmul 0352  
            __size_of___flsub 0046              __size_of___fltol 00BA                    ?_vfpfcnvrt 006A  
          ___fpclassifyf@F463 00DC              __size_of_display 006A                    sprintf@fmt 00C8  
                    ___xxtofl 2A86              __size_of_isdigit 0030                      _delay_ms 3904  
            __size_of_isspace 003E                      __ptext10 3334                      __ptext11 3558  
                    __ptext20 38B4                      __ptext12 34AE                      __ptext21 378E  
                    __ptext13 19F0                      __ptext30 1E72                      __ptext22 2FFE  
                    __ptext14 2F5C                      __ptext31 2D06                      __ptext23 39B0  
                    __ptext15 1072                      __ptext40 392A                      __ptext32 3134  
                    __ptext24 2758                      __ptext16 3646                      __ptext41 339E  
                    __ptext33 24D0                      __ptext25 2DD6                      __ptext17 37F8  
                    __ptext42 35AA                      __ptext34 32C4                      __ptext26 2EA2  
                    __ptext18 3504                      __ptext43 3754                      __ptext35 31BE  
                    __ptext27 3692                      __ptext19 309E                      __ptext44 394E  
                    __ptext36 2BC6                      __ptext28 21C4                      __ptext45 3886  
                    __ptext37 3716                      __ptext29 3858                      __ptext46 3904  
                    __ptext38 3828                      __ptext39 38DE              __size_of_isupper 0030  
                    _lcd_init 35FA                      _lcd_putc 339E                      _lcd_puts 392A  
            __size_of_sprintf 0052              __size_of_tolower 004C                    strcpy@dest 0001  
            __size_of_strncmp 00A2        __size_of_lcd_send_byte 003A                 ?_delay_cycles 0001  
               __size_of_atoi 0140                 __size_of_main 0178     __size_of_send_byte_no_lib 0010  
         __end_of_setupSerial 3990             ??_init_adc_no_lib 0001                      efgtoa@fp 005E  
                    efgtoa@ne 0096                      efgtoa@pp 0092                      efgtoa@ou 0080  
                    _vfprintf 34AE                      isdigit@c 0001                   ??_initPorts 0001  
         _read_adc_raw_no_lib 36D8                     sprintf@ap 00D0       __end_of_lcd_send_nibble 3970  
              ??_delay_cycles 0001                      isspace@c 0001                     strcpy@src 0003  
                    isupper@c 0001                     strncmp@_l 0001                     strncmp@_r 0003  
        ?_read_adc_raw_no_lib 0001                   efgtoa@nmode 009E    __end_of_send_string_no_lib 34AE  
                 ??_vfpfcnvrt 0070                 _vfpfcnvrt$680 00B8                 _vfpfcnvrt$681 00BA  
               _vfpfcnvrt$685 00BC                 _lcd_send_byte 3754                      sprintf@f 00D2  
                    tolower@c 0007                      sprintf@s 00C6        __size_of___fpclassifyf 00CC  
                    strncmp@l 0008                      strncmp@n 0005                      strncmp@r 000A  
                 _setupSerial 3970                 ___fladd@signs 000D                  ___fladd@aexp 000E  
                ___fladd@bexp 000F         ??_read_adc_raw_no_lib 0003  
